{"version":3,"file":"static/js/938.da6d6262.chunk.js","mappings":"+NAwBMA,EAAAA,WAOJ,WAAYC,GAAa,IAAD,4BANxBC,YAAmC,GAOjCD,EAAME,SAAQ,SAACC,GAAD,OAAW,EAAKF,YAAYE,EAAKC,MAAQD,KA+CxD,OA9CA,iCAED,SAAUC,GACR,OAAOC,KAAKJ,YAAYG,KACzB,sBAED,SACED,EACAG,EACAC,GAEC,IAAD,OADAC,EACA,uDAD8B,GAW9B,OATAA,EAAQL,EAAKC,MAAQD,EAEjBI,EAAQ,GACVD,EAAKH,GAAM,SAACM,GACJA,EAAKL,QAAQI,GACjB,EAAKE,SAASD,EAAMH,EAAMC,EAAQ,EAAGC,MAIpCG,OAAOC,OAAOJ,KACtB,2BAED,SAAcL,EAASI,GAAgB,IAAD,OASpC,OAAOF,KAAKK,SAASP,GARiB,SAACA,EAAMU,GAAP,OACpCV,EAAKW,OAAOZ,SAAQ,SAACa,GAAD,OAClBA,EAAMC,UAAUd,SAAQ,SAACe,GACvB,IAAMd,EAAO,EAAKe,UAAUD,EAAEE,MAAMf,MACpCD,GAAQU,EAASV,WAIUI,KAClC,6BAED,SAAgBJ,EAASI,GAAgB,IAAD,OAStC,OAAOF,KAAKK,SAASP,GARiB,SAACA,EAAMU,GAAP,OACpCV,EAAKiB,QAAQlB,SAAQ,SAACmB,GAAD,OACnBA,EAAOC,WAAWpB,SAAQ,SAACe,GACzB,IAAMd,EAAO,EAAKe,UAAUD,EAAEE,MAAMf,MACpCD,GAAQU,EAASV,WAIUI,OAClC,EAvDGR,GA0DN,SAASwB,EAAwBC,GAC/B,OAAOA,EAAOC,SAAS,KAAOC,OAAOC,iBAAmBH,EAAOI,OAG1D,SAASC,EAAwC7B,EAAY8B,GAClE,GAAc,MAAVA,EACF,MAAO,CAACC,IAAK/B,EAAOgC,sBAAsB,EAAOC,MAAO,IAE1D,GAAc,KAAVH,EACF,MAAO,CACLC,IAAK/B,EAAM4B,QA1FoB,IA0FqB,GAAK5B,EACzDgC,qBAAsBhC,EAAM4B,QA3FG,IA4F/BK,MAAO,IAIX,IAZiF,EAY3EC,EAAY,IAAInC,EAAkBC,GAClCQ,EAAU,IAAI2B,IACdC,EAAUN,EAAMO,MAAM,sBACtBJ,EAAQ,IAAIE,IAf+D,UAiB5DC,GAjB4D,yBAiBtEZ,EAjBsE,QAkBzEc,EAAQ,0CAA0CC,KAAKf,EAAOgB,QACpE,IAAKF,EACH,iBAEF,IAtB+E,EAsB/E,UAAuDA,EAAvD,GAASG,EAAT,KAAwBC,EAAxB,KAAkCC,EAAlC,KAEMC,EAAgB5C,EAAM6C,QAAO,SAACC,GAClC,OAAIC,EAAAA,EAAAA,IAAqBL,EAASM,QAAQ,MAAO,KAExCF,EAAE1C,KAAK6C,YAAWC,EAAAA,EAAAA,IAAuBR,EAASM,QAAQ,MAAO,MAEjE,SAASG,KAAKT,GACjBI,EAAE1C,OAASsC,EAASM,QAAQ,MAAO,IACnCF,EAAE1C,KAAKqB,SAASiB,MA/BuD,UAmC5DE,GAnC4D,IAmC/E,2BAAkC,CAAC,IAAxBzC,EAAuB,QAC1BiD,EAAU7B,EAAwBkB,GAClCY,EAAY9B,EAAwBoB,GAE1CV,EAAMqB,IAAInD,GACVK,EAAQ8C,IAAInD,GACZ+B,EAAUqB,cAAcpD,EAAMiD,GAASlD,SAAQ,SAACsD,GAAD,OAAWhD,EAAQ8C,IAAIE,MACtEtB,EAAUuB,gBAAgBtD,EAAMkD,GAAWnD,SAAQ,SAACsD,GAAD,OAAWhD,EAAQ8C,IAAIE,OA1CG,gCAiBjF,2BAA8B,IAjBmD,8BA8CjF,MAAO,CACLzB,IAAK2B,MAAMC,KAAKnD,GAChByB,MAAOyB,MAAMC,KAAK1B,GAClBD,sBAAsB,K,sBC5FnB,IAAK4B,E,ubAAZ,SAAYA,GAAAA,EAAAA,KAAAA,OAAAA,EAAAA,UAAAA,YAAAA,EAAAA,gBAAAA,kBAAZ,CAAYA,IAAAA,EAAAA,KAML,IAAMC,EAAY,KACZC,EAAY,GACZC,EAAa,GACbC,EAAY,GACZC,EAAe,GACfC,EAAyB,GACzBC,EAAa,GACbC,EAAe,EACfC,EAAgB,GAChBC,EAAY,IACZC,EAAuB,EACvBC,EAA8B,GAC9BC,EAAe,EACfC,GAAoBP,EAAaM,GAAgB,EAEjDE,EAAY,EACZC,EAAe,IAEfC,EAA2C,CACtDC,KAAMlB,EAAemB,UACrBC,aAAa,EACbC,eAAe,EACfC,KAAM,EACNC,qBAAqB,I,sBC5DhB,SAASC,EAAcC,GAC5B,OAAOA,EAAQC,SAAS,KAGnB,SAASvC,EAAqBsC,GACnC,OAAOA,EAAQC,SAAS,OAGnB,SAASC,EAAgCC,EAAwBC,GACtE,OAAOA,EAAgB5C,QAAO,SAAC6C,GAAD,OAAOA,EAAEzC,WAAWuC,EAAexC,QAAQ,KAAM,QAG1E,SAASE,EAAuBmC,GACrC,OAAOA,EAAQhD,MAAM,KAAK,GAGrB,SAASsD,EAAoBN,EAAiBO,GACnD,OAAOP,EAAQrC,QAAQ,MAAO4C,EAAiBC,MAAM,YAAa,I,kSC8ChEC,E,gUCtESC,EAIRC,EAAAA,MAAW,YAAuC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,SAAUjB,EAAmB,EAAnBA,cAC3BkB,EAA6C,CACjD,CAACC,GAAIxC,EAAAA,GAAAA,KAAqByC,KAAM,aAAcC,QAAS,aACvD,CAACF,GAAIxC,EAAAA,GAAAA,UAA0ByC,KAAM,kBAAmBC,QAAS,mBAG9DrB,GACHkB,EAAQI,KAAK,CACXH,GAAIxC,EAAAA,GAAAA,gBACJyC,KAAM,QACNC,QAAS,eAIb,IAAME,EAAcR,EAAAA,SAAc,kBAAM,IAAI7D,IAAI,CAAC8D,MAAS,CAACA,IACrDQ,EAAUT,EAAAA,aAAkB,SAACI,GAAD,OAAwBF,EAASE,KAAK,CAACF,IAEzE,OAAO,SAACQ,EAAA,EAAD,CAAaF,YAAaA,EAAaL,QAASA,EAASM,QAASA,OClBrEE,EAAkB,SAACC,GAAD,gBAAmBC,KAAKC,MAAMF,EAAK,IAAO,IAA1C,MAClBG,EAAkB,SAACH,GAAD,iBAAoBA,EAAK,KAAMI,QAAQ,GAAvC,MAClBC,EAAqB,SAACL,GAAD,iBAAoBA,EAAK,KAAMI,QAAQ,GAAvC,MAWrBE,EAAc,CAClB,CACEC,eAAgB,IAChBC,WAAYH,GAEd,CACEE,eAAgB,IAChBC,WAAYL,GAEd,CACEI,eAAgB,IAChBC,WAAYL,GAEd,CACEI,eAAgB,IAChBC,WAAYL,GAEd,CACEI,eAAgB,IAChBC,WAAYL,GAEd,CACEI,eAAgB,IAChBC,WAAYL,GAEd,CACEI,eAAgB,KAChBC,WAAYT,GAEd,CACEQ,eAAgB,IAChBC,WAAYT,GAEd,CACEQ,eAAgB,IAChBC,WAAYT,GAEd,CACEQ,eAAgB,KAChBC,WAAYT,GAEd,CACEQ,eAAgB,KAChBC,WAAYT,GAEd,CACEQ,eAAgB,MAChBC,WAAYT,IAaHU,EAAsB,SAAC,GAOH,IAN/BC,EAM8B,EAN9BA,MACAC,EAK8B,EAL9BA,SACAC,EAI8B,EAJ9BA,MACAC,EAG8B,EAH9BA,QACAC,EAE8B,EAF9BA,cACAC,EAC8B,EAD9BA,WAEMC,EAAS,oBAAgB7D,EAAAA,GAAawD,EAASM,KAAtC,OACTC,EAA4B,GAC5BC,EAA4B,GAE5BC,EAAUV,EACVW,EAAaf,EAAYgB,MAAK,SAACC,GAAD,OAAOA,EAAEhB,eAAiBa,EAAU,MACxE,GAAIC,EAKF,IAJA,IAAOd,EAA8Bc,EAA9Bd,eAAgBC,EAAca,EAAdb,WACjBgB,EAAYjB,EAAiBa,EAC7BK,EAAaxB,KAAKyB,MAAMf,EAASM,KAAOO,GAAaA,EAElDG,EAAIF,EAAYE,EAAIF,EAAad,EAASiB,MAAOD,GAAKH,EAC7D,KAAIG,EAAIhB,EAASM,KAAO,IAAxB,CAGA,IAAMjB,EAAK2B,EAAIP,EACTS,EAAG,UAAM7B,EAAGI,QAAQ,IACpB0B,EAAQtB,EAAWR,GACzBmB,EAAMxB,MAAK,gBAAKoC,UAAU,OAAiBC,MAAO,CAACf,KAAMU,EAAGX,UAAAA,IAAtBa,IACtCX,EAAMvB,MACJ,gBAAKoC,UAAU,OAAiBC,MAAO,CAACf,KAAMU,EAAIM,GAAsBjB,UAAAA,GAAxE,SACGc,GADwBD,IAOjC,OACE,UAACK,EAAD,YACE,UAACC,EAAD,WACGjB,EACyB,IAAzBJ,EAAc9F,SACb,gBAEE+G,UAAU,gBACVC,MAAO,CACLf,MAAOH,EAAc,GAAKD,GAAWO,EAAU,EAC/CQ,OAAQd,EAAc,GAAKA,EAAc,IAAMM,EAAU,EACzDJ,UAAAA,GANJ,UASGoB,EAAAA,EAAAA,IAAkBtB,EAAc,GAAKA,EAAc,KARhD,sBAWPA,EAAcuB,KAAI,SAACrC,EAAIsC,GACtB,IAAMC,GAASvC,EAAKa,GAAWO,EACzBoB,EACI,IAARF,GAAaC,EApHA,GAoH2B5B,EAASM,MAAQ,GAAyB,EAEpF,OACE,gBAEEc,UAAU,iBACVC,MAAO,CAACf,KAAMsB,EAAQC,EAAaxB,UAAAA,GAHrC,SAKGX,EAAmBL,EAAKa,IAL3B,oBACoByB,WAS1B,UAACG,EAAD,CAAyBT,MAAO,CAACJ,MAAOjB,EAASiB,MAAOc,OAAQ/B,EAAS+B,QAAzE,UACGvB,EACAL,EAAcuB,KAAI,SAACrC,EAAIsC,GAAL,OACjB,gBACEP,UAAU,iBAEVC,MAAO,CAACf,MAAOjB,EAAKa,GAAWO,GAAmB,IAARkB,GAAa,EAAI,GAAItB,UAAAA,IAHjE,oBAEoBsB,OAIrB1B,EAAQC,IACP,gBACEkB,UAAU,aACVC,MAAO,CACLf,MAAOL,EAAQC,GAAWO,EAC1BQ,MAAO3B,KAAK0C,IAAI5B,EAAWa,MAAOjB,EAASiB,QAAUhB,EAAQC,GAAWO,EAAU,IAClFJ,UAAAA,YAWRkB,EAAqBU,EAAAA,GAAAA,IAAAA,WAAH,+EAAGA,CAAH,8kBA3JC,GAyJA,GAWF5E,EAAAA,GAAgCA,EAAAA,GAI1C6E,EAAAA,EAAAA,QACKA,EAAAA,EAAAA,QAKJC,GACID,EAAAA,EAAAA,QAKK7E,EAAAA,GAKM6E,EAAAA,EAAAA,QAOXA,EAAAA,EAAAA,OACK7E,EAAAA,IAOjBmE,EAA0BS,EAAAA,GAAAA,IAAAA,WAAH,oFAAGA,CAAH,+JA/CJ,GAmDTC,EAAAA,EAAAA,MAELA,EAAAA,EAAAA,QAEME,EAAAA,EAAAA,UACYF,EAAAA,EAAAA,aAIvBJ,EAA0BG,EAAAA,GAAAA,IAAAA,WAAH,oFAAGA,CAAH,sFA5DJ,I,iCCpKZI,EAGR5D,EAAAA,MAAW,SAAC6D,GACf,OACE,UAACC,EAAD,CACEC,WAAYN,EAAAA,EAAAA,QACZd,UAAU,kCACVqB,YAAa,SAACC,GACZ,IAEIC,EAFEC,EAAOF,EAAEG,cAAcC,QAAQ,eAAgBC,wBAInDJ,EADED,EAAEM,kBAAkBC,aAAeP,EAAEM,OAAOE,UAAUC,SAAS,qBACtDT,EAAEU,MAEFR,EAAKtC,KAAQgC,EAAM5D,MAAQ,IAAOkE,EAAK3B,MAGpD,IAAMoC,EAAW,SAACX,GAChB,IAAMY,EAAYhB,EAAM5D,OAASgE,EAAEU,MAAQT,IAAa,IAAMC,EAAK3B,OACnEqB,EAAM3D,SAASW,KAAK0C,IAAI,EAAG1C,KAAKiE,IAAI,IAAKD,MAO3CE,SAASC,iBAAiB,YAAaJ,GACvCG,SAASC,iBAAiB,WANR,SAAZC,EAAahB,GACjBW,EAASX,GACTc,SAASG,oBAAoB,YAAaN,GAC1CG,SAASG,oBAAoB,UAAWD,OApB9C,WA0BE,iBAAKtC,UAAU,mBAAf,WACE,gBAAKA,UAAU,sBAAsBC,MAAO,CAACf,KAAM,EAAGsD,MAAO,EAAGC,IAAK,MACrE,gBACEzC,UAAU,yCACVC,MAAO,CAACf,KAAM,EAAGsD,MAAM,GAAD,OAAK,IAAMtB,EAAM5D,MAAjB,KAA2BmF,IAAK,SAG1D,gBAAKzC,UAAU,qBACf,iBACEA,UAAU,oBACVC,MAAO,CAACf,KAAK,QAAD,OAAUgC,EAAM5D,MAAhB,aACZoF,SAAU,UAMZvB,EAAsBN,EAAAA,GAAAA,IAAAA,WAAH,uEAAGA,CAAH,QACrB8B,EAAAA,I,WCpDEC,EAAoB,SAACC,GAAD,OACxBA,IAAgB5H,EAAAA,GAAAA,MAChB4H,IAAgB5H,EAAAA,GAAAA,WAChB4H,IAAgB5H,EAAAA,GAAAA,gBACZ4H,EACA5H,EAAAA,GAAAA,iB,WJ8DA6H,EAAuB,uBAQtB,SAASC,EAA6BC,GAA6C,IAAnBC,IAAkB,yDACvFC,aAAa/F,GAET8F,EACF9F,EAAiBgG,YAAW,kBAAMJ,EAA6BC,GAAW,KAAQ,KAElFZ,SAASgB,cAAc,IAAIC,YAAYP,EAAsB,CAACQ,OAAQN,KAwBnE,IAAMO,EAAwC,SAACrC,GACpD,IAAOsC,EAA6DtC,EAA7DsC,MAAOC,EAAsDvC,EAAtDuC,eAAgBC,EAAsCxC,EAAtCwC,QAASC,EAA6BzC,EAA7ByC,UAAWC,EAAkB1C,EAAlB0C,eAClD,GInGOC,EAAAA,EAAAA,GAVoB,2BAUsBjB,GJmGjD,eAAOzG,EAAP,KAAa2H,EAAb,KACA,EAA0BzG,EAAAA,UAAe,0BAAC,kBACrCnB,EAAAA,IACAwH,GAFoC,IAGvCvH,KAAAA,OAHF,eAAO4H,EAAP,KAAcC,EAAd,KAMMC,EAAe5G,EAAAA,OAAsC,MACrD6G,EAAqB7G,EAAAA,OAAuC,MAC5D8G,GAAgBjL,EAAAA,EAAAA,GAAcsK,EAAOG,EAAUxK,OAC/CiL,EAAe/G,EAAAA,SACnB,iBAAO,CACLgH,MAAON,EAAMvH,oBAAsB2H,EAAc/K,IAAMoK,EACvDrH,KAAM4H,EAAM5H,QAEd,CAACqH,EAAOW,EAAc/K,IAAK2K,EAAMvH,oBAAqBuH,EAAM5H,OAGxDmI,EAASjH,EAAAA,SAAc,WAC3B,IAAMkH,EAAQ,SAACC,GAAD,OAA0BA,EAAGlE,KAAI,SAACmE,GAAD,OAAOA,EAAEhN,QAAMiN,KAAK,MASnE,OAPGR,EAAmBS,SACpBJ,EAAML,EAAmBS,QAAQN,SAAWE,EAAMH,EAAaC,QAC/DH,EAAmBS,QAAQxI,OAASiI,EAAajI,OAEjD8H,EAAaU,SAAUC,EAAAA,EAAAA,IAAYR,GACnCF,EAAmBS,QAAUP,GAExBH,EAAaU,UACnB,CAACP,IAEES,EAAgBxH,EAAAA,aAAkB,SAACyH,GACvCd,GAAS,SAACW,GAAD,eAAC,UAAiBA,GAAYG,QACtC,IAEGC,EAAe1H,EAAAA,aACnB,SAAClB,GACC0I,EAAc,CAAC1I,KAAAA,IACf2H,EAAQ3H,KAEV,CAAC2H,EAASe,IAGNG,EAAgB3H,EAAAA,aACpB,SAAClE,GACCsK,EAAetK,GAAS,OAE1B,CAACsK,IAGGwB,EAAoB5H,EAAAA,aACxB,SAACX,GACC,IAAMvD,EAAK,WAAOuD,EAAP,KACXsI,EAAcrB,EAAUxK,QAAUA,EAAQA,EAAQ,OAEpD,CAAC6L,EAAerB,EAAUxK,QAG5B,OACE,UAAC+L,GAAD,YACE,UAAC,KAAD,YACE,SAAC9H,EAAD,CACEE,MAAOyG,EAAM5H,KACboB,SAAUwH,EACVzI,cAAeyH,EAAMzH,gBAEtByH,EAAM5H,OAASlB,EAAAA,GAAAA,kBACd,iCACE,SAAC,KAAD,KACA,gBAAKgF,MAAO,CAACJ,MAAO,KAApB,UACE,SAACoB,EAAD,CAAY3D,MAAOyG,EAAMxH,KAAMgB,SAAU,SAAC4H,GAAD,OAAON,EAAc,CAACtI,KAAM4I,UAEvE,SAAC,KAAD,KACA,SAACC,EAAA,EAAD,CACEnF,MAAO,CAACoF,aAAc,GACtBtF,MAAM,yBACNuF,QAASvB,EAAM1H,YACfkB,SAAU,SAAC+D,GAAD,OACRuD,EAAc,CAACxI,YAAaiF,EAAEM,OAAO0D,iBAK7C,gBAAKrF,MAAO,CAACsF,KAAM,KAClB3B,MAEH,SAAC4B,IAAD,kBACMtE,GADN,IAEEwC,SAAO,UAAMK,GACbO,OAAQA,EACRd,MAAOA,EACPwB,cAAeA,EACfC,kBAAmBA,EACnB1H,SAAU,kBACRsH,EAAc,CACZrI,qBAAsBuH,EAAMvH,8BAiBlCgJ,GAAkB,SAACtE,GACvB,OAAqDuE,EAAAA,EAAAA,KAA9C7G,EAAP,EAAOA,SAAU8G,EAAjB,EAAiBA,eAAgBC,EAAjC,EAAiCA,iBACjC,EAA0CtI,EAAAA,SAA8B,MAAxE,eAAOuI,EAAP,KAAoBC,EAApB,KACA,EAAsCxI,EAAAA,SAA8B,MAApE,eAAOyI,EAAP,KAAoBC,EAApB,KACA,EAA0B1I,EAAAA,UAAuB,kBAAM6D,EAAM8E,iBAAmBC,KAAKC,SAArF,eAAOrH,EAAP,KAAcsH,EAAd,KACOzC,EAAgCxC,EAAhCwC,QAAS0C,EAAuBlF,EAAvBkF,SAAUzC,EAAazC,EAAbyC,UAEnB0C,EAAiBhJ,EAAAA,WAAiBiJ,EAAAA,GAAlCD,cAEP,EAAyChJ,EAAAA,WAAiBkJ,EAAAA,IAAnDC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,OACzBC,GAAiBF,GAA6B,cAAjBD,GAAgCE,IAAWE,UAAUC,OAKpFC,EAAW5L,EAAAA,GACX0D,EAASiB,OAASuG,GAAYA,EAASW,oBAGzCD,EAFyB5I,KAAK0C,IAAI,EAAGhC,EAASiB,MAAQ,KACpC3B,KAAK0C,IAAI,EAAG/B,EAAQuH,EAASW,oBAIjD,IAAMpI,EAAQT,KAAK8I,IACjB9I,KAAK+I,IAAIH,IAAc5I,KAAK+I,IAAI9L,EAAAA,IAAa+C,KAAK+I,IAAIH,IAAa,IAAOpD,EAAQnH,MAUpFc,EAAAA,WAAgB,WACd,GAAc,IAAVsB,IAAegI,EAAnB,CAIA,UAAIP,QAAJ,IAAIA,IAAAA,EAAUc,SAAd,CAOA,IAAMC,EAAiBjJ,KAAK0C,IAAI3E,EAAAA,GAAc,EAAI0C,GAC5CuH,EAAMD,KAAKC,MAGXkB,EAAUjE,YAAW,kBAAMgD,EAASD,KADTiB,GAAkBjB,EAAMrH,IAEzD,OAAO,kBAAMqE,aAAakE,IAXpBvI,IAAUuH,EAASc,UACrBf,EAASC,EAASc,aAWrB,CAACvI,EAAOE,EAAO8H,EAAeP,IAIjC/I,EAAAA,WAAgB,WACd,IAAMgK,EAAW,SAAC/F,GAAD,OAAoByE,EAAezE,EAAEgC,SAEtD,OADAlB,SAASC,iBAAiBS,EAAsBuE,GACzC,kBAAMjF,SAASG,oBAAoBO,EAAsBuE,OAMlE,IAAM/C,GAASgD,EAAAA,EAAAA,IACbpG,EAAMoD,OACNZ,EACA0C,GAAYmB,EAAAA,GACZ5I,EACAE,GAEIG,EAAa,CACjBa,MAAO3B,KAAK0C,IAAL,MAAA1C,KAAI,CAAK,GAAL,eAAWoG,EAAOkD,MAAMlH,KAAI,SAACmH,GAAD,OAAOA,EAAE7H,EAAI6H,EAAE5H,MAAQnE,EAAAA,SAC9DiF,OAAQzC,KAAK0C,IAAL,MAAA1C,KAAI,CAAK,GAAL,eAAWoG,EAAOkD,MAAMlH,KAAI,SAACmH,GAAD,OAAOpM,EAAAA,GAAYoM,EAAEC,EAAIlM,EAAAA,EAAaF,EAAAA,SAGhF+B,EAAAA,WAAgB,WACd,IAAMsK,EAAOrD,EAAOkD,MAAMjI,MAAK,SAACkI,GAAD,OAAO9D,EAAUiE,KAAK9O,SAAS2O,EAAEE,KAAKlQ,SACrE,GAAKkQ,EAAL,CAGA,IAAME,EAASC,GAAaH,GACtB/H,GAAKiI,EAAOE,KAAOF,EAAOG,MAAQ,EAAIpJ,EAASiB,MAAQ,EACvD6H,GAAKG,EAAOI,KAAOJ,EAAOK,MAAQ,EAAItJ,EAAS+B,OAAS,EAC9DgF,EAAiB,CAACzG,KAAMU,EAAG6C,IAAKiF,IAAI,MACnC,CAAC/D,IAEJ,IAAM5E,EAA0B,GAKhC,GAJImC,EAAMiH,aACRpJ,EAAcnB,KAAKsD,EAAMiH,aAGvBrC,EACF/G,EAAcnB,KAAKkI,QACd,GAAInC,EAAUiE,KAAK3O,OAAS,EAAG,CACpC,IAGMmP,EAHezE,EAAUiE,KAC5BtH,KAAI,SAAC5D,GAAD,cAAa0J,QAAb,IAAaA,OAAb,EAAaA,EAAUiC,MAAM3L,MACjCxC,QAAO,SAAC0F,GAAD,YAAiC0I,IAAN1I,KACI2I,MAAK,SAACC,EAAGf,GAAJ,OAC5Ce,EAAEC,OAAShB,EAAEgB,MAAQD,EAAEC,MAAQhB,EAAEgB,MAAQ,KAErCC,EAAYN,EAAoB,GAChCO,GAAWP,EAAoBA,EAAoBnP,OAAS,GAClE,OAAIyP,QAAJ,IAAIA,GAAAA,EAAWD,OACb1J,EAAcnB,KAAK8K,EAAUD,OAE/B,OAAIE,SAAJ,IAAIA,IAAAA,GAAUC,KACZ7J,EAAcnB,KAAK+K,GAASC,KAIhC,IAAMC,GAAsBjK,EAASiB,MAAQ,EAEvCiJ,IACJ,gCACGpF,EAAQvH,OAASlB,EAAAA,GAAAA,iBAAkC4N,KAClD,SAACnK,EAAD,CACEC,MAAOA,EACPC,SAAUA,EACVI,WAAYA,EACZF,SAAiB,OAARsH,QAAQ,IAARA,OAAA,EAAAA,EAAUW,oBAAqB,EACxChI,cAAeA,EACfF,MAAOA,KAGX,gCAAKoB,MAAO,CAAC8I,SAAU,SAAUxD,KAAM,IAAQG,GAA/C,cACE,gBAAKzF,OAAK,QAAG+I,SAAU,WAAY3D,aAAc,IAAOrG,GAAxD,SACG6J,KACC,SAACI,GAAD,CACEvF,QAASA,EACT0C,SAAUA,GAAYmB,EAAAA,GACtBjD,OAAQA,EACRsB,YAAaA,EACbsD,aAAcvF,EAAUiE,KACxBhJ,SAAUA,EACViH,mBAAoBA,EACpBsD,YAAajI,EAAMiI,YACnBlE,kBAAmB/D,EAAM+D,0BAMjC,UAACmE,GAAD,WACGzC,GACC,SAAC0C,GAAD,WACE,SAACC,EAAA,EAAD,CAAK/D,KAAM,CAACgE,eAAgB,gBAAiBC,OAAQ,CAACC,OAAQ,IAA9D,UACE,UAACC,EAAA,EAAD,CACEC,UAAU,MACVC,QAAS,EACTC,WAAU,UAAK/I,EAAAA,EAAAA,UAAL,MACVgJ,QAAS,CAACC,SAAU,EAAGC,WAAY,IACnCC,WAAW,aALb,WAOE,SAACC,EAAA,GAAD,CAAMzS,KAAK,UAAU0S,MAAOrJ,EAAAA,EAAAA,aAC5B,iBAAKb,MAAO,CAACmK,SAAU,QAASC,WAAY,SAAUtB,SAAU,UAAhE,WACE,kEACA,4FAC8D1C,EAD9D,qCAON,MACJ,UAACiE,GAAD,CAA2B/E,KAAM,CAACoE,UAAW,MAAOM,WAAY,SAAUM,IAAK,IAA/E,WACE,SAACC,EAAA,EAAD,CACEnT,MAAO6J,EAAMsC,MACblG,MAAO4D,EAAMyC,UAAUxK,MACvBsR,YAAY,qBACZlN,SAAU2D,EAAM8D,cAChB0F,QAAStE,GAAWuE,EAAAA,EAAAA,IAAsBvE,EAAU9B,QAAUgE,EAC9DtI,UAAW2D,EAAUiE,KAAK3O,OAAS,EAAI,WAAa,MAEtD,SAACmM,EAAA,EAAD,CACEE,QAAS5B,EAAQlH,oBACjBuD,MAAM,wBACNxC,SAAU2D,EAAM3D,oBAO1B,OAAO6I,GACL,SAACwE,EAAA,GAAD,CACEC,WAAW,cACXC,KAAK,aACLC,MAAOjC,GACPkC,oBAAqB,GACrBC,QACE,SAACC,EAAA,GAAD,kBACMhK,GADN,IAEErC,MAAOA,EACPuH,SAAUA,EACV+E,gBAAiB,SAAC1T,GAAD,OAAUoO,EAAmBpO,SAKpDqR,IAgBEG,GAAwE,SAAC/H,GAC7E,IAAOtC,EAAkEsC,EAAlEtC,SAAU0F,EAAwDpD,EAAxDoD,OAAQsB,EAAgD1E,EAAhD0E,YAAasD,EAAmChI,EAAnCgI,aAAc9C,EAAqBlF,EAArBkF,SAAU1C,EAAWxC,EAAXwC,QACxDrM,EAA4B,GAI5B+T,EAAqB,SAACvD,GAAD,OACzBA,EAAOG,KAAOpJ,EAASM,KAAON,EAASiB,OACvCgI,EAAOE,KAAOnJ,EAASM,MACvB2I,EAAOK,KAAOtJ,EAAS6D,IAAM7D,EAAS+B,QACtCkH,EAAOI,KAAOrJ,EAAS6D,KAKnB4I,EAA+C,GA+FrD,OA7FI3H,EAAQvH,OAASlB,EAAAA,GAAAA,MACnBqJ,EAAOkD,MAAMjQ,SAAQ,SAAC+T,GACpBA,EAAIC,SAAShU,SAAQ,SAACiU,EAAOC,GAAc,IAAD,EAClC5D,EAAS6D,GAAcJ,EAAKE,GAClC,GAAKJ,EAAmBvD,GAAxB,CAGA,IAAM8D,GAAiBrH,EAAOkD,MAAM1O,SAAS0S,GACvCI,IAAexF,KAAW,UAACA,EAASiC,MAAMmD,EAAM7D,KAAKlQ,aAA3B,OAAC,EAAiCsM,OAE5D8H,EAAkBR,EAAsBxD,EAAOE,OAAS,EAC9DsD,EAAsBxD,EAAOE,MAAQ8D,EAAkB,EAEvDxU,EAAMuG,MACJ,SAACkO,IAAD,QACEC,WACe,OAAZ7C,QAAY,IAAZA,OAAA,EAAAA,EAAcpQ,SAASwS,EAAI3D,KAAKlQ,QAASmO,KAAiB0F,EAAI3D,KAAKlQ,QACvD,OAAZyR,QAAY,IAAZA,OAAA,EAAAA,EAAcpQ,SAAS0S,EAAM7D,KAAKlQ,QAASmO,KAAiB4F,EAAM7D,KAAKlQ,KAE1EuU,OAAQL,GAAiBC,EAEzBK,YAAaN,EACbO,OAAQL,GACJhE,GATN,UAMUyD,EAAIxL,IANd,YAMqB0L,EAAM1L,IAN3B,YAMkC2L,YAU1CnH,EAAOkD,MAAMjQ,SAAQ,SAAC+T,GACpB,IAAMzD,EAASC,GAAawD,GACtBa,EAASb,EAAIzL,QAAUjE,EAAAA,GACxBwP,EAAmBvD,IAIxBxQ,EAAMuG,MACJ,iBAEE,eAAc0N,EAAI3D,KAAKlQ,KACvBqG,QAAS,SAACsO,GAAD,OAAgClL,EAAMiI,YAAYmC,EAAI3D,KAAKlQ,KAAM2U,IAC1EC,cAAe,kBAAMnL,EAAM+D,kBAAkBqG,EAAI3D,KAAKlQ,OACtD6U,aAAc,kBAAMpL,EAAM2E,mBAAmByF,EAAI3D,KAAKlQ,OACtD8U,aAAc,kBAAMrL,EAAM2E,mBAAmB,OAC7C7F,UAAS,mDAEHmM,EAAS,MAAQ,MAFd,yBAGHjD,EAAapQ,SAASwS,EAAI3D,KAAKlQ,OAAS,UAHrC,yBAIHmO,IAAgB0F,EAAI3D,KAAKlQ,MAAQ,UAJ9B,0BAKHgF,EAAAA,EAAAA,IAAc6O,EAAI3D,KAAKlQ,OAAS,WACtCwI,OAAK,QACHf,KAAM2I,EAAOG,KACbvF,IAAKoF,EAAOK,MAAQiE,EAASpQ,EAAAA,GAAmBN,EAAAA,IAChDoE,MAAOsM,EAASrQ,EAAAA,GAAewP,EAAIzL,QAChC2M,EAAAA,EAAAA,IAAYlB,EAAIvH,MAAO,CAACqC,SAAAA,EAAU1C,QAAAA,KAjBzC,UAoBG4H,EAAIvH,QAAU0I,EAAAA,GAAAA,SAAqB,SAACC,EAAA,EAAD,CAASC,QAAQ,mBAAiBrE,EACrEsE,GAAkBtB,KApBdA,EAAIxL,SAyBX4D,EAAQvH,OAASlB,EAAAA,GAAAA,iBAGnBqJ,EAAOuI,QACJvM,KAAI,SAACwM,EAAQvM,GAAT,MAAkB,CAACuM,OAAAA,EAAQvM,IAAAA,EAAKsH,OAAQC,GAAagF,OACzD5S,QAAO,gBAAE2N,EAAF,EAAEA,OAAF,OAAcuD,EAAmBvD,MACxCU,MAAK,SAACC,EAAGf,GAAJ,OAAUe,EAAEX,OAAOG,KAAOP,EAAEI,OAAOG,QACxCzQ,SAAQ,YAA4B,IAA1BuV,EAAyB,EAAzBA,OAAQjF,EAAiB,EAAjBA,OAAQtH,EAAS,EAATA,IACnB4L,EAASW,EAAOjN,QAAUjE,EAAAA,GAEhCvE,EAAMuG,MACJ,gBAEE,eAAckP,EAAOhN,IACrBE,UAAS,mDAEPmM,EAAS,aAAe,mBAC1BlM,MAAO,CACLf,KAAM2I,EAAOG,KACbvF,IAAKoF,EAAOK,MAAQiE,EAASpQ,EAAAA,GAAmBN,EAAAA,IAChDoE,MAAOsM,EAASrQ,EAAAA,GAAegR,EAAOjN,OAT1C,UAYE,oBAXKU,QAiBR,8BAAGlJ,KAcNyQ,GAAe,SAACU,GACpB,MAAO,CACLR,KAAMQ,EAAE5I,EACRsI,KAAM7M,EAAAA,GAAYmN,EAAEd,EAAIlM,EAAAA,EACxBuM,KAAMS,EAAE5I,EAAI4I,EAAE3I,MACdoI,KAAM5M,EAAAA,GAAYmN,EAAEd,EAAIlM,EAAAA,EAAaA,EAAAA,IASnCkQ,GAAgB,SAAClD,EAAkBf,GACvC,GAAIA,EAAEC,EAAIc,EAAEd,EAAG,CAAC,IAAD,EACJ,CAACD,EAAGe,GAAZA,EADY,KACTf,EADS,KAIf,IACMsF,EADSvE,EAAE3I,QAAUjE,EAAAA,GACDG,EAAAA,GAAmBD,EAAAA,GAAe,EAAIN,EAAAA,EAAa,EAEvEwR,EAASvF,EAAE5H,QAAUjE,EAAAA,GACrBqR,EAAWD,EAASjR,EAAAA,GAAmBD,EAAAA,GAAe,EAAIN,EAAAA,EAAa,EAEvE0R,EAAWzF,EAAEC,IAAMc,EAAEd,EAe3B,MAAO,CAACM,KAZK9J,KAAKiE,IAAIqG,EAAE5I,EAAI4I,EAAE3I,MAAO4H,EAAE7H,EAAI6H,EAAE5H,OAY/BqI,KAXD7M,EAAAA,IAAwBmN,EAAEd,EAAIlM,EAAAA,EAAauR,GAWpChF,KAPPmF,EACThP,KAAK0C,IAAI4H,EAAE5I,EAAG6H,EAAE7H,GAChB1B,KAAK0C,IAAI4H,EAAE5I,EAAI4I,EAAE3I,MAAQ,EAAG4H,EAAE7H,GAAKoN,EAASlR,EAAAA,GAAe2L,EAAE5H,OAAS,GAKhDoI,KAJbiF,EACT7R,EAAAA,GAAYoM,EAAEC,EAAIlM,EAAAA,EAAayR,EAC/B5R,EAAAA,GAAYoM,EAAEC,EAAIlM,EAAAA,GAAcwR,EAASjR,EAAAA,GAAmBN,EAAAA,MAS5DqQ,GAAYzO,EAAAA,MAChB,YAcgB,IAbd2K,EAaa,EAbbA,KACAE,EAYa,EAZbA,KACAH,EAWa,EAXbA,KACAE,EAUa,EAVbA,KACA+D,EASa,EATbA,OACAD,EAQa,EARbA,SACAG,EAOa,EAPbA,OACAD,EAMa,EANbA,YAOMkB,EAAM,UAAMnR,EAAAA,GAAN,cAAqBgQ,EAAS,SAAW,QAAzC,YACVD,EAAWjL,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,SAGxBsM,EAAsBrF,EAAQmE,EAAS,GAAMlQ,EAAAA,GAEnD,OACE,iCACE,gBACEgE,UAAU,OACVC,MAAO,CACLU,OAAQ,EACRzB,KAAM8I,EACNnI,MAAOoM,EAAc,GAAKmB,EAAsBpF,EAChDvF,IAAKyF,EAAO,EACZmF,UAAWF,EACXG,OAAQvB,EAAW,IAAM,KAG5B7D,IAASD,IAASgE,IACjB,gBACEjM,UAAU,OACVC,MAAO,CACLJ,MAAO,EACPX,KAAMkO,EACN3K,IAAKyF,EAAOlM,EAAAA,GAAY,EACxB2E,OAAQsH,EAAOC,EACfqF,YAAaJ,EACbG,OAAQvB,EAAW,IAAM,UAOrCyB,KAGF,SAASZ,GAAkBtB,GACzB,KAAIA,EAAIzL,OAAShE,EAAAA,IAAjB,CAKA,IAAM4R,EAAe,GAAKnC,EAAIvH,QAAU0I,EAAAA,GAAAA,QAAqB,GAAK,GAC5DiB,GAAapC,EAAIzL,MAAQ4N,GAAgB,IAE/C,OAAOE,EAAAA,EAAAA,IAAqBrC,EAAI3D,KAAKlQ,KAAM,CAACiW,UAAAA,KAM9C,IAAMxI,GAAsBrE,EAAAA,GAAAA,IAAAA,WAAH,0EAAGA,CAAH,87CAOTC,EAAAA,EAAAA,MAMM7E,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,GAAiCA,EAAAA,GAKzBA,EAAAA,GAA+BA,EAAAA,GAexCH,EAAAA,GACCA,EAAAA,GAEOA,EAAAA,GAAe,EAMtBN,EAAAA,EAA4B,EAAfC,EAAAA,GAMRuF,EAAAA,EAAAA,UAKG/E,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,GAAiCA,EAAAA,GAGrB6E,EAAAA,EAAAA,QACIA,EAAAA,EAAAA,UAGJA,EAAAA,EAAAA,QAMpB8M,EAAAA,EAQO9R,EAAAA,GACCA,EAAAA,GAEOA,EAAAA,GAAe,EAKtBN,EAAAA,EAA4B,EAAfC,EAAAA,GAILQ,EAAAA,GAA+BA,EAAAA,GACvCA,EAAAA,IAIGT,EAAAA,EAA4B,EAAfC,EAAAA,IAAoB,GAK5C4N,GAAmBxI,EAAAA,GAAAA,IAAAA,WAAH,uEAAGA,CAAH,wDAGXC,EAAAA,EAAAA,WAILsI,GAA2BvI,EAAAA,GAAAA,IAAAA,WAAH,+EAAGA,CAAH,qGASxByJ,IAA4BzJ,EAAAA,EAAAA,IAAOyI,EAAAA,GAAV,2FAAGzI,CAAH,4FACCC,EAAAA,EAAAA,QAInB+M,GAAyB,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACpC,UAAC5I,GAAD,YACE,SAAC,KAAD,KACA,SAAC0F,EAAA,GAAD,CACEC,WAAW,cACXC,KAAK,aACLC,OACE,gBAAK9K,MAAO,CAACuJ,OAAQ,OAAQuE,UAAW,KAAxC,UACE,SAACrB,EAAA,EAAD,CAASC,QAAQ,cAGrB3B,oBAAqB,GACrBC,QACE,SAACC,EAAA,EAAD,CACE9E,SAAUmB,EAAAA,GACV5D,UAAW,CAACiE,KAAM,GAAIzO,MAAO,KAC7B2U,MAAOA,EACPjP,MAAO,UAOJmP,GAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,IAAF,OACzB,UAAC/I,GAAD,YACE,SAAC,KAAD,CAAkBjF,MAAO,CAACsJ,eAAgB,YAA1C,UACE,SAAC,KAAD,CAAiB0E,IAAKA,OAExB,SAACrD,EAAA,GAAD,CACEC,WAAW,cACXC,KAAK,aACLC,OACE,SAACmD,EAAA,EAAD,CACExQ,KAAK,gBACLyQ,MAAM,aACNC,YAAY,wDACZC,QACE,SAAC,KAAD,CAAMC,IAAIC,EAAAA,EAAAA,IAAoB,CAAC,CAACC,MAAO,SAAUlR,MAAO,YAAxD,gCAMN0N,oBAAqB,GACrBC,QACE,SAACC,EAAA,EAAD,CACE9E,SAAUmB,EAAAA,GACV5D,UAAW,CAACiE,KAAM,GAAIzO,MAAO,KAC7B2U,MAAOG,EAAIxQ,GACXoB,MAAO,W,uOK1zBJ+F,EAAc,SAAC6J,GAC1B,IAAOpK,EAAeoK,EAAfpK,MAAOlI,EAAQsS,EAARtS,KAMRqL,EAAyBnD,EAAMnK,QAHX,SAACwU,GAAD,OACvBA,EAAEvW,OAAOwW,MAAK,SAACC,GAAD,OAAOA,EAAEvW,UAAUsW,MAAK,SAACxU,GAAD,OAAOkK,EAAM9E,MAAK,SAACsP,GAAD,OAAOA,EAAEpX,OAAS0C,EAAE3B,MAAMf,iBAEtB6I,KAAI,SAACqH,GAAD,MAAW,CAC5EA,KAAAA,EACA7H,IAAK6H,EAAKlQ,KACVsM,WAAOuE,EACPiD,SAAU,GACV3L,GAAI,EACJ8H,GAAI,EACJoH,MAAM,EACNjP,MAAOlE,EAAAA,OAOHoT,GAAK,OAAOvH,GAClBuH,EAAMxX,SAAQ,SAAC+T,GAAD,OAAS0D,EAAYxH,EAAO8D,EAAKmD,MAI/C,IAAMQ,EAAS,SAATA,EAAU3D,EAAoB1L,GAC9B0L,EAAI1L,GAAKA,IAKb0L,EAAI1L,EAAIA,EACR0L,EAAIC,SAAShU,SAAQ,SAACiU,GAAD,OAAWyD,EAAOzD,EAAOF,EAAI1L,EAAI0L,EAAIzL,MAAQnE,EAAAA,SAEpEqT,EAAMxX,SAAQ,SAAC+T,GAAD,OAAS2D,EAAO3D,EAAKlQ,EAAAA,OAEnC,IAAM8T,EAA6C,GAC7CC,EAA2C,GAKjD3H,EAAMjQ,SAAQ,SAAC+T,EAAK/K,GAClB+K,EAAI5D,EAAInH,EACR+K,EAAIC,SAAShU,SAAQ,SAACiU,GACpB0D,EAAQ1D,EAAM7D,KAAKlQ,MAAQyX,EAAQ1D,EAAM7D,KAAKlQ,OAAS,GACvDyX,EAAQ1D,EAAM7D,KAAKlQ,MAAMmG,KAAK0N,SAIlC9D,EAAMjQ,SAAQ,SAAC+T,GACb6D,EAAS,GAAD,OAAI7D,EAAI5D,IAAOyH,EAAS,GAAD,OAAI7D,EAAI5D,KAAQ,GAC/CyH,EAAS,GAAD,OAAI7D,EAAI5D,IAAK9J,KAAK0N,MAU5B,IADA,IAAI8D,GAAU,EACPA,GAAS,CACdA,GAAU,EACV,IAFc,eAEL7O,GACP,IAAM+K,EAAM9D,EAAMjH,GAEZ8O,GADaH,EAAQ5D,EAAI3D,KAAKlQ,OAAS,IACX8Q,MAAK,SAACC,EAAGf,GAAJ,OAAUA,EAAEC,EAAIc,EAAEd,KAAG,GAC5D,IAAK2H,EACH,iBAIF,IAAI5S,EAAAA,EAAAA,IAAc6O,EAAI3D,KAAKlQ,SAAUgF,EAAAA,EAAAA,IAAc4S,EAAe1H,KAAKlQ,MACrE,iBAEF,IAAM6X,EAAYH,EAAS,GAAD,OAAIE,EAAe3H,IAE7C,GADc4H,EAAU/P,MAAK,SAACgQ,GAAD,OAAOA,EAAE3P,IAAM0L,EAAI1L,KAE9C,iBAGF,IAAM4P,EAAUH,EAAezP,EACzB6P,EAAYH,EAAUX,MAAK,SAACY,GAAD,OAAOA,EAAE3P,EAAI4P,GAAWD,EAAE3P,EAAI0L,EAAI1L,KAC7D8P,EAAoBJ,EAAUX,MAClC,SAACY,GAAD,OAAOA,EAAE3P,EAAI0L,EAAI1L,GAAK2P,EAAEhE,SAASoD,MAAK,SAACgB,GAAD,OAAOA,EAAEjI,GAAK2H,EAAe3H,GAAKiI,EAAE/P,EAAI0L,EAAI1L,QAEpF,OAAI6P,GAAaC,EACf,YAGFP,EAAS,GAAD,OAAI7D,EAAI5D,IAAOyH,EAAS,GAAD,OAAI7D,EAAI5D,IAAKxN,QAAO,SAACuN,GAAD,OAAOA,IAAM6D,KAChEA,EAAI5D,EAAI2H,EAAe3H,EACvByH,EAAS,GAAD,OAAI7D,EAAI5D,IAAK9J,KAAK0N,GAE1B8D,GAAU,EACV,UAhCO7O,EAAMiH,EAAMvO,OAAS,EAAGsH,EAAM,EAAGA,IAAO,CAAC,IAAD,IAAxCA,GAAwC,+BAgC/C,OAIJ,GAAIpE,IAASlB,EAAAA,GAAAA,KAAqB,CAKhC,IADA,IAAI2U,EAAU,EACd,MAAgB5X,OAAO4P,KAAKuH,GAA5B,eAAuC,CAAlC,IAAMzH,EAAC,KACJmI,EAAMV,EAASzH,GACrB,GAAKmI,EAAI5W,OAAT,CAGA,IALqC,EAKjC2G,EAAIiQ,EAAI,GAAGf,KAAO1T,EAAAA,GAAa8T,EAAQW,EAAI,GAAGlI,KAAKlQ,MAAM,GAAGmI,EAAIrE,EAAAA,GAL/B,UAMnBsU,GANmB,IAMrC,2BAAuB,CAAC,IAAbvE,EAAY,QACrBA,EAAI1L,EAAIA,EACR0L,EAAI5D,EAAIkI,EACRA,GAAW,EACXhQ,GAAKrE,EAAAA,IAV8B,gCAavCiM,EAAMe,MAAK,SAACC,EAAGf,GAAJ,OAAUe,EAAEd,EAAID,EAAEC,GAAKc,EAAE5I,EAAI6H,EAAE7H,UAI1C,IADAwP,GAAU,EACHA,GAAS,CACdA,GAAU,EAEV,IADA,IAAMnH,EAAOT,EAAMsI,QAAO,SAACC,EAAGR,GAAJ,OAAUrR,KAAK0C,IAAImP,EAAGR,EAAE7H,KAAI,GAFxC,WAGLA,GAEP,IADeF,EAAMmH,MAAK,SAACY,GAAD,OAAOA,EAAE7H,IAAMA,KAIvC,OAFAF,EAAMtN,QAAO,SAACqV,GAAD,OAAOA,EAAE7H,EAAIA,KAAGnQ,SAAQ,SAACgY,GAAD,OAAQA,EAAE7H,GAAK,KACpD0H,GAAU,EACV,SALK1H,EAAI,EAAGA,EAAIO,EAAMP,IAAK,gBAAtBA,GAKL,OAMR,MAAO,CAACF,MAAAA,EAAOqF,QAAS,KAGpBmD,EAAkC,SAAlCA,EACJxI,EACAyI,EACA3E,GAEA,IAAM4E,EAAY1I,EAAM2I,QAAQF,GAC1BG,EAAS5I,EAAM2I,QAAQ7E,GAC7B,KAAI4E,GAAaE,GAAjB,CAGA5I,EAAM6I,OAAOD,EAAQ,GACrB5I,EAAM6I,OAAOH,EAAW,EAAG5E,GAPxB,gBAaiBA,EAAIC,UAbrB,IAaH,2BAAkC,CAChCyE,EAAgCxI,EAAO8D,EADP,UAb/B,iCAkBC0D,EAAc,SAAdA,EAAexH,EAAwB8D,EAAoBmD,GAC/D,IAD6F,EACvF6B,EAAiB,GACjBC,EAAyB,GAF8D,UAI3EjF,EAAI3D,KAAKlP,SAJkE,IAI7F,2BAAoC,CAAC,IAAD,EAAzB+X,EAAyB,kBAChBA,EAAI7X,YADY,yBACvB8X,EADuB,QAE1BC,EAAUjC,EAAOpK,MAAM9E,MAAK,SAACkF,GAAD,OAAOgM,EAAIjY,MAAMf,OAASgN,EAAEhN,QAC9D,IAAKiZ,EACH,iBAGF,GAAIJ,EAAKxX,SAAS4X,EAAQjZ,MACxB,iBAIF,IACE2C,EAAAA,EAAAA,IAAqBsW,EAAQjZ,OAC7B6Y,EACGpW,QAAO,SAACuK,GAAD,OAAOhI,EAAAA,EAAAA,IAAcgI,MAC5BkK,MAAK,SAAClK,GAAD,OAAOlK,EAAAA,EAAAA,IAAuBkK,MAAOlK,EAAAA,EAAAA,IAAuBmW,EAAQjZ,SAE5E,iBAGF6Y,EAAK1S,KAAK8S,EAAQjZ,MAElB,IAAMkZ,EAAYnJ,EAAMoJ,WAAU,SAACrB,GAAD,OAAOA,EAAE5H,OAAS+I,KAChDG,OAAqB,GAEN,IAAfF,GACFE,EAAS,CACPtF,SAAU,GACVzL,IAAK4Q,EAAQjZ,KACbkQ,KAAM+I,EACN3M,WAAOuE,EACPzI,MAAOlE,EAAAA,GACPmT,MAAM,EACNlP,EAAG,EACH8H,GAAI,GAENF,EAAM5J,KAAKiT,GACXN,EAAM3S,KAAKiT,KAEXA,EAASrJ,EAAMmJ,GACfX,EAAgCxI,EAAO8D,EAAKuF,IAG9CvF,EAAIC,SAAS3N,KAAKiT,IA3CpB,2BAAkC,IADA,gCAJyD,8BAuD7F,cAAqBN,EAArB,eAA4B,CAAvB,IAAMM,EAAM,KACf7B,EAAYxH,EAAOqJ,EAAQpC,KAIzBqC,GAAkB,UACrBrE,EAAAA,GAAAA,QAAqB3L,EAAAA,EAAAA,SAElBiQ,GAAwB,eAC3BtE,EAAAA,GAAAA,QAAqB3L,EAAAA,EAAAA,UADM,SAE3B2L,EAAAA,GAAAA,gBAA6B3L,EAAAA,EAAAA,YAFF,SAG3B2L,EAAAA,GAAAA,UAAuB3L,EAAAA,EAAAA,WAHI,SAI3B2L,EAAAA,GAAAA,OAAoB3L,EAAAA,EAAAA,SAJO,SAK3B2L,EAAAA,GAAAA,QAAqB3L,EAAAA,EAAAA,SALM,GAQjB0L,EAAc,SACzBzI,EACAiN,GAMA,OACGA,EAAQ5K,SAASW,mBAClBiK,EAAQtN,QAAQvH,OAASlB,EAAAA,GAAAA,gBAMvB8I,GAASA,IAAU0I,EAAAA,GAAAA,UACd,CACLtC,MAAO2G,EAAmB/M,IAAU,OACpC8F,WAAYkH,EAAyBhN,IAAUjD,EAAAA,EAAAA,SAK5C,CACLqJ,MAAOrJ,EAAAA,EAAAA,QACP+I,WAAY/I,EAAAA,EAAAA,MACZqM,OAAO,gBAAD,OAAkBrM,EAAAA,EAAAA,UAfjB,CAAC+I,WAAW,YAuCjBoH,EAAwB,SAC5BzJ,EACApB,EACA8K,GAQA,IAHI,IAAD,WAGMC,GACP,IAAM7F,EAAM9D,EAAM2J,GACZC,EAAOhL,EAASiC,MAAMiD,EAAI3D,KAAKlQ,MACrC,IAAK2Z,EAEH,OADApZ,OAAOqZ,OAAO/F,EAAK4F,EAAY5F,IAC/B,WAEF,GAA6B,IAAzB8F,EAAKE,SAASrY,OAGhB,OAFAjB,OAAOqZ,OAAO/F,EAAK4F,EAAY5F,IAC/BA,EAAIvH,MAAQqN,EAAKrN,MACjB,WAGF,IAAMwN,EAA4B,GAClCH,EAAKE,SAAS/Z,SAAQ,SAAC0W,EAAKuD,GAC1BD,EAAS3T,MAAT,0BACK0N,GACA4F,EAAY5F,EAAK2C,EAAKuD,IAF3B,IAGE1R,IAAI,GAAD,OAAKwL,EAAIxL,IAAT,YAAgByR,EAAStY,QAC5B8K,MAAOkK,EAAIwD,WAAahF,EAAAA,GAAAA,cAK5B,IAAK,IAAI0E,EAAK,EAAGA,EAAKI,EAAStY,OAAS,EAAGkY,IACzCI,EAASJ,GAAI5F,SAAW,CAACgG,EAASJ,EAAK,IAEzCI,EAASA,EAAStY,OAAS,GAAGsS,SAAWD,EAAIC,SAE7CvT,OAAOqZ,OAAO/F,EAAKiG,EAAS,IAExBA,EAAStY,OAAS,GACpBuO,EAAM6I,OAAN,MAAA7I,EAAK,CAAQ2J,EAAI,GAAZ,eAAkBI,EAASG,MAAM,OAhCjCP,EAAK3J,EAAMvO,OAAS,EAAGkY,GAAM,EAAGA,IAAM,EAAtCA,IAqEE7J,EAA8B,SACzChD,EACAZ,EACA0C,EACAzH,EACAE,GAKA,MA1GkB,SAAC,GAA0D,IAAD,EAAxD2I,EAAwD,EAAxDA,MAAOqF,EAAiD,EAAjDA,QACrBvM,EAAM,IAAIqR,QACVC,EAAc/E,EAAQvM,KAAI,SAACyP,GAAD,iBAAYA,MACtC8B,EAA6B,GAHyC,UAI1DrK,GAJ0D,IAI5E,2BAAyB,CAAC,IAAf8D,EAAc,QACjBxT,GAAI,UAAOwT,GACjBuG,EAAUjU,KAAK9F,GACfwI,EAAIwR,IAAIxG,EAAKxT,IAP6D,8BAS5E,IAAK,IAAIqZ,EAAK,EAAGA,EAAK3J,EAAMvO,OAAQkY,IAClCU,EAAUV,GAAI5F,SAAW/D,EAAM2J,GAAI5F,SAASjL,KAAI,SAACqP,GAAD,OAAOrP,EAAIyR,IAAIpC,MAGjE,MAAO,CAACnI,MAAOqK,EAAWhF,QAAS+E,GA6FrBI,CAAY1N,GAArBkD,EAAL,EAAKA,MACCqF,EAA8B,GAMpC,GAAInJ,EAAQvH,OAASlB,EAAAA,GAAAA,gBAAgC,CACnD,IAAM8L,EAAoBX,EAASW,mBAAqBlI,EAClDoT,EAAS,SAACC,GAAD,OAAkB9W,EAAAA,IAAc8W,EAAOnL,GAAqBpI,GACrEwT,EAAa,SAAC,GAAD,IAAE1J,EAAF,EAAEA,MAAOG,EAAT,EAASA,IAAT,OACjB1K,KAAK0C,IAAIhF,EAAAA,KAAwBgN,GAAO/J,GAAS4J,GAAS9J,IAE5DsS,EAAsBzJ,EAAOpB,GAAU,SAACgM,EAAMnE,GAAP,MAAgB,CACrDrO,EAAGqO,EAAMgE,EAAOhE,EAAIxF,OAAS,EAC7B5I,MAAOoO,EAAMkE,EAAWlE,GAAOtS,EAAAA,OAtDR,SAAC6L,EAAwB6K,GAwBpD,IAvBA,IAsBI/G,EAtBEgH,EAAY9K,EAAMtN,QAAO,SAACoR,GAAD,OAAmB,IAAVA,EAAI1L,KAEtC2S,EAAQ,SAARA,EAASjH,EAAoBkE,GACjC,GAAc,IAAVlE,EAAI1L,EAAS,CAGf,IAAMW,EAAM+R,EAAUnC,QAAQ7E,IACjB,IAAT/K,GACF+R,EAAUjC,OAAO9P,EAAK,GAI1B+K,EAAI1L,EAAI1B,KAAK0C,IAAI0K,EAAI1L,EAAGyS,EAAkB7C,GAE1C,IAZqD,EAY/CgD,EAA2BlH,EAAI1L,EAAI0L,EAAIzL,MAAQnE,EAAAA,GAZA,UAajC4P,EAAIC,UAb6B,IAarD,2BAAkC,CAAC,IAAxBC,EAAuB,QAC5BA,EAAM5L,EAAI4S,GACZD,EAAM/G,EAAOgH,IAfoC,gCAqB/ClH,EAAMgH,EAAUG,SACtBF,EAAMjH,EAAK+G,GAgCXK,CAAqBlL,EAAOyK,EAAOpT,GAASnD,EAAAA,IAG5C0K,EAASuM,cAAcpb,SAAQ,SAACwY,QACdzH,IAAZyH,EAAEtH,OAGNoE,EAAQjP,KAAK,CACXkC,IAAI,UAAD,OAAYiQ,EAAEjQ,KACjB4H,EAAG,EACH9H,EAAGqS,EAAOlC,EAAEtH,OACZ5I,MAAOsS,EAAW,CAAC1J,MAAOsH,EAAEtH,MAAOG,IAAKmH,EAAEnH,WAG9C5Q,OAAO4a,QAAQxM,EAASiC,OAAO9Q,SAAQ,YAAmB,IAAD,iBAAhBE,EAAgB,KAAVE,EAAU,eACvCA,EAAKkV,SADkC,IACvD,2BAA8B,CAAC,IAApBkD,EAAmB,QAC5B,QAAgBzH,IAAZyH,EAAEtH,MAAN,CAGA,IAAMoK,EAAUvO,EAAOkD,MAAMjI,MAAK,SAACkI,GAAD,OAAOA,EAAEE,KAAKlQ,OAASA,KACpDob,GAILhG,EAAQjP,KAAK,CACXkC,IAAI,GAAD,OAAKrI,EAAL,YAAasY,EAAEjQ,KAClB4H,EAAGmL,EAAQnL,EACX9H,EAAGqS,EAAOlC,EAAEtH,OACZ5I,MAAOsS,EAAW,CAAC1J,MAAOsH,EAAEtH,MAAOG,IAAKmH,EAAEnH,UAdS,kCAoBrDlF,EAAQrH,cACVmL,EAAQA,EAAMtN,QAAO,SAACuN,GAAD,cAAQ,UAACrB,EAASiC,MAAMZ,EAAEE,KAAKlQ,aAAvB,QAAC,EAA6BsM,gBAExD,GAAIL,EAAQvH,OAASlB,EAAAA,GAAAA,UAC1BgW,EAAsBzJ,EAAOpB,GAAU,SAACkF,EAAKwH,EAAMtB,GAAZ,MAAwB,CAC7D5R,EAAG0L,EAAI1L,GAAK4R,GAAU9V,EAAAA,GAAgBC,EAAAA,IAAa6V,EAAS,GAC5D3R,MAAOlE,EAAAA,WAEJ,IAAI+H,EAAQvH,OAASlB,EAAAA,GAAAA,KAM1B,MAAM,IAAI8X,MAAM,iBALhB9B,EAAsBzJ,EAAOpB,GAAU,SAACkF,EAAKwH,EAAMtB,GAAZ,MAAwB,CAC7D5R,EAAG0L,EAAI1L,GAAK4R,GAAU,EAAI7V,EAAAA,IAAa6V,EAAS,GAChD3R,MAAOlE,EAAAA,OAMX,MAAO,CAAC6L,MAAAA,EAAOqF,QAAAA,IAMJlC,EAAwB,SAACvE,EAA4B9B,GAChE,GAA4B,IAAxBA,EAAOkD,MAAMvO,OAAjB,CAGA,IAAMpB,EAA2C,GAE3Cmb,EAAchb,OAAO4P,KAAKxB,EAASiC,OACtCnO,QAAO,SAAC6C,GAAD,OAAOqJ,EAASiC,MAAMtL,GAAGgH,QAAU0I,EAAAA,GAAAA,UAC1CnM,KAAI,SAACvD,GAAD,iBAAWA,MACf2H,KAAK,MACJsO,GACFnb,EAAQ+F,KAAK,CAACnG,KAAM,SAAU6F,MAAO0V,IAGvC,IAAMC,EAAiBjb,OAAO4P,KAAKxB,EAASiC,OACzCnO,QAAO,SAAC6C,GAAD,eAAO,UAAAqJ,EAASiC,MAAMtL,UAAf,eAAmB6L,OAAnB,UAA0BxC,EAASiC,MAAMtL,UAAzC,aAA0B,EAAmB0L,UAC3DF,MACC,SAACC,EAAGf,GAAJ,OACErB,EAASiC,MAAMZ,GAAImB,IACnBxC,EAASiC,MAAMZ,GAAIgB,OAClBrC,EAASiC,MAAMG,GAAII,IAAOxC,EAASiC,MAAMG,GAAIC,UAEjDiJ,MAAM,EAAG,GACTpR,KAAI,SAACvD,GAAD,iBAAWA,EAAX,QACJ2H,KAAK,MACJuO,GACFpb,EAAQ+F,KAAK,CAACnG,KAAM,2BAA4B6F,MAAO2V,IAGzD,IAAMC,GAAwB,OAAI5O,EAAOkD,OACtCtN,QAAO,SAACuN,GAAD,uBAAOrB,EAASiC,MAAMZ,EAAEE,KAAKlQ,aAA7B,aAAO,EAA6BmR,OAC3CL,MAAK,SAACC,EAAGf,GAAJ,OAAUA,EAAE7H,EAAI6H,EAAE5H,OAAS2I,EAAE5I,EAAI4I,EAAE3I,UAAQ,GASnD,OAPIqT,GACFrb,EAAQ+F,KAAK,CACXnG,KAAM,eACN6F,MAAM,IAAD,OAAM4V,EAAsBvL,KAAKlQ,QAInCI,K,oXC5eT,SAASsb,EAAkBlF,GACzB,IAAMmF,EAAWnF,EAAIoF,KAAK9T,MAAK,SAACC,GAAD,OAAOA,EAAEM,MAAQwT,EAAAA,EAAAA,iBAChD,OAAOF,EAAWA,EAAS9V,MAAQ,IAG9B,IAAMiW,EAA2E,SAAC,GAGlF,IAAD,EAFJzF,EAEI,EAFJA,MACA0F,EACI,EADJA,uBAEMC,GAAcC,EAAAA,EAAAA,GAClBC,EACA,CACEC,UAAW,CAAC9F,MAAAA,GACZ+F,6BAA6B,IAI1BC,EAAiBL,EAAjBK,KAAMC,EAAWN,EAAXM,SACbC,EAAAA,EAAAA,IAA0BP,EAAaQ,EAAAA,IAMvC5W,EAAAA,WAAgB,WACVmW,GACFO,MAED,CAACA,EAASP,IAEb,IAAMU,EAAK,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAMK,gBAEpB,IAAKD,GAA8B,0BAArBA,EAAME,WAClB,OAAO,KAGT,GAAyB,gBAArBF,EAAME,WACR,OACE,UAAC1K,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGE,QAAS,EAA5C,WACE,SAACI,EAAA,GAAD,CAAMzS,KAAK,UAAU0S,MAAOrJ,EAAAA,EAAAA,aAC5B,iBAAKb,MAAO,CAACoU,SAAU,QAAvB,4DACkD,KAChD,SAACC,EAAA,EAAD,CACEnK,MAAOrJ,EAAAA,EAAAA,QACPyT,UAAU,SACVzW,QAAS,YACP0W,EAAAA,EAAAA,GAAgB,CACdrG,MAAO,eACPsG,KAAMP,EAAMQ,WANlB,8BAiBR,GAA2B,KAAvB,UAAAR,EAAMS,YAAN,eAAY1b,QACd,OAAO,KAGT,IAAM2b,EAAkB,IACvBV,EAAMS,MAAQ,IAAIpd,SAAQ,SAAC0W,GACtBA,GAAgC,kBAAlBA,EAAI4G,WACpBD,EAAShX,KAAKqQ,MAGlB,IAAM0G,EAAcC,EAASrM,MAAK,SAACC,EAAQf,GACzC,OAAQe,EAAEqM,WAAa,IAAMpN,EAAEoN,WAAa,MAG9C,OACE,SAAC,KAAD,CAAgB1G,MAAOwG,EAAK,GAAL,UAAaA,EAAK,GAAGG,aAArB,aAAsCH,EAAK1b,OAA3C,KAAuD,GAA9E,UACE,8BACG0b,EAAKrU,KAAI,SAACoO,EAAGnO,GAAJ,OACRmO,GACE,UAACqG,EAAD,CAA2BzG,GAAE,gBAAWI,EAAEZ,OAASkH,SAAUtG,EAAEZ,QAAUA,EAAzE,UACGvN,EAAMoU,EAAK1b,OAAS,IAAK,SAACgc,EAAD,CAAUhV,MAAO,CAACU,OAAQ,OACpD,SAAC2I,EAAA,EAAD,CAAKQ,QAAS,CAACrH,IAAK,GAApB,UACE,SAAC,KAAD,CAAoBiE,OAAQgI,EAAEhI,YAEhC,iBACEzG,MAAO,CACLsF,KAAM,EACN2P,WAAY,EACZC,SAAU,EACVhL,MAAOrJ,EAAAA,EAAAA,SALX,WAQE,iBAAKb,MAAO,CAACmV,QAAS,OAAQ7L,eAAgB,iBAA9C,WACE,UAAC8L,EAAD,WACG3G,EAAEZ,MAAMpU,MAAM,KAAK,GACX,IAAR6G,GAAa+U,MAEhB,SAAC,KAAD,CAASrH,IAAKS,QAEhB,iBACEzO,MAAO,CACLmV,QAAS,OACTjL,MAAOrJ,EAAAA,EAAAA,QACPyI,eAAgB,iBAJpB,UAOG4J,EAAkBzE,IACnB,SAAC,KAAD,CAAiBT,IAAKS,YA5BVA,EAAEZ,OAgClB,aAOR6F,GAAwB4B,EAAAA,EAAAA,IAAH,0fA6BvBC,EAAAA,EACAC,EAAAA,IAGEV,GAAclU,EAAAA,EAAAA,IAAO6U,EAAAA,IAAV,6EAAG7U,CAAH,iMAED,qBAAEmU,SAA0BlU,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,QAE5CE,EAAAA,EAAAA,WAOC,qBAAEgU,SAA0BlU,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,UAIzDmU,EAAWpU,EAAAA,GAAAA,IAAAA,WAAH,+DAAGA,CAAH,6EAIEC,EAAAA,EAAAA,SAKVuU,EAAWxU,EAAAA,GAAAA,KAAAA,WAAH,+DAAGA,CAAH,8FACHC,EAAAA,EAAAA,MAQLwU,GACJ,iBACErV,MAAO,CACL0V,aAAc,EACdtB,SAAU,GACVuB,WAAY,OACZ/L,WAAY/I,EAAAA,EAAAA,QACZqJ,MAAOrJ,EAAAA,EAAAA,MACPgJ,QAAS,QACT+L,WAAY,IACZC,WAAY,OACZZ,WAAY,IAVhB,kBCtLWhK,EAAoD,SAAC,GAQ3D,IAPL4C,EAOI,EAPJA,MACAjP,EAMI,EANJA,MACAuH,EAKI,EALJA,SACAzC,EAII,EAJJA,UACAwF,EAGI,EAHJA,YACAlE,EAEI,EAFJA,kBACAkG,EACI,EADJA,gBAEA,EAAmD9N,EAAAA,SAAc,WAM/D,IALA,IACM0Y,EAAY,GACZC,EAAY,GACZC,EAAU,GACVC,EAAY,GAClB,MALale,OAAO4P,KAAKxB,EAASiC,OAKlC,eAAwB,CAAnB,IAAMvI,EAAG,KAEZ,OADcsG,EAASiC,MAAMvI,GAAKiE,OAEhC,KAAK0I,EAAAA,GAAAA,UACHsJ,EAAUnY,KAAKkC,GACf,MACF,KAAK2M,EAAAA,GAAAA,QACL,KAAKA,EAAAA,GAAAA,QACHuJ,EAAUpY,KAAKkC,GACf,MACF,KAAK2M,EAAAA,GAAAA,OACHwJ,EAAQrY,KAAKkC,GACb,MACF,KAAK2M,EAAAA,GAAAA,UACHyJ,EAAUtY,KAAKkC,IAGrB,MAAO,CAACiW,UAAAA,EAAWC,UAAAA,EAAWC,QAAAA,EAASC,UAAAA,KACtC,CAAC9P,IAxBG2P,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,UA0BhCC,EAAiB,SAACC,GAAD,OACrB,SAACC,EAAD,CACExX,MAAOA,EACPpH,KAAM2e,EAENhQ,SAAUA,EACV4O,SAAUrR,EAAUiE,KAAK9O,SAASsd,GAClCtY,QAASqL,EACTkD,cAAepH,EACfqR,QAASnL,GALJiL,IASHG,GAAqB,OAARnQ,QAAQ,IAARA,OAAA,EAAAA,EAAUc,WAAYd,EAASc,SAAW,EAE7D,OACE,iBAAKjH,MAAO,CAACuW,UAAW,QAAxB,WACE,SAACjD,EAAD,CACEzF,MAAOA,EACP0F,uBACEpN,EAASc,UAAYd,EAASqQ,kBAAoBrQ,EAASW,mBAAqB,KAGpF,SAAC,KAAD,CAAgBoH,MAAK,UAAKoI,EAAa,eAAiB,YAAnC,aAAmDR,EAAU9c,OAA7D,KAArB,UACE,yBACwB,IAArB8c,EAAU9c,QACT,SAACyd,EAAD,8CAEAX,EAAUzV,IAAI6V,QAIpB,SAAC,KAAD,CAAgBhI,MAAK,qBAAgB6H,EAAU/c,OAA1B,KAArB,UACE,yBACwB,IAArB+c,EAAU/c,QACT,SAACyd,EAAD,qCAEAV,EAAU1V,IAAI6V,QAIpB,SAAC,KAAD,CAAgBhI,MAAK,mBAAc8H,EAAQhd,OAAtB,KAArB,UACE,yBACsB,IAAnBgd,EAAQhd,QACP,SAACyd,EAAD,oCAEAT,EAAQ3V,IAAI6V,QAIlB,SAAC,KAAD,CAAgBQ,oBAAkB,EAACxI,MAAK,qBAAgB+H,EAAUjd,OAA1B,KAAxC,UACE,yBACwB,IAArBid,EAAUjd,QACT,SAACyd,EAAD,sCAEAR,EAAU5V,IAAI6V,WAQpBE,EAQD,SAAC,GAAwE,IAAD,IAAtExX,EAAsE,EAAtEA,MAAOpH,EAA+D,EAA/DA,KAAMud,EAAyD,EAAzDA,SAAU5O,EAA+C,EAA/CA,SAAUtI,EAAqC,EAArCA,QAASwY,EAA4B,EAA5BA,QAASjK,EAAmB,EAAnBA,cAClD1U,EAAOyO,EAASiC,MAAM5Q,GACtBmR,EAAG,UAAGjR,EAAKiR,WAAR,QAAe/J,EACxB,OACE,UAAC+X,EAAD,CAEE5B,SAAUA,EACVlX,QAAS,SAACsO,GAAD,cAAgCtO,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAUrG,EAAM2U,IACzDC,cAAe,yBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAgB5U,IACrC6U,aAAc,yBAAMgK,QAAN,IAAMA,OAAN,EAAMA,EAAU7e,IAC9B8U,aAAc,yBAAM+J,QAAN,IAAMA,OAAN,EAAMA,EAAU,OANhC,UAQG3e,EAAKoM,QAAU0I,EAAAA,GAAAA,SACd,SAACC,EAAA,EAAD,CAASC,QAAQ,cACfhV,EAAKoM,QAAU0I,EAAAA,GAAAA,SACjB,SAACoK,EAAA,EAAD,CAEEC,UAAW,CACTC,gBAAiB,CAACC,SAAS,GAC3BC,KAAM,CAACD,SAAS,IAElBhO,SAAS,SACTF,QAAQ,uEAPV,UASE,SAACoO,EAAD,mBAGF,SAACA,EAAD,CACEjX,OAAK,WACAuM,EAAAA,EAAAA,IAAW,UAACpG,EAASiC,MAAM5Q,UAAhB,aAAC,EAAsBsM,MAAO,CAC1CqC,SAAAA,EACA1C,QAAS,CAACvH,KAAMlB,EAAAA,GAAAA,uBAKxB,SAACkc,EAAD,UAAY1f,IACXE,EAAK8Q,QAAS,SAAC2O,EAAD,WAAU/W,EAAAA,EAAAA,IAAkBuI,EAAMjR,EAAK8Q,WAhCjDhR,IAqCL0f,EAAYtW,EAAAA,GAAAA,IAAAA,WAAH,mEAAGA,CAAH,oDAMT+V,EAAoB/V,EAAAA,GAAAA,IAAAA,WAAH,2EAAGA,CAAH,sKAOMC,EAAAA,EAAAA,aAEzB,qBAAEkU,UAAsB,sBAAmBlU,EAAAA,EAAAA,QAAnB,OAGVA,EAAAA,EAAAA,SAILoW,EAAgBrW,EAAAA,GAAAA,IAAAA,WAAH,uEAAGA,CAAH,gGASpBuW,EAAUvW,EAAAA,GAAAA,IAAAA,WAAH,iEAAGA,CAAH,iDACFC,EAAAA,EAAAA,SAIL4V,EAAc7V,EAAAA,GAAAA,IAAAA,WAAH,qEAAGA,CAAH,+DAINC,EAAAA,EAAAA,U,yICjNEuW,EAAmBxW,EAAAA,GAAAA,IAAAA,WAAH,2EAAGA,CAAH,wRAKAC,EAAAA,EAAAA,YACbA,EAAAA,EAAAA,MAKZwW,EAAAA,IAeSC,EAAiB1W,EAAAA,GAAAA,IAAAA,WAAH,yEAAGA,CAAH,6BAKd2W,EAAgB3W,EAAAA,GAAAA,IAAAA,WAAH,wEAAGA,CAAH,kB,6GClBb4E,EAAc,WAIrB,IAHJ/B,EAGG,uDADC,GAEE+T,EAAMpa,EAAAA,SACZ,EAA4BA,EAAAA,SAA4C,CACtE6B,KAAM,EACNuD,IAAK,IAFP,eAAOiV,EAAP,KAAeC,EAAf,KAIA,EAAwBta,EAAAA,SAAgD,CACtEwC,MAAO,EACPc,OAAQ,IAFV,eAAOiX,EAAP,KAAaC,EAAb,KAKOC,EAAiBpU,EAAjBoU,cAIDC,EAAa1a,EAAAA,aAAkB,WACnC,GAAKoa,EAAI9S,QAAT,CAIA,IAkBIqT,EAlBEC,EAAc,SAACngB,GACnB+f,EAAQ,CAAChY,MAAO/H,EAAK+H,MAAOc,OAAQ7I,EAAK6I,SACzC,IAAMuX,EAAYT,EAAI9S,QACtB,GAAIuT,EAAW,CACb,IAAOC,EAAoBD,EAApBC,QACP,IAD2BD,EAAXE,SACe,IAAftgB,EAAK+H,OAAeiY,EAAe,CACjD,IAAMO,EAAeP,EAAcK,GACnCA,EAAQG,UAAYD,EAAa5V,IACjC0V,EAAQI,WAAaF,EAAanZ,KAClCyY,EAAUU,GACVH,EAAUE,SAAU,KAMnBD,EADWV,EAAI9S,QACfwT,QAgBP,OAbIA,aAAmBtW,cACjB,mBAAoB2W,QACtBR,EAAiB,IAAIQ,OAAM,gBAAmB,SAAC5F,GACzCA,EAAQ,GAAGhR,SAAWuW,GACxBF,EAAY,CAACpY,MAAOsY,EAAQM,YAAa9X,OAAQwX,EAAQO,mBAG9CC,QAAQR,IAEvBS,QAAQC,KAAR,4EACAZ,EAAY,CAACpY,MAAOsY,EAAQM,YAAa9X,OAAQwX,EAAQO,iBAGtD,WAAO,IAAD,EACG,QAAd,EAAAV,SAAA,SAAgBc,iBAEjB,CAAChB,IAEJza,EAAAA,UAAgB0a,EAAY,CAACA,IAG7B,IAAMgB,EAAY1b,EAAAA,OAAkB,MAE9B2b,EAAW,SAAC1X,GAEdpD,KAAKyB,MAAM+X,EAAOxY,QAAUoC,EAAEG,cAAc8W,YAC5Cra,KAAKyB,MAAM+X,EAAOjV,OAASnB,EAAEG,cAAc6W,YAIzCS,EAAUpU,SACZoU,EAAUpU,QAAQsU,SAEpBtB,EAAU,CACRzY,KAAMoC,EAAEG,cAAc8W,WACtB9V,IAAKnB,EAAEG,cAAc6W,cAInB3S,EAAmB,SAAC0S,EAA2Ca,GAAuB,IAAD,EACnFf,EAAO,UAAGV,EAAI9S,eAAP,aAAG,EAAawT,QAE7B,GAAKA,EAAL,CAIA,IAAMtY,EAAQsY,EAAQM,YAChB9X,EAASwX,EAAQO,aAEnBK,EAAUpU,UACZoU,EAAUpU,QAAQsU,SAClBF,EAAUpU,QAAU,MAGtB0T,EAAanZ,KAAOhB,KAAKiE,IAAIgW,EAAQgB,YAActZ,EAAO3B,KAAK0C,IAAI,EAAGyX,EAAanZ,OACnFmZ,EAAa5V,IAAMvE,KAAKiE,IAAIgW,EAAQiB,aAAezY,EAAQzC,KAAK0C,IAAI,EAAGyX,EAAa5V,MAEpF,IAAM4W,EAAS,WACblB,EAAQG,UAAYD,EAAa5V,IACjC0V,EAAQI,WAAaF,EAAanZ,KAClCyY,EAAUU,GACVU,EAAUpU,QAAU,MAElBuU,EACFH,EAAUpU,QAAU2U,GAAAA,CAAQ5B,EAAQW,EAAc,CAChD1gB,KAAM,SAACwN,GACLgT,EAAQG,UAAYnT,EAAE1C,IACtB0V,EAAQI,WAAapT,EAAEjG,KACvByY,EAAU,CAACzY,KAAMiG,EAAEjG,KAAMuD,IAAK0C,EAAE1C,OAElC8W,KAAMF,IAGRA,MAOEG,EAASnc,EAAAA,aACb,SAACoc,GAAwB,IAAD,EAClBA,KAAE,UAAKhC,EAAI9S,eAAT,aAAK,EAAawT,WAIxBV,EAAI9S,QAAU,CACZwT,QAASsB,EACTrB,SAAS,GAEXL,OAEF,CAACA,IAGH,MAAO,CACLnZ,UAAS,kBAAK8Y,GAAWE,GACzBlS,eAAgB,CACd+R,IAAK+B,EACLR,SAAAA,GAEFrT,iBAAAA,K,gRCnJS+T,EAAiD,SAACxY,GAC7D,IAAOiN,EAAuCjN,EAAvCiN,MAAOwI,EAAgCzV,EAAhCyV,mBAAoBpL,EAAYrK,EAAZqK,SAClC,GAAwB1H,EAAAA,EAAAA,GAAmB,kBAAqBsK,IAAS,SAACtL,GAAD,OACvD,IAAhBA,IAAwC,IAAhBA,EAAwBA,GAAe8T,KADjE,eAAOgD,EAAP,KAAaC,EAAb,KAIMC,EAAWxc,EAAAA,aAAkB,WACjCuc,GAAQ,SAAC/K,GAAD,OAAQA,OACf,CAAC+K,IAEJ,OACE,iCACE,UAACE,EAAD,CAAqBhc,QAAS+b,EAA9B,WACE,SAACE,EAAD,UAAuB5L,KACvB,SAAC,KAAD,CACEyJ,KAAM,GACNngB,KAAK,kBACLwI,MAAO,CAAChB,UAAW0a,EAAO,YAAc,wBAG5C,SAAC,KAAD,CAAUK,OAAQL,EAAlB,UACE,yBAAMpO,UAMDwO,EAAuBlZ,EAAAA,GAAAA,IAAAA,WAAH,+EAAGA,CAAH,4EAOpBoZ,EAAepZ,EAAAA,GAAAA,GAAAA,WAAH,uEAAGA,CAAH,oIACRG,EAAAA,EAAAA,WAWJkZ,EAAgBrZ,EAAAA,GAAAA,GAAAA,WAAH,wEAAGA,CAAH,qDACTG,EAAAA,EAAAA,WAKJmZ,EAAqBtZ,EAAAA,GAAAA,GAAAA,WAAH,6EAAGA,CAAH,iEACdG,EAAAA,EAAAA,WAMJoZ,EAAiBvZ,EAAAA,GAAAA,IAAAA,WAAH,yEAAGA,CAAH,gCAChBC,EAAAA,EAAAA,SAIEuZ,EAAuBxZ,EAAAA,GAAAA,IAAAA,WAAH,+EAAGA,CAAH,2JACJC,EAAAA,EAAAA,aAWvBgZ,EAAsBjZ,EAAAA,GAAAA,IAAAA,WAAH,8EAAGA,CAAH,gQAITC,EAAAA,EAAAA,MACUA,EAAAA,EAAAA,YACGA,EAAAA,EAAAA,YAClBA,EAAAA,EAAAA,U,qBChGJ,IAAKwZ,E,uDAAZ,SAAYA,GAAAA,EAAAA,MAAAA,QAAAA,EAAAA,KAAAA,OAAAA,EAAAA,QAAAA,UAAAA,EAAAA,MAAAA,QAAAA,EAAAA,SAAAA,WAAAA,EAAAA,MAAAA,QAAZ,CAAYA,IAAAA,EAAAA,KASL,IAAMC,EAAmB,CAAC,OAAQ,UAAW,QAAS,WAAY,U,mYCe5DC,EAAM3Z,EAAAA,GAAAA,IAAAA,WAAH,kEAAGA,CAAH,sQAOCG,EAAAA,EAAAA,UAKSF,EAAAA,EAAAA,aACV,gBAAE2Z,EAAF,EAAEA,YAAaC,EAAf,EAAeA,MAAf,OAA2BD,EAAc,UAvBjC,SAACC,GAAD,aACrB,eACEJ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,QADnB,SAEEwZ,EAAAA,EAAAA,KAAgBxZ,EAAAA,EAAAA,QAFlB,SAGEwZ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,QAHnB,SAIEwZ,EAAAA,EAAAA,QAAmBxZ,EAAAA,EAAAA,WAJrB,SAKEwZ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,QALnB,SAMEwZ,EAAAA,EAAAA,SAAoBxZ,EAAAA,EAAAA,OANtB,GAOC4Z,GAeiEC,CAAgBD,MAEnE,qBAAED,YAAgC,UAAY,WAErD,SAACvZ,GAAD,aACN,eACEoZ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,UADnB,SAEEwZ,EAAAA,EAAAA,KAAgBxZ,EAAAA,EAAAA,UAFlB,SAGEwZ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,UAHnB,SAIEwZ,EAAAA,EAAAA,QAAmBxZ,EAAAA,EAAAA,YAJrB,SAKEwZ,EAAAA,EAAAA,MAAiBxZ,EAAAA,EAAAA,SALnB,SAMEwZ,EAAAA,EAAAA,SAAoBxZ,EAAAA,EAAAA,QANtB,GAOCI,EAAMwZ,UAGCE,EAAoB/Z,EAAAA,GAAAA,IAAAA,WAAH,gFAAGA,CAAH,0OAEnBC,EAAAA,EAAAA,QAEgBA,EAAAA,EAAAA,YAGVE,EAAAA,EAAAA,WAcJ6Z,EAAW,SAAC3Z,GACvB,IAAM4Z,EAASzd,EAAAA,WAAiB0d,EAAAA,IAC1BphB,EAAQqhB,OAAO9Z,EAAMxE,SAAShD,MAAM,KAC1C,OACE,SAACuhB,EAAD,CAAmBhb,MAAO,CAACJ,MAAOib,EAAOtiB,OAAzC,SACG0I,EAAMxE,QACH/C,EAAM2G,KAAI,SAAC4a,EAAG3a,GAAJ,OACR,iBAEE,eAAc2a,EACd,qBAAoBC,EACpBlb,MAAO,CACLiV,WAAYhX,KAAK0C,IAAI,EAAS,GAANL,EAAW,GACnCsV,WAAYtV,IAAQ5G,EAAMV,OAAS,EAAI,IAAM,KANjD,UASGsH,EAAM,EAAI,SAAM,GAChB2a,EAAEjiB,OAAS,GAAW,EAANsH,EAAhB,UACM2a,EAAEE,OAAO,EAAG,GAAW,EAAN7a,GADvB,iBACmC2a,EAAEE,OAAOF,EAAEjiB,OAAS,KACpDiiB,IAXC3a,MAcT,OAKG0a,EAAoBpa,EAAAA,GAAAA,IAAAA,WAAH,gFAAGA,CAAH,iDAMxBsa,EAAuBE,KAAKC,UAAU,CAC1CjH,SAAU,QACVkH,WAAYva,EAAAA,EAAAA,UACZmJ,MAAOrJ,EAAAA,EAAAA,KACP+I,WAAY/I,EAAAA,EAAAA,MACZqM,OAAO,aAAD,OAAerM,EAAAA,EAAAA,SACrB2B,KAAM,EACNvD,KAAM,IAGFsc,EAAkBC,GAAAA,EAAQ,SAACC,GAC/B,OAAO,IAAIC,KAAKC,eAAeC,UAAUC,SAAU,CACjDC,KAAM,UACNC,OAAQ,UACR/Q,OAAQ,UACRgR,UAAW,MACXC,SAAuB,cAAbR,GAA2BS,EAAAA,EAAAA,MAAoBT,OAIvDU,EAAyBX,GAAAA,EAAQ,SAACY,GACtC,OAAO,IAAIV,KAAKW,aAAaD,EAAQ,CACnCE,sBAAuB,EACvBC,sBAAuB,OAMdC,EAIRpf,EAAAA,MAAW,SAAC6D,GACf,IAAOgR,EAAqChR,EAArCgR,KAAMwK,EAA+Bxb,EAA/Bwb,aAAcC,EAAiBzb,EAAjByb,cACrBC,GAAWC,EAAAA,EAAAA,MACX/B,EAASzd,EAAAA,WAAiB0d,EAAAA,IAChC,EAAmB1d,EAAAA,WAAiByf,EAAAA,IAA7BpB,GAAP,eACMqB,EAAiC,kBAAT7K,GAA6C,kBAAjBwK,EAYpDM,EAAI,UAAMJ,EAASK,SAAf,YAA2BC,IAAAA,UAAa,CAAC/U,YAAajH,EAAMgR,QAChEiL,GAAiBC,EAAAA,EAAAA,IAA0BrkB,OAAOmZ,IAASwK,GAAgB,IAC3EW,GAAkBD,EAAAA,EAAAA,IAA0BrkB,OAAOmZ,IAASyK,GAAiB,IAEnF,OACE,SAACW,EAAD,CAA0Brd,MAAO,CAACJ,MAAOib,EAAO9X,WAAhD,UACE,SAAC,IAAD,CACEua,QAASR,EACTjU,SACE,SAAC,KAAD,CACEc,QAAS,EACT4T,MAAI,EACJC,KAAM,CACJ,CACE3d,IAAK,qBACLxC,OACE,iBAAM2C,MAAO,CAACsb,WAAYva,EAAAA,EAAAA,UAAsBqT,SAAU,QAA1D,SACG8I,KAIPR,EACI,CACE7c,IAAK,sBACLxC,OACE,iBAAM2C,MAAO,CAACsb,WAAYva,EAAAA,EAAAA,UAAsBqT,SAAU,QAA1D,SACGgJ,KAIP,QAIVK,UAAU,OA5BZ,UA8BE,SAAC,KAAD,CAAMpP,GAAI0O,EAAV,SA9Ca,WACjB,GAAI9K,EAAM,CACR,IAAMyL,EAAa5kB,OAAOmZ,GACpB0L,EAAOpC,EAAgBE,GAAUmC,OAAO,IAAI5X,KAAK0X,IACjDG,EAAiBH,EAAa,IAAQ,IAC5C,MAAM,GAAN,OAAUC,GAAV,OAAiBxB,EAAuBP,UAAUC,UAAU+B,OAAOC,GAAepM,MAAM,IAE1F,MAAO,GAuCcqM,YAMnBT,EAA2Bzc,EAAAA,GAAAA,IAAAA,WAAH,uFAAGA,CAAH,qIAQjBC,EAAAA,EAAAA,SASAkd,EAA4B,SAAC9c,GACxC,IAAM4Z,EAASzd,EAAAA,WAAiB0d,EAAAA,IAChC,OACE,SAACkD,EAAD,CAA0Bhe,MAAO,CAACJ,MAAOib,EAAOoD,WAAhD,SACGhd,EAAMqK,YAKP0S,EAA2Bpd,EAAAA,GAAAA,IAAAA,WAAH,uFAAGA,CAAH,yCAEnBC,EAAAA,EAAAA,U,4RC5NLqd,EAAyB,eACzBC,EAAepmB,OAAOqZ,OAC1B,CACE6M,UAAW,IACX1lB,MAAO,IACPwK,UAAW,MAEbqb,EAAAA,EAAAA,GAAcF,IAKHpD,EAAsB1d,EAAAA,eAAA,kBAC9B+gB,GAD8B,IAEjC7gB,SAAU,SAAC+gB,QAGAC,EAAb,gMAIExa,MAAQqa,EAJV,EAMEI,2BAA6B,SAACC,GAC5BjG,OAAOkG,aAAaC,QAAQR,EAAwB9C,KAAKC,UAAUmD,IACnE,EAAKvd,MAAM0d,gBAAgBH,GAC3B,EAAKza,SAASya,IATlB,uCAYE,WACE,OACE,SAAC1D,EAAoB8D,SAArB,CACEvhB,OAAK,kBACA5F,KAAKqM,OADL,IAEHxG,SAAU7F,KAAK8mB,6BAHnB,SAMG9mB,KAAKwJ,MAAMqK,eApBpB,GAA0ClO,EAAAA,WAsC7ByhB,EAAb,gMACE/a,MAAQ,CACNgb,YAAY,EACZlf,MAAO,EACPmf,QAAS,GAJb,EAYE3d,YAAc,SAAC0O,GACb,IAAOlQ,EAAS,EAAKqB,MAAdrB,MACP,EAAKmE,SAAS,CACZ+a,YAAY,EACZC,QAASjP,EAAEiP,QACXnf,MAAAA,IAEFuC,SAASC,iBAAiB,YAAa,EAAK4c,aAC5C7c,SAASC,iBAAiB,UAAW,EAAK6c,YApB9C,EAuBED,YAAc,SAAC7S,GACb,MAA+B,EAAKlL,MAA7Bie,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,WACjB,EAAqC,EAAKrb,MAAnCgb,EAAP,EAAOA,WAAYlf,EAAnB,EAAmBA,MAAOmf,EAA1B,EAA0BA,QAC1B,GAAK5S,EAAI4S,SAAYD,GAAeI,EAApC,CAGA,IAAME,EAAqB,SAAfD,GAAyB,EAAI,EACzCD,EAASjhB,KAAK0C,IA3EO,GA2Eef,GAASuM,EAAI4S,QAAUA,GAAWK,MA9B1E,EAiCEH,UAAY,WACW,EAAKnb,MAAnBgb,YACO,EAAK/a,SAAS,CAAC+a,YAAY,IACzC3c,SAASG,oBAAoB,YAAa,EAAK0c,aAC/C7c,SAASG,oBAAoB,UAAW,EAAK2c,YArCjD,qDAOE,WACE9c,SAASG,oBAAoB,YAAa7K,KAAKunB,aAC/C7c,SAASG,oBAAoB,UAAW7K,KAAKwnB,aATjD,oBAwCE,WACE,IAAMI,IAAgB5nB,KAAKwJ,MAAMie,SAEjC,OACE,UAACI,EAAD,CAAiBtf,MAAO,CAACJ,MAAOnI,KAAKwJ,MAAMrB,OAA3C,WACE,SAAC2f,EAAD,CACEne,YAAaie,EAAc5nB,KAAK2J,iBAAciH,EAC9CgX,YAAaA,EACbP,WAAYrnB,KAAKqM,MAAMgb,WACvBU,KAAM/nB,KAAKwJ,MAAMke,YAAc,QAJjC,UAME,sBAEF,SAACM,EAAD,UAAchoB,KAAKwJ,MAAMqK,kBArDjC,GAA4BlO,EAAAA,WA2DfsiB,EAAU,WACrB,IAAM7E,EAASzd,EAAAA,WAAiB0d,GAChC,OACE,UAAC6E,EAAD,YACE,SAACd,EAAD,CAAQjf,MAAOib,EAAOtiB,MAAO2mB,SAAU,SAACtf,GAAD,OAAWib,EAAOvd,UAAP,kBAAoBud,GAApB,IAA4BtiB,MAAOqH,MAArF,iBAGA,SAACif,EAAD,CACEjf,MAAOib,EAAOoD,UACdiB,SAAU,SAACtf,GAAD,OAAWib,EAAOvd,UAAP,kBAAoBud,GAApB,IAA4BoD,UAAWre,MAF9D,yBAMA,SAAC0f,EAAD,CAAiBtf,MAAO,CAACsF,KAAM,GAA/B,mBACA,SAACuZ,EAAD,CACEM,WAAW,OACXvf,MAAOib,EAAO9X,UACdmc,SAAU,SAACtf,GAAD,OAAWib,EAAOvd,UAAP,kBAAoBud,GAApB,IAA4B9X,UAAWnD,MAH9D,2BAWO+f,EAAmB/e,EAAAA,GAAAA,IAAAA,WAAH,sFAAGA,CAAH,0GAElBC,EAAAA,EAAAA,QAGkBA,EAAAA,EAAAA,aAIhBye,EAAkB1e,EAAAA,GAAAA,IAAAA,WAAH,qFAAGA,CAAH,4GAUtB2e,EAAmB3e,EAAAA,GAAAA,IAAAA,WAAH,sFAAGA,CAAH,sIAQV,qBAAEye,YAAgC,YAAc,aAExD,kBAAsB,UAAtB,EAAEG,KAAW,gCAKC,qBAAEV,WAA8Bje,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,eAI7D4e,EAAc7e,EAAAA,GAAAA,IAAAA,WAAH,iFAAGA,CAAH,iE,yFC9KJgf,EAAkB,SAAC3e,GAE9B,OCRA7D,EAAAA,WAAgB,WACd,IAAMyiB,EAAU,SAACxe,GACfA,EAAEye,iBACFze,EAAE0e,YAAc,IAIlB,OADAxH,OAAOnW,iBAAiB,eAAgByd,GACjC,WACLtH,OAAOjW,oBAAoB,eAAgBud,MAE5C,KDFI,SAAC,KAAD,CAAQpL,QAASxT,EAAMwT,Y,2VEgBnBuL,EAAgD,SAAC,GAAW,IAAVhS,EAAS,EAATA,IAClDH,EAAuBG,EAA3BxQ,GAAWyiB,EAAgBjS,EAAhBiS,aAClB,EAAoC7iB,EAAAA,UAAwB,GAA5D,eAAO8iB,EAAP,KAAmBC,EAAnB,KACMC,EAAchjB,EAAAA,aAAkB,kBAAM+iB,GAAc,KAAQ,IAE5DE,EAAajjB,EAAAA,aACjB,SAACkjB,GACC,IAAOC,EAAUD,EAAVC,OACDC,EAAQ3S,GAAS0S,EAAO1S,GAC1B2S,GAAS,YAAaA,GACxBC,EAAAA,EAAAA,KAAmB,CACjBhM,QAAS+L,EAAM/L,QACfhX,KAAM,QACNijB,OAAQ,aAId,CAAC7S,IAGH,OAAKA,GAKH,iCACE,SAAC,KAAD,CACEpQ,MAAM,SAAC,KAAD,CAAMjG,KAAK,WACjBkpB,OAAO,SACPla,SAAU0Z,EACVriB,QAAS,kBAAMsiB,GAAc,IAJ/B,wBAQA,SAAC,IAAD,CACEpG,OAAQmG,EACRS,QAASP,EACTC,WAAYA,EACZO,cAAY,UAAI/S,EAAQoS,QAjBrB,MAuBX,SAASY,EAAuBnd,EAA0ByC,GACxD,IAAM2a,EAAapd,EAAUiE,KAAKtH,KAChC,SAACR,GAAD,aAAUA,IAAG,UAAIsG,EAASiC,MAAMvI,UAAnB,aAAI,EAAqBiE,QAAU0I,EAAAA,GAAAA,aAGlD,OAAO,kBACF9I,GADL,IAEEqd,QAASrd,EAAUiE,KAAK3O,OAAS,EACjCgoB,OAAQtd,EAAUiE,KAAK3O,QAAU8nB,EAAWjoB,SAAS2T,EAAAA,GAAAA,QACrDyU,SAAUH,EAAWI,OAAM,SAACC,GAAD,MACzB,CAAC3U,EAAAA,GAAAA,OAAmBA,EAAAA,GAAAA,WAAsB3T,SAASsoB,QAoBlD,IAAMC,EAAiB,SAACpT,GAAD,OAAsBqT,EAAAA,GAAAA,IAAiBrT,EAAIvH,SAC5D6a,EAAoB,SAACtT,GAAD,OAC/BA,EAAIuT,eAAiBC,EAAAA,GAAAA,IAAmBxT,EAAIvH,SAEjCgb,EAAoD,SAACxgB,GAAW,IAAD,IACnEkF,EAAkClF,EAAlCkF,SAAU5C,EAAwBtC,EAAxBsC,MAAOme,EAAiBzgB,EAAjBygB,SAAU1T,EAAO/M,EAAP+M,IAC5B2T,EAAkB,OAAG3T,QAAH,IAAGA,GAAH,UAAGA,EAAKuT,qBAAR,aAAG,EAAoBI,mBACxCC,GAAgCC,EAAAA,EAAAA,MAAhCD,6BACDE,EA+IR,SACE9T,GAC8E,IAAD,IACvE+T,GAAYC,EAAAA,EAAAA,GAAoBhU,GAGtC,IAAKA,EACH,OAAO,KAGT,IAAKA,EAAIiU,mBACP,MAAO,CACLxkB,KAAM,QACNC,QAAQ,IAAD,OAAMsQ,EAAI6G,aAAV,yBACPrO,UAAU,GAId,GAAIub,EAAW,CACb,IAAaG,EAAaH,EAAnBI,KAIP,GAAkB,wBAAdD,EACF,OAAO,KAMT,GAAkB,gBAAdA,EAEF,MAAO,CACLzkB,KAAM,UACNC,QAAQ,0BAAD,OAA4BsQ,EAAI6G,aAAhC,8DACPrO,UAAU,GAId,GAAkB,kBAAd0b,EAA+B,CAEjC,IAAME,EAAiBpU,EAAIqU,kBACvBC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IACEvU,EAAIqU,iBAAiBG,eACrBxU,EAAIqU,iBAAiBI,yBAGzB,KAEJ,MAAO,CACLhlB,KAAM,UACNC,SACE,UAAC,IAAD,CAAOgM,UAAU,SAASC,QAAS,EAAnC,WACE,4DAAkCqE,EAAI6G,aAAtC,kBACEuN,GAAkB,4BADpB,OAGCA,GACC,uDAC0B,4BAASA,OAEjC,QAGR5b,UAAU,GAKd,MAAO,CACL/I,KAAM,UACNC,QAAQ,iBAAD,OAAmBsQ,EAAI6G,aAAvB,gEACPrO,UAAU,GAMd,IAAMkc,EAAU,UAAG1U,EAAIqU,wBAAP,aAAG,EAAsBG,eACnCG,EAAkB,UAAG3U,EAAIqU,wBAAP,aAAG,EAAsBI,uBAcjD,MAAO,CACLhlB,KAAM,QACNC,SAbA,UAAC,IAAD,CAAOgM,UAAU,SAASC,QAAS,EAAnC,WACE,oCAAUqE,EAAI6G,aAAd,iDACC6N,GAAcC,GACb,yDAA8BC,EAAAA,EAAAA,IAC5BF,EACAC,GAFF,qBAIE,QAONnc,UAAU,GA/OUqc,CAAmC7U,GAEnDtK,EAAYmd,EAAuB5f,EAAMyC,UAAWyC,GAEpD2c,EA3BR,SACE9U,EACAzK,EACA4C,GAEA,IAAM4c,EAAM/U,EAAIoF,KAAK9T,MAAK,SAACC,GAAD,OAAOA,EAAEM,MAAQwT,EAAAA,EAAAA,iBAC3C,OAAK0P,EAGElC,EACL,CAAClZ,MAAM1O,EAAAA,EAAAA,GAAcsK,EAAOwf,EAAI1lB,OAAOlE,IAAIkH,KAAI,SAACvD,GAAD,OAAOA,EAAEtF,QAAO0B,MAAO6pB,EAAI1lB,OAC1E8I,GAJO,KAoBmB6c,CAAyBhV,EAAKzK,EAAO4C,GAC3D8c,EAAuB,UAAGjV,EAAIoF,YAAP,aAAG,EAAU1E,MACxC,SAACnP,GAAD,OAAOA,EAAEM,MAAQwT,EAAAA,EAAAA,eAAwC,SAAZ9T,EAAElC,SAG3C6lB,EAAkC,CACtCzlB,KAAM,SACN0lB,MAAO,IACPjV,MAAO,wBACPxQ,QAAS,2CACT8I,UAAW4a,EAAepT,GAC1BnQ,QAAS,kBAAM6jB,EAAS,CAACS,KAAM,UAG3BiB,EAAkC,CACtC3lB,KAAM,eACN0lB,OAA0B,OAAnBL,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB5pB,QAAS,IACrCgV,MAAO,aACP1H,UAAWsc,KAAyBA,EAAoB7B,UAAY6B,EAAoB9B,QACxFtjB,SACE,2BACIolB,GAAwBA,EAAoB/B,QAEzC+B,EAAoB7B,SAErB,qDADA,qEAFA,0EAIJ,SAACoC,EAAD,CAA0B3f,UAAWof,OAGzCjlB,QAAS,kBAAM6jB,EAAS,CAACS,KAAM,YAAaze,UAAWof,MAGnD/N,EAAsC,CAC1CtX,KAAM,KACN0lB,MAAOzf,EAAUxK,MACjBgV,MAAOxK,EAAUiE,KAAK3O,OAAS,EAAI,iBAAmB,gBACtDwN,UAAW9C,EAAUqd,WAAard,EAAUud,UAAYvd,EAAUsd,QAClEtjB,SACE,2BACIgG,EAAUqd,QAEPrd,EAAUud,SAEX,6DADA,mDAFA,sDAIJ,SAACoC,EAAD,CAA0B3f,UAAWA,OAGzC7F,QAAS,kBAAM6jB,EAAS,CAACS,KAAM,YAAaze,UAAAA,MAGxC4f,EAA0C,CAC9C7lB,KAAM,gBACNyQ,MAAO,gBACP1H,UAAW4a,EAAepT,IAAkC,IAA1BtK,EAAUiE,KAAK3O,OACjD0E,QAAS,6DACTG,QAAS,WACP,IAAKmQ,EAAIuT,cAEP,OADA5I,QAAQC,KAAK,wEACN2K,QAAQC,UAEjB,IAAMC,EAA8B/f,EAAUiE,KAAKtH,KAAI,SAACvD,GAAD,gBAAUA,EAAV,QAAgB2H,KAAK,KACtEif,GAAgBzqB,EAAAA,EAAAA,GAAcsK,EAAOkgB,GAA6BtqB,IAAIkH,KAC1E,SAACqH,GAAD,OAAUA,EAAKlQ,QAGjB,OAAOkqB,EAAS,CACdS,KAAM,YACNze,UAAW,CACTiE,KAAM+b,EACNxqB,MAAOuqB,OAMTE,EAAqBrC,EAAkBtT,GAEvC4V,EAAyC,CAC7CnmB,KAAM,gBACNyQ,MAAO,eACP1H,UAAWmd,EACXjmB,QAAUimB,EAEN,qEADA,sDAEJ9lB,QAAS,kBAAM6jB,EAAS,CAACS,KAAM,mBAG5BR,GACH,CAAC5M,EAAUqO,EAAMQ,EAAaN,GAAchsB,SAAQ,SAACusB,GACnDA,EAAOrd,UAAW,EAClBqd,EAAO3V,MACL,wHAIN,IAAMzK,EAAU,CAACyf,EAAME,EAAMrO,EAAUuO,EAAcM,GAC/CE,EAAiBpgB,EAAUqd,QAC7BhM,EACA4O,GAAsBV,EACtBW,EACmB,OAAnBd,QAAmB,IAAnBA,GAAAA,EAAqB/B,QACrBqC,EACA,KAEEW,EAAUpC,GAAsBmC,EAAiBA,EAAiBZ,EAWxE,OACE,UAAC,IAAD,CAAOxZ,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,IAAD,CAAKrE,KAAM,CAACoE,UAAW,OAAvB,UACE,SAAC,IAAD,CACEsa,SAAU,EACVD,QAASA,EACTtgB,QAASA,EACTyK,MACoB,MAAlB6V,EAAQZ,MAAR,qBAEIY,EAAQZ,MAAR,sBACeY,EAAQZ,MADvB,0BAEcY,EAAQ7V,OAE5BxQ,QAtBN,OAAIokB,QAAJ,IAAIA,GAAAA,EAAepkB,QACjB,OAAOokB,QAAP,IAAOA,OAAP,EAAOA,EAAepkB,QAEjBkkB,EAA6B7K,aAChC1O,EACAuZ,EAA6BqC,eAkB3BxmB,KAAI,OAAEqkB,QAAF,IAAEA,OAAF,EAAEA,EAAerkB,KACrB+I,UAAuB,OAAbsb,QAAa,IAAbA,OAAA,EAAAA,EAAetb,YAAaob,EAA6B7K,YAGrEsK,EAAAA,GAAAA,IAAiBrT,EAAIvH,QAA0C,MAAhC,SAACuZ,EAAD,CAAiBhS,IAAKA,QAyG7D,IAAMqV,EAAwE,SAAC,GAAD,IAAE3f,EAAF,EAAEA,UAAF,OAC5E,gBAAK1D,MAAO,CAACkkB,YAAa,QAA1B,WACa,OAATxgB,QAAS,IAATA,OAAA,EAAAA,EAAWiE,OAAQ,IAAItH,KAAI,SAAC3I,GAAD,OAC3B,iBAAiBsI,MAAO,CAACmV,QAAS,SAAlC,qBAAkDzd,IAAvCA,U,yDC9VJysB,E,OAAa/mB,cADHiL,Y,6JCOXmE,E,oFAAZ,SAAYA,GAAAA,EAAAA,UAAAA,YAAAA,EAAAA,gBAAAA,kBAAAA,EAAAA,QAAAA,UAAAA,EAAAA,UAAAA,YAAAA,EAAAA,QAAAA,UAAAA,EAAAA,OAAAA,SAAAA,EAAAA,QAAAA,UAAZ,CAAYA,IAAAA,EAAAA,KAUZ,IAAM4X,EAAkB,CACtB5X,EAAW6X,gBACX7X,EAAW8X,UACX9X,EAAW+X,OACX/X,EAAWgY,SA6DAld,EAAuC,CAClDmd,WAAY,EACZC,gBAAiB,EACjBhS,cAAe,GACftK,MAAO,IAGIuc,EAAwC,SAACC,GACpD,IAAMC,EAAkB,GAIxB,OAHAD,EAASttB,SACP,SAACmF,GAAD,OAAcooB,EAAgBpoB,GAAW,CAACqoB,QAASroB,EAASmoB,SAAU,CAACnoB,OAElEooB,GAGHE,EAAgB,SAACC,GAAD,OAAwBA,EAAK/mB,KAAKyB,MAAW,IAALslB,QAAa3c,GAyD3E,IAAM4c,EAAwB,SAACxe,GAC7B,OAAQA,GACN,KAAKye,EAAAA,GAAAA,QACH,OAAO1Y,EAAW8X,UACpB,KAAKY,EAAAA,GAAAA,QACH,OAAO1Y,EAAW+X,OACpB,KAAKW,EAAAA,GAAAA,QACH,OAAO1Y,EAAW2Y,QACpB,QACE,OAAO3Y,EAAWgY,UAIlBY,EAAoB,SAACpe,GACzB,MACqB,gBAAnBA,EAAImN,YACe,6BAAnBnN,EAAImN,YACe,6BAAnBnN,EAAImN,YACe,6BAAnBnN,EAAImN,YACe,2BAAnBnN,EAAImN,YACe,4BAAnBnN,EAAImN,WAEGnN,EAEF,MAuKF,IAAMqe,EAA2D,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMha,EAAc,EAAdA,SACxE0C,EAAM5Q,EAAAA,WAAiB+mB,EAAAA,GACvBoB,EAAcnoB,EAAAA,SAAc,kBAzPpC,SAAgC4Q,GAC9B,IAAM7H,EAA6B,CACjCse,WAAY,EACZC,gBAAiB,EACjBhS,cAAe,GACftK,MAAO,IAET,OAAK4F,GAGDA,EAAI4G,YACNzO,EAASW,kBAAoBie,EAAc/W,EAAI4G,YAE7C5G,EAAIwX,UACNrf,EAASc,SAAW8d,EAAc/W,EAAIwX,UAGxCxX,EAAIyX,UAAUnuB,SAAQ,SAACouB,GACrBvf,EAASiC,MAAMsd,EAASjpB,SAAW,CAGjCqH,MAAOmhB,EAAsBS,EAASjf,QAGtC+B,MAAOuc,EAAcW,EAAS9Q,WAC9BjM,IAAKoc,EAAcW,EAASF,SAG5BG,YAAa,GAIbtU,SAAUqU,EAASrU,SAAShR,KAC1B,SAACulB,EAAStlB,GAAV,MACG,CACCkI,MAAOuc,EAAca,EAAQhR,WAC7BjM,IAAKoc,EAAca,EAAQJ,SAC3BhU,UACElR,IAAQolB,EAASrU,SAASrY,OAAS,EAC/BisB,EAAsBS,EAASjf,QAC/B+F,EAAW6X,oBAKvBzX,QAAS8Y,EAAS9Y,QAAQvM,KAAI,SAACwM,EAAQvM,GAAT,MAAkB,CAC9CkI,MAAOuc,EAAclY,EAAO+H,WAC5BjM,IAAKoc,EAAclY,EAAO2Y,SAC1B3lB,IAAI,UAAD,OAAYS,WAKd6F,GA7CEA,EAiP+B0f,CAAuB7X,KAAM,CAACA,IAChE7H,EAAW/I,EAAAA,SACf,kBAAOkoB,EAAKQ,QAAUP,EAxKnB,SACLD,GAEA,IAAMnf,EAA6B,CACjCse,WAAY,EACZC,gBAAiB,EACjBhS,cAAe,GACftK,MAAO,IAIH2d,EAAe,SAAClU,EAAgBhS,GACpC,IAAIgN,EAASgF,EAAIvS,MAAK,SAAC0mB,GAAD,OAAOA,EAAEnmB,MAAQA,IAAQmmB,EAAErd,OAKjD,OAJKkE,IACHA,EAAS,CAAChN,IAAAA,GACVgS,EAAIoU,QAAQpZ,IAEPA,GAGHqZ,EAAc,SAACxuB,EAAqBua,EAAcnO,GACtDpM,EAAKiuB,YAAYhoB,KAAK,CAACsU,KAAAA,EAAMnO,MAAAA,IAC7BpM,EAAKoM,MAAQA,EACbpM,EAAK2Z,SAAW,IAGlBiU,EAAKhuB,SAAQ,SAAC0P,GACZ,IAAMjE,EAAYjK,OAAOqtB,SAASnf,EAAIjE,UAAW,IAUjD,GARAoD,EAASse,WAAate,EAASse,WAC3BxmB,KAAKiE,IAAIiE,EAASse,WAAY1hB,GAC9BA,EACJoD,EAASue,gBAAkBzmB,KAAK0C,IAAIwF,EAASue,gBAAiB3hB,GAEvC,kBAAnBiE,EAAImN,aACNhO,EAASW,kBAAoB/D,GAGV,oBAAnBiE,EAAImN,YACe,oBAAnBnN,EAAImN,YACe,qBAAnBnN,EAAImN,WACJ,CACAhO,EAASc,SAAWlE,EACpB,cAAmBhL,OAAOC,OAAOmO,EAASiC,OAA1C,eAAkD,CAA7C,IAAM1Q,EAAI,KACTA,EAAKoM,QAAU0I,EAAW4Z,SAC5BF,EAAYxuB,EAAMqL,EAAWyJ,EAAWgY,UAK9C,IAAKxd,EAAIvK,QAAS,CAChB,IAAM4pB,EAAcjB,EAAkBpe,GAClCqf,IACEA,EAAYC,cACdP,EAAa5f,EAASuM,cAAe2T,EAAYC,aAAa9d,MAAQzF,GAEpEsjB,EAAYE,YACdR,EAAa5f,EAASuM,cAAe2T,EAAYE,WAAW5d,IAAM5F,IAiBxE,GAZuB,sBAAnBiE,EAAImN,aACDhO,EAAS0e,kBACZ1e,EAAS0e,gBAAkB,IAE7B1e,EAAS0e,gBAAgB7d,EAAI8d,SAAW,CACtCA,QAAS9d,EAAI8d,QACbF,SAAU5d,EAAI4d,UAAY,GAC1B4B,IAAKzL,OAAO/T,EAAIwf,KAChBC,YAAazf,EAAIyf,kBAAepe,IAIhCrB,EAAIvK,QAAS,CACf,IAAMA,EAAUuK,EAAIvK,QACd/E,EACJyO,EAASiC,MAAM3L,IACd,CACCqH,MAAO0I,EAAWka,UAClBrV,SAAU,GACVsU,YAAa,CACX,CACE7hB,MAAO0I,EAAWka,UAClBzU,KAAMlP,IAGVyF,WAAOH,EACPM,SAAKN,EACLuE,QAAS,IAGPyZ,EAAcjB,EAAkBpe,GAUtC,GATIqf,IACEA,EAAYC,cACdP,EAAaruB,EAAKkV,QAASyZ,EAAYC,aAAa9d,MAAQzF,GAE1DsjB,EAAYE,YACdR,EAAaruB,EAAKkV,QAASyZ,EAAYE,WAAW5d,IAAM5F,IAIrC,4BAAnBiE,EAAImN,WACN+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW4Z,SACxC1uB,EAAK8Q,MAAQzF,OACR,GAAuB,8BAAnBiE,EAAImN,WACb+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW8X,WACxC5sB,EAAKiR,IAAM1K,KAAK0C,IAAIoC,EAAWrL,EAAKiR,KAAO,QACtC,GAAuB,8BAAnB3B,EAAImN,WACb+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW2Y,cACnC,GAAuB,8BAAnBne,EAAImN,WACb+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW+X,QACxC7sB,EAAKiR,IAAM1K,KAAK0C,IAAIoC,EAAWrL,EAAKiR,KAAO,QACtC,GAAuB,iCAAnB3B,EAAImN,WAKb+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW6X,iBACxC6B,EAAYxuB,EAAMqL,EAAY,EAAGyJ,EAAWka,gBACvC,GAAuB,8BAAnB1f,EAAImN,WACb+R,EAAYxuB,EAAMqL,EAAWyJ,EAAW4Z,cACnC,GAAuB,8BAAnBpf,EAAImN,YAGkB,cAA3BnN,EAAI2f,gBAAgBC,GACtB,OAIJzgB,EAASiC,MAAM3L,GAAW/E,MAM9B,cAAmBK,OAAOC,OAAOmO,EAASiC,OAA1C,eAAkD,CAA7C,IAAM1Q,EAAI,KAEbA,EAAKiuB,YAAcjuB,EAAKiuB,YAAYrd,MAAK,SAACC,EAAGf,GAAJ,OAAUe,EAAE0J,KAAOzK,EAAEyK,QAM9D,IARgD,EAQ5C2T,EAA+B,KARa,UAShCluB,EAAKiuB,aAT2B,IAShD,2BAAkC,CAAC,IAAxBpmB,EAAuB,QAC1BqmB,IAAWA,EAAQjd,KAAQpJ,EAAEuE,QAAU0I,EAAW4Z,UACtDR,EAAU,CAACpd,MAAOjJ,EAAE0S,MACpBva,EAAK2Z,SAAS1T,KAAKioB,IAEjBA,GAAWxB,EAAgBvrB,SAAS0G,EAAEuE,SACxC8hB,EAAQjd,IAAMpJ,EAAE0S,KAChB2T,EAAQpU,UAAYjS,EAAEuE,QAhBsB,+BAoBlD,OAAOqC,EAY+B0gB,CAAwBvB,EAAKwB,YACjE,CAACxB,EAAMC,IAET,OAAO,8BAAGja,EAASnF,MAGR4gB,GAAyCzR,EAAAA,EAAAA,IAAH,0hBA4B/C0R,EAAAA,K,gLCxXSC,EAAW,SAAC,GAA8B,IAA7BpZ,EAA4B,EAA5BA,MAClBqZ,GAAQzT,EAAAA,EAAAA,GAAgD0T,EAAiB,CAC7ExT,UAAW,CAAC9F,MAAAA,KAGd,GAAIqZ,EAAMpB,UAAYoB,EAAMrT,KAC1B,OACE,SAACuT,EAAD,WACE,SAAC,IAAD,CAAKvd,QAAS,GAAIvE,KAAM,CAACgE,eAAgB,UAAzC,UACE,SAAC,IAAD,CAASoD,QAAQ,gBAMzB,IAAM2a,EAASH,EAAMrT,KAAKyT,mBAE1B,GAA0B,QAAtBD,EAAOlT,WACT,OAAO,SAAC,KAAD,CAAiBqM,MAAO6G,IAEjC,GAAgC,qBAA5BA,EAAOH,MAAM/S,WACf,OAAO,SAAC,KAAD,CAAiBqM,MAAO6G,EAAOH,QAGxC,IAAMK,EAAO,gBAAY1Z,GACzB,OACE,UAACuZ,EAAD,YACE,SAAC,KAAD,CACE/Y,GAAE,UAAKkZ,EAAL,2BADJ,mBAEKF,EAAOH,MAAMM,eAFlB,uBAGA,SAAC,KAAD,CAAMnZ,GAAE,UAAKkZ,EAAL,2BAAR,mBACMF,EAAOH,MAAMO,YADnB,oBAGA,SAAC,KAAD,CACEpZ,GAAE,UAAKkZ,EAAL,oCADJ,mBAEKF,EAAOH,MAAMQ,iBAFlB,wBAGA,SAAC,KAAD,CACErZ,GAAE,UAAKkZ,EAAL,sCADJ,mBAEKF,EAAOH,MAAMS,aAFlB,8BAOAR,GAAkB7R,EAAAA,EAAAA,IAAH,iiBA0BjBC,EAAAA,GAGE6R,EAA2BxmB,EAAAA,GAAAA,IAAAA,WAAH,6EAAGA,CAAH,oF,6OC1ExBgnB,EAAoB,CACxBC,OAAQhnB,EAAAA,EAAAA,QACRinB,YAAajnB,EAAAA,EAAAA,QACbknB,SAAUlnB,EAAAA,EAAAA,QACVmnB,QAASnnB,EAAAA,EAAAA,QACTonB,QAASpnB,EAAAA,EAAAA,QACTqnB,QAASrnB,EAAAA,EAAAA,SACTsnB,QAAStnB,EAAAA,EAAAA,OACTunB,UAAWvnB,EAAAA,EAAAA,OACXwnB,SAAUxnB,EAAAA,EAAAA,OAGVynB,UAAWznB,EAAAA,EAAAA,SAGA0nB,EAAiEnrB,EAAAA,MAC5E,gBAAEyQ,EAAF,EAAEA,MAAU2a,GAAZ,mBACE,SAAC,IAAD,CACEzf,SAAS,SACT0f,gBAAgB,QAChB5f,SAAS,SAAC,IAAD,CAAUgF,MAAOA,IAC1B6a,eAAgB,IAJlB,UAME,SAACC,GAAD,UAAwBH,SAUjBG,EAA+CvrB,EAAAA,MAAW,YAAqB,IAAnBqJ,EAAkB,EAAlBA,OAAQkR,EAAU,EAAVA,KAC/E,MAAe,YAAXlR,GACK,SAAC,IAAD,CAASiG,QAAQ,iBAEX,cAAXjG,GACK,SAACmiB,EAAD,CAAcniB,OAAQA,EAAQkR,KAAMA,GAAQ,MAGnD,SAACiR,EAAD,CACEniB,OAAQA,EACRkR,KAAMA,GAAQ,GACdkR,MAAOC,EAAAA,GAAAA,IAAuBriB,IAAWsiB,EAAAA,GAAAA,IAAmBtiB,QAK5DuiB,GAAiBC,EAAAA,EAAAA,IAAH,4JAcPL,EAAehoB,EAAAA,GAAAA,IAAAA,WAAH,mEAAGA,CAAH,oJAKd,qBAAE+W,QACD,qBAAEA,QACK,qBAAEA,KAAiB,KAElC,qBAAEkR,OAEEK,EAAAA,EAAAA,IADC,sEAEcF,GAEf,QAEQ,gBAAEviB,EAAF,EAAEA,OAAF,OAAcmhB,EAAkBnhB,O,0RCzD1C0iB,EAAgB,SAACtV,GACrB,GAAoD,yBAA5C,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMuV,2BAA2BjV,YACnC,MAAM,IAAIkV,WAAW,iBAEvB,cAAOxV,QAAP,IAAOA,OAAP,EAAOA,EAAMuV,4BAgBTE,EAAkB,SAAC1I,GACvB,MAAO,CAEL2I,WAAYxxB,OAAO4P,KAAKiZ,GAAclS,MAAK,SAAClR,GAAD,OAAQojB,EAAapjB,MAChEgsB,WAAY5I,EACZlpB,KAAM,UACN+xB,YAAa,CAACC,UAAW,EAAGnJ,OAAQ,MAYlCoJ,EAA2B,SAC/BC,EACAxb,GAEA,OAAQA,EAAO+T,MACb,IAAK,QACH,OAAOmH,EAAgBlb,EAAOob,YAChC,IAAK,yBACH,OAAO,kBAAII,GAAX,IAAsBL,UAAWnb,EAAO/I,UAC1C,IAAK,QACH,OAAO,kBAAIukB,GAAX,IAAsBlyB,KAAM,gBAC9B,IAAK,sBACH,IAAO+xB,EAAeG,EAAfH,YACP,OAAO,kBACFG,GADL,IAEElyB,KAAM,cACN+xB,aAAY,kBAAKA,GAAN,IAAmBC,UAAWD,EAAYC,UAAY,MAGrE,IAAK,oBACH,IAAOD,EAAeG,EAAfH,YACP,OAAO,kBACFG,GADL,IAEElyB,KAAM,cACN+xB,aAAY,kBACPA,GADM,IAETC,UAAWD,EAAYC,UAAY,EACnCnJ,QAAO,kBAAKkJ,EAAYlJ,QAAlB,cAA2BnS,EAAO5Q,GAAK4Q,EAAOoS,YAI1D,IAAK,WACH,OAAO,kBAAIoJ,GAAX,IAAsBlyB,KAAM,gBAIrBmyB,EAAoB,SAAC5oB,GAChC,IAAO8Y,EAA6C9Y,EAA7C8Y,OAAQ4G,EAAqC1f,EAArC0f,QAASN,EAA4Bpf,EAA5Bof,WAAYO,EAAgB3f,EAAhB2f,aAI9B4I,EAAapsB,EAAAA,OAA2BwjB,GAE9C,EAA0BxjB,EAAAA,WACxBusB,EACAH,EAAW9kB,QACX4kB,GAHF,eAAOxlB,EAAP,KAAcgmB,EAAd,KAMMC,EAAQhyB,OAAO4P,KAAK7D,EAAM0lB,YAAYxwB,OAG5CoE,EAAAA,WAAgB,WACV2c,GACF+P,EAAS,CAAC3H,KAAM,QAASqH,WAAYA,EAAW9kB,YAEjD,CAACqV,IAIJ3c,EAAAA,WAAgB,WACT2c,IACHyP,EAAW9kB,QAAUkc,KAEtB,CAAC7G,EAAQ6G,IAEZ,OAAoBoJ,EAAAA,EAAAA,GAA+BC,EAAAA,IAA5CC,GAAP,eACMC,EAASrmB,EAAMylB,UACjBa,EAAAA,GAAAA,6BACAA,EAAAA,GAAAA,eAEEC,EAAM,mCAAG,4FACbP,EAAS,CAAC3H,KAAM,UAEVmI,EAAUvyB,OAAO4P,KAAK7D,EAAM0lB,YACzBtY,EAAK,EAJD,YAIIA,EAAKoZ,EAAQtxB,QAJjB,wBAKL6U,EAAQyc,EAAQpZ,GALX,SAMUgZ,EAAU,CAACvW,UAAW,CAAC9F,MAAAA,EAAO0c,gBAAiBJ,KANzD,gBAQyC,yBAA5C,QAFDtW,EANI,EAMJA,YAEC,IAAJA,OAAA,EAAAA,EAAMuV,2BAA2BjV,YACnC2V,EAAS,CAAC3H,KAAM,wBAEhB2H,EAAS,CAAC3H,KAAM,oBAAqB3kB,GAAIqQ,EAAO2S,MAAO2I,EAActV,KAX5D,QAIyB3C,IAJzB,uBAeb4Y,EAAS,CAAC3H,KAAM,aAChB9B,EAAWvc,EAAM2lB,aAhBJ,4CAAH,qDAmBNe,EAAgB,SAACC,GACrBX,EAAS,CAAC3H,KAAM,yBAA0B9c,QAASolB,EAAM9oB,OAAO0D,WAG5DqlB,EAAe3yB,OAAO4P,KAAK7D,EAAM0lB,YAAY9a,MAAK,SAAClR,GAAD,OAAQsG,EAAM0lB,WAAWhsB,MAsK3EmtB,EAAiC,gBAAf7mB,EAAMpM,KAE9B,OACE,UAAC,KAAD,CACEqiB,OAAQA,EACR7L,MAAM,iBACN0c,kBAAmBD,EACnBE,qBAAsBF,EACtBhK,QAASA,EALX,WAOE,SAAC,KAAD,WACE,UAAC,IAAD,CAAOjX,UAAU,SAASC,QAAS,GAAnC,UA/KkB,WACtB,OAAQ7F,EAAMpM,MACZ,IAAK,UACH,OAAKqyB,GAUH,UAAC,IAAD,CAAOrgB,UAAU,SAASC,QAAS,GAAnC,WACE,mCACMogB,EADN,YAEc,IAAVA,EAAc,MAAQ,OAF1B,oDAKA,yBACGW,GACC,iCACE,SAAC,IAAD,CACErlB,QAASvB,EAAMylB,UACf5R,KAAK,QACL7X,MAAM,gCACNxC,SAAUktB,IAEX1mB,EAAMylB,WACL,UAAC,IAAD,CAAKjkB,KAAM,CAAC6P,QAAS,OAAQzL,UAAW,MAAOY,IAAK,GAAIf,OAAQ,CAAC/G,IAAK,GAAtE,WACE,SAAC,KAAD,CAAMhL,KAAK,UAAU0S,MAAOrJ,EAAAA,EAAAA,aAC5B,4BACE,yCADF,wEAKA,SAGN,UAAC,IAAD,CAAO6I,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,KAAD,CAAMnS,KAAK,UAAU0S,MAAOrJ,EAAAA,EAAAA,aAC5B,4BACE,yCADF,8EApCN,UAAC,IAAD,CAAO6I,UAAU,SAASC,QAAS,GAAnC,WACE,gEACA,2FA2CR,IAAK,cACL,IAAK,YACH,IAAMtM,EAAQ0sB,EAAQ,EAAIjmB,EAAM2lB,YAAYC,UAAYK,EAAQ,EAChE,OACE,UAAC,IAAD,CAAOrgB,UAAU,SAASC,QAAS,EAAnC,WACE,yBAAM7F,EAAMylB,UAAY,4BAAyB,uBACjD,SAAC,KAAD,CAAa7I,OAAO,UAAUrjB,MAAOY,KAAK0C,IAAI,GAAKtD,GAAQgc,QAAShc,EAAQ,IAC5D,gBAAfyG,EAAMpM,MACL,SAAC,IAAD,CAAiB+c,QAAQ,8DACvB,QAGV,QACE,OAAO,MAiHJqW,GArEiB,WACxB,GAAmB,YAAfhnB,EAAMpM,KACR,OAAO,KAGT,GAAmB,gBAAfoM,EAAMpM,KACR,OAAO,iGAGT,IAAM6oB,EAASzc,EAAM2lB,YAAYlJ,OAC3BwK,EAAahzB,OAAO4P,KAAK4Y,GAAQvnB,OACjCgyB,EAAelnB,EAAM2lB,YAAYC,UAAYqB,EAEnD,OACE,UAAC,IAAD,CAAOrhB,UAAU,SAASC,QAAS,EAAnC,UACGqhB,GACC,UAAC,IAAD,CAAOthB,UAAU,MAAMC,QAAS,EAAGK,WAAW,aAA9C,WACE,SAAC,KAAD,CAAMxS,KAAK,eAAe0S,MAAOrJ,EAAAA,EAAAA,YACjC,yBACGiD,EAAMylB,UAAN,8CAC0CyB,EAD1C,6BAEoB,IAAjBA,EAAqB,MAArB,OAFH,sDAG6CA,EAH7C,2BAIkB,IAAjBA,EAAqB,MAArB,OAJD,UAOH,KACHD,GACC,UAAC,IAAD,CAAOrhB,UAAU,SAASC,QAAS,EAAnC,WACE,UAAC,IAAD,CAAOD,UAAU,MAAMC,QAAS,EAAGK,WAAW,aAA9C,WACE,SAAC,KAAD,CAAMxS,KAAK,UAAU0S,MAAOrJ,EAAAA,EAAAA,aAC5B,yBACGiD,EAAMylB,UAAN,0CACsCwB,EADtC,YAEoB,IAAfA,EAAmB,MAAQ,OAFhC,iDAIwCA,EAJxC,YAKoB,IAAfA,EAAmB,MAAQ,OALhC,WASL,wBACGhzB,OAAO4P,KAAK4Y,GAAQlgB,KAAI,SAACwN,GAAD,aACvB,yBACE,UAAC,IAAD,CAAOnE,UAAU,MAAMC,QAAS,EAAhC,WACE,SAAC,KAAD,UAAOkE,EAAM4D,MAAM,EAAG,KACrB8O,EAAO1S,IAAS,mCAAM0S,EAAO1S,UAAb,aAAM,EAAe4G,UAAiB,SAHlD5G,WASb,QAkBDod,SAGL,SAAC,KAAD,UAjHY,WACd,OAAQnnB,EAAMpM,MACZ,IAAK,UACH,OAAKqyB,GASH,iCACE,SAAC,KAAD,CAAQrJ,OAAO,OAAO7iB,QAAS8iB,EAA/B,qBAGA,SAAC,KAAD,CAAQD,OAAO,SAAS7iB,QAASwsB,EAAjC,mBACMvmB,EAAMylB,UAAY,wBAA0B,YADlD,cACoEQ,EADpE,YAEc,IAAVA,EAAc,MAAQ,eAb1B,SAAC,KAAD,CAAQrJ,OAAO,OAAO7iB,QAAS8iB,EAA/B,gBAkBN,IAAK,cACH,OACE,SAAC,KAAD,CAAQD,OAAO,SAASla,UAAQ,EAAhC,SACG1C,EAAMylB,UAAN,4CACiCQ,EADjC,YACoD,IAAVA,EAAc,MAAQ,OADhE,wCAEqBA,EAFrB,YAEwC,IAAVA,EAAc,MAAQ,OAFpD,UAKP,IAAK,YACH,OACE,SAAC,KAAD,CAAQrJ,OAAO,UAAU7iB,QAAS8iB,EAAlC,mBAgFWpjB,U,2SCpRf2tB,EAA0B,SAACC,EAAc/zB,GAC7C,IAAMg0B,EAAOh0B,EAAM4B,OAAS,EAExBwR,EAAc2gB,EAClB,GAAqB,IAAjB/zB,EAAM4B,OACR,OAAOwR,EAGT,IAAM6gB,EAASj0B,EAAMiJ,KAIlB,SAACnG,GAAD,MAAQ,CACToxB,QAASpxB,EAAEhC,OAAO2X,QAAO,SAAC0b,EAAK3c,GAAN,OAAY2c,EAAM3c,EAAExW,UAAUY,SAAQ,GAC/DwyB,SAAUtxB,EAAE1B,QAAQqX,QAAO,SAAC0b,EAAK3c,GAAN,OAAY2c,EAAM3c,EAAElW,WAAWM,SAAQ,GAClExB,KAAM0C,EAAE1C,SAGV,GAAa,IAAT4zB,EAAY,CACd,IAAMK,EAAUJ,EAAO/iB,MAAK,SAACC,EAAGf,GAAJ,OAAUA,EAAEgkB,SAAWjjB,EAAEijB,YAAU,GAC/DhhB,EAAW,UAAMA,EAAN,iBAA0BihB,EAASj0B,KAAnC,YACN,GAAa,IAAT4zB,EAAY,CACrB,IAAMK,EAAUJ,EAAO/iB,MAAK,SAACC,EAAGf,GAAJ,OAAUA,EAAEgkB,SAAWjjB,EAAEijB,YAAU,GAC/DhhB,EAAW,UAAMA,EAAN,iBAA0BihB,EAASj0B,KAAnC,WACN,GAAa,IAAT4zB,EAAY,CACrB,IAAMK,EAAUJ,EAAO/iB,MAAK,SAACC,EAAGf,GAAJ,OAAUA,EAAE8jB,QAAU/iB,EAAE+iB,WAAS,GAC7D9gB,EAAW,UAAMA,EAAN,mBAA4BihB,EAASj0B,KAArC,KAEb,OAAOgT,GAGHkhB,EAAsB,SAAChL,GAC3B,OAAQA,GACN,IAAK,SACH,OAAO7f,EAAAA,EAAAA,OACT,IAAK,UACH,OAAOA,EAAAA,EAAAA,SACT,IAAK,UACH,OAAOA,EAAAA,EAAAA,UAGT,QACE,OAAOA,EAAAA,EAAAA,UAuCA0J,EAAkBnN,EAAAA,KAC7BA,EAAAA,YAAiB,SAAC6D,EAA6BuW,GAAS,IAAD,EACrD,EAA4Bpa,EAAAA,SAA4C,MAAxE,eAAOuuB,EAAP,KAAeC,EAAf,KACA,EAA8BxuB,EAAAA,UAAwB,GAAtD,eAAOyuB,EAAP,KAAgBC,EAAhB,KACA,EAAwC1uB,EAAAA,SAAuB6D,EAAM5D,OAArE,eAAO0uB,EAAP,KAAqBC,EAArB,KACMC,EAAW7uB,EAAAA,OAA+B,MAC1C8uB,EAAuBjrB,EAAMirB,uBAAwB,EAE3D9uB,EAAAA,WAAgB,WAId4uB,EAAgB/qB,EAAM5D,SACrB,CAAC4D,EAAM5D,QAEV,IAAM8uB,EAAa,sCAAsCxyB,KAAKoyB,GAE9D,EAA4CI,GAAc,GAA1D,eAASC,EAAT,KAAiBC,EAAjB,KAAkCC,EAAlC,KACMC,EAAcnvB,EAAAA,SAClB,kBAtDmB,SACvBivB,EACAj1B,EACAk1B,GAEA,IADG,EACGE,EAA8Bp1B,EAAMiJ,KAAI,SAAC9I,GAC7C,IAAMk1B,EAAYl1B,EACZm1B,EACJD,EAAUE,YAAkD,6BAApCF,EAAUE,WAAWxY,WAE/C,MAAO,CAAC3c,KAAMD,EAAKC,KAAMk1B,QAAAA,MANxB,UASgBF,GAThB,IASH,2BAA8B,CAAC,IAApBj1B,EAAmB,SACxBiF,EAAAA,EAAAA,IAAcjF,EAAKC,OACrBg1B,EAAU7uB,KAAK,CAACnG,MAAM8C,EAAAA,EAAAA,IAAuB/C,EAAKC,MAAOk1B,QAASn1B,EAAKm1B,WAXxE,8BAeH,IAAME,EAAgB,OAAGP,QAAH,IAAGA,OAAH,EAAGA,EAAiBQ,cACpCC,EACJF,IAAqBN,EACjBS,GAAAA,CAAKP,GACFlkB,OACArO,QAAO,SAACuK,GAAD,OAAOA,EAAEhN,KAAKq1B,cAAcxyB,WAAWuyB,MACjD,GAGN,OAAwB,IAApBE,EAAS9zB,QAAgB8zB,EAAS,GAAGt1B,KAAKq1B,gBAAkBD,EACvD,GAGFE,EAsBGE,CAAiBX,EAAiBprB,EAAM7J,MAAOk1B,KACrD,CAACD,EAAiBprB,EAAM7J,MAAOk1B,IAG3BW,EAAsB,SAACC,GAC3B,IAAMC,EAAYhB,EAAaJ,EAAa5Q,OAAO,EAAGgR,EAAWiB,OAAS,GAC1EpB,EAAgBmB,EAAYf,EAAZ,WAAyBc,EAAzB,KAAyCZ,IAG3DlvB,EAAAA,WAAgB,WACd,GAAKuuB,EAAL,CAIA,IAAM0B,EAAMd,EAAYlsB,KAAI,SAACkI,GAAD,OAAOA,EAAE/Q,QAAMmZ,WAAU,SAACpI,GAAD,OAAOA,IAAMojB,EAAO2B,QAIrEC,GAAmB,IAATF,EAAaA,EAAM1B,EAAOrrB,IAExC,GADAitB,EAAUtvB,KAAK0C,IAAI,EAAG1C,KAAKiE,IAAIqqB,EAAYvzB,OAAS,EAAGu0B,IAClDhB,EAAYgB,GAAjB,CAGA,IAAMC,EAAWjB,EAAYgB,GAAS/1B,KAElC+1B,IAAY5B,EAAOrrB,KAAOktB,IAAa7B,EAAO2B,MAChD1B,EAAU,CAAC0B,KAAME,EAAUltB,IAAKitB,QAEjC,CAAC5B,EAAQY,IAEZnvB,EAAAA,oBAA0Boa,GAAK,iBAAO,CACpCne,MADoC,WAE9B4yB,EAASvnB,SACXunB,EAASvnB,QAAQrL,aAKvB,IAyBMo0B,EAA2BrwB,EAAAA,OAA6B,MAE9DA,EAAAA,WAAgB,WACd,IAAMswB,EAAgB,SAACjD,GACrB,IAAMkD,EAA+BF,EAAyB/oB,QACxDkpB,EAAe3B,EAASvnB,QACvB/C,EAAU8oB,EAAV9oB,OAEP,GAAKuqB,GAK6B,MAAhCyB,GACgB,MAAhBC,GACEjsB,aAAkBksB,KAHtB,CASA,IAAMC,EAAwBH,EAA6B7rB,SAASH,GACpEmqB,EAAWgC,GAEqBF,EAAa9rB,SAASH,IAEpDisB,EAAav0B,UAMjB,OAFA8I,SAASC,iBAAiB,QAASsrB,GAE5B,WACLvrB,SAASG,oBAAoB,QAASorB,MAEvC,CAACxB,IAEJ,IAAM6B,GAAchC,GAAgB,QAAU9qB,EAAM5D,OAAS,KACvD2wB,EAAoB/sB,EAAMgtB,cAAgB,IAAM,GAEhDC,EAAcjtB,EAAMktB,gBACxB,UAACC,EAAD,CAAaC,SAAUnC,EAAvB,qBACMjzB,EAAAA,EAAAA,GAAcgI,EAAM7J,MAAO20B,GAAc5yB,IAAIH,OADnD,kBAEE,UAAC,KAAD,CACE2I,OAAO,SACP3B,MAAO,CAACmV,QAAS,OAAQnL,WAAY,SAAUM,IAAK,GACpDlJ,YAAa,SAACC,GAAD,OAAOA,EAAEG,cAAc8sB,SACpCjgB,IAAIkgB,EAAAA,EAAAA,KAAsB,kBACrBttB,EAAMktB,eADc,IAEvBtZ,aAAa,GAAD,OAAK5T,EAAMktB,cAActZ,aAAzB,YAAyCmZ,GAAzC,OAA6DjC,MAN7E,4BASgB,SAAC,KAAD,CAAM7hB,MAAOrJ,EAAAA,EAAAA,KAAarJ,KAAK,sBAKnD,OACE,UAAC,IAAD,CAAK8N,KAAM,CAACoE,UAAW,MAAOM,WAAY,SAAUM,IAAK,GAAzD,WACE,SAAC,IAAD,CACEkkB,cAAetC,EACfnS,OAAQ8R,EACR9iB,SAAU9H,EAAMwtB,iBAAmB,WACnC5lB,QACE0jB,EAAYvzB,QACV,SAAC,KAAD,CAAMgH,MAAO,CAACJ,MAAOqB,EAAMrB,OAAS,QAApC,SACG2sB,EAAY9a,MAAM,EAAG,IAAIpR,KAAI,SAAC6sB,GAAD,OAC5B,SAAC,KAAD,CACEzvB,KAAMyvB,EAAWR,QAAU,MAAQ,KAEnCY,KAAMJ,EAAW11B,KACjBm0B,SAAQA,GAASA,EAAO2B,OAASJ,EAAW11B,KAC5C4J,YAAa,SAACC,GACZA,EAAEye,iBACFze,EAAEqtB,kBACFzB,EAAoBC,EAAW11B,QAN5B01B,EAAW11B,YAYtB,mBAtBN,UA0BE,iBAAKwI,MAAO,CAAC+I,SAAU,YAAayO,IAAKiW,EAAzC,WACE,SAAC,KAAD,CACEjnB,SAAUvF,EAAMuF,SAChBnJ,MAAO0uB,EACPtuB,KAAK,cACLkxB,YAAajD,EAAoBzqB,EAAMyf,QACvCkO,UAAW3tB,EAAM2tB,UACjBpkB,YAAa0gB,EAAwBjqB,EAAMuJ,YAAavJ,EAAM7J,OAC9DkG,SAAU,SAAC+D,GACT2qB,EAAgB3qB,EAAEM,OAAOtE,OACzB4D,EAAM4tB,kBAAoB5tB,EAAM3D,SAAS+D,EAAEM,OAAOtE,QAEpDyxB,QAAS,WAAO,IAAD,EACR5C,GAEHJ,GAAW,GAEb,UAAA7qB,EAAM6tB,eAAN,cAAA7tB,IAEF8tB,OAAQ,WAAO,IAAD,EACP7C,GAEHJ,GAAW,GAEb7qB,EAAM3D,SAASyuB,GACf,UAAA9qB,EAAM8tB,cAAN,cAAA9tB,EAAe8qB,IAEjBiD,UAzIQ,SAAC3tB,GAAiC,IAAD,EACnC,UAAVA,EAAExB,KAA6B,WAAVwB,EAAExB,KAA8B,QAAVwB,EAAExB,MAC3C8rB,GAAUA,EAAO2B,MACnBL,EAAoBtB,EAAO2B,MAC3BjsB,EAAEye,iBACFze,EAAEqtB,mBAEFrtB,EAAEG,cAAcytB,OAElBrD,EAAU,OAKZ,IAAMpZ,EAAQ,CAAC0c,UAAW,EAAGC,SAAU,GAAG9tB,EAAExB,KAC5C,GAAI2S,GAAS+Z,EAAYvzB,OAAS,EAAG,CACnCqI,EAAEye,iBACF,IAAIxf,GAAOqrB,EAASA,EAAOrrB,KAAO,GAAKkS,EACvClS,EAAMrC,KAAK0C,IAAI,EAAG1C,KAAKiE,IAAI5B,EAAKisB,EAAYvzB,OAAS,IACrD4yB,EAAU,CAAC0B,KAAMf,EAAYjsB,GAAK9I,KAAM8I,IAAAA,IAG1C,UAAAW,EAAM+tB,iBAAN,cAAA/tB,EAAkBI,IAoHVrB,MAAO,CACLJ,MAAOqB,EAAMrB,OAAS,OACtBwvB,aAAcvD,GAAWkC,EAAa,GAAK,IAE7ChuB,UAAWkB,EAAMlB,UACjByX,IAAKyU,IAENJ,GAAWkC,IAAc,SAACsB,EAAD,oBACzBxD,GACC5qB,EAAMktB,gBACLjC,GACC,UAACoD,EAAD,YACE,UAAC,IAAD,CAAKhqB,KAAM,CAACoE,UAAW,MAAOM,WAAY,SAAUM,IAAK,GAAzD,WACE,SAAC,IAAD,CACExK,MAAM,oBACNuF,QAAO,UAAEpE,EAAMgtB,qBAAR,SACP3wB,SAAU,WAAO,IAAD,EACd,UAAA2D,EAAMsuB,wBAAN,cAAAtuB,IAEF2c,OAAO,YAET,SAAC,IAAD,CACE/U,QAAQ,uDACR4U,UAAU,QAFZ,UAIE,SAAC,KAAD,CAAMjmB,KAAK,OAAO0S,MAAOrJ,EAAAA,EAAAA,eAG5BqtB,KAGHA,QAIPjtB,EAAMwJ,UACJxJ,EAAMwJ,QAAQnL,MAAK,SAAC2b,GAAD,OAAOA,EAAE5d,QAAU0uB,MACrC,SAAC,KAAD,CACEtuB,MAAM,SAAC,KAAD,CAAMjG,KAAK,WACjBg4B,WAAW,SAAC,KAAD,CAAMh4B,KAAK,WACtBqG,QAAS,kBAAMoD,EAAM3D,SAAS,MAC9BojB,OAAO,UAGT,SAAC,IAAD,CACE3X,SAAS,MACTF,SACE,SAAC,KAAD,UACG5H,EAAMwJ,QAAQpK,KAAI,SAACovB,GAAD,OACjB,SAAC,KAAD,CAEEnC,KAAMmC,EAAOj4B,KACb4J,YAAa,SAACC,GACZA,EAAEye,iBACFze,EAAEqtB,kBACFztB,EAAM3D,SAASmyB,EAAOpyB,SALnBoyB,EAAOj4B,WANtB,UAkBE,SAAC,KAAD,CACEiG,MAAM,SAAC,KAAD,CAAMjG,KAAK,WACjBg4B,WAAW,SAAC,KAAD,CAAMh4B,KAAK,gBACtBkpB,OAAO,mBAQrB,SAACgP,EAAWC,GAAZ,OACED,EAAUt4B,QAAUu4B,EAAUv4B,OAC9Bs4B,EAAU9vB,QAAU+vB,EAAU/vB,OAC9B8vB,EAAUryB,QAAUsyB,EAAUtyB,OAC9BkQ,GAAAA,CAAQmiB,EAAUjlB,QAASklB,EAAUllB,YAGnC6kB,EAAa1uB,EAAAA,GAAAA,IAAAA,WAAH,uEAAGA,CAAH,0PAUAC,EAAAA,EAAAA,MACLA,EAAAA,EAAAA,SAMLutB,GAAcxtB,EAAAA,EAAAA,IAAO0uB,GAAV,mFAAG1uB,CAAH,uBACD,SAACqa,GAAD,OAAQA,EAAEoT,SAAW,EAAI,KAGnCgB,EAAYzuB,EAAAA,GAAAA,IAAAA,WAAH,sEAAGA,CAAH,wJAKOC,EAAAA,EAAAA,QACNA,EAAAA,EAAAA,MAGLA,EAAAA,EAAAA,U,yFCxbEmhB,EAAsB,SACjChU,GAEA,IAAOvK,GAAWmsB,EAAAA,EAAAA,MAAXnsB,QAEDse,EAAY3kB,EAAAA,SAAc,WAC9B,IAAK4Q,EACH,OAAO,KAGT,IAAM6G,EAAe7G,EAAI6G,aAEnBgb,EAAS7hB,EAAIqU,iBAEnB,IAAKwN,EACH,OAAO,KAGT,IAAMlT,EAAQ,OAAGkT,QAAH,IAAGA,OAAH,EAAGA,EAAQpN,uBACnBjrB,EAAI,OAAGq4B,QAAH,IAAGA,OAAH,EAAGA,EAAQrN,eAEfvlB,EAAQwG,EAAQnE,MACpB,SAACukB,GAAD,OAAYA,EAAOiM,WAAWt4B,OAASA,GAAQqsB,EAAOkM,mBAAmBv4B,OAASmlB,KAIpF,OAAO1f,IAAS+yB,EAAAA,EAAAA,GAAqB/yB,EAAO4X,GAAgB5X,EAAQ,OACnE,CAACwG,EAASuK,IAEPiiB,EAAkB7yB,EAAAA,SAAc,WAAO,IAAD,EAC1C,IAAK4Q,EACH,OAAO,KAGT,IAAM6G,EAAe7G,EAAI6G,aAInBqb,EAAU,UAAGliB,EAAImiB,gCAAP,QAAmCniB,EAAIiU,mBAGvD,GAAIpN,GAAgBqb,EAAY,CAC9B,IAAMD,GAAkBG,EAAAA,EAAAA,GAA2B3sB,EAASoR,EAAcqb,GAC1E,GAAID,EAAgBj3B,OAClB,OAAOi3B,EAIX,OAAO,OACN,CAACxsB,EAASuK,IAEPqiB,EAAsBjzB,EAAAA,SAAc,WACxC,IAAK4Q,EACH,OAAO,KAGT,IAAM6G,EAAe7G,EAAI6G,aAGnByb,GAAkBF,EAAAA,EAAAA,GAA2B3sB,EAASoR,GAC5D,OAAOyb,EAAgBt3B,OAASs3B,EAAkB,OACjD,CAAC7sB,EAASuK,IAEb,GAAI+T,EAAW,CACb,GAAIkO,EAAiB,CACnB,IAAMM,EAAuBN,EAAgB3wB,MAC3C,SAACkxB,GAAD,OACEA,EAAWV,WAAWt4B,OAASuqB,EAAU+N,WAAWt4B,MACpDg5B,EAAWT,mBAAmBv4B,OAASuqB,EAAUgO,mBAAmBv4B,QAExE,GAAI+4B,EACF,MAAO,CAACtzB,MAAOszB,EAAsBpO,KAAM,uBAI/C,MAAO,CAACllB,MAAO8kB,EAAWI,KAAM,eAGlC,OAAI8N,EACK,CAAChzB,MAAOgzB,EAAgB,GAAI9N,KAAM,iBAGvCkO,EACK,CAACpzB,MAAOozB,EAAoB,GAAIlO,KAAM,sBAGxC,O,kIChFIrkB,EAAc,SAA4BmD,GACrD,IAAOrD,EAAiCqD,EAAjCrD,YAAaL,EAAoB0D,EAApB1D,QAASM,EAAWoD,EAAXpD,QAC7B,OACE,SAAC,KAAD,UACGN,EAAQ8C,KAAI,SAACowB,GACZ,IAAOjzB,EAA4BizB,EAA5BjzB,GAAIC,EAAwBgzB,EAAxBhzB,KAAMqC,EAAkB2wB,EAAlB3wB,MAAOpC,EAAW+yB,EAAX/yB,QAClBgzB,EAAQ,OAAG9yB,QAAH,IAAGA,OAAH,EAAGA,EAAa+yB,IAAInzB,GAC5BozB,GACJ,SAAC,IAAD,CAEEC,UAAWH,EAAW7vB,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,MACvCiwB,UAAWJ,EAAW7vB,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,QACvCpD,KACEA,GAAO,SAAC,KAAD,CAAMjG,KAAMiG,EAAMyM,MAAOwmB,EAAW7vB,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,UAAqB,KAEnFf,MAAOA,EACPjC,QAAS,SAACwD,GAAD,OAAOxD,EAAQL,EAAI6D,KAPvB7D,GAWT,OAAIE,GAEA,SAAC,IAAD,CAASmL,QAASnL,EAASqL,SAAS,MAApC,SACG6nB,GAD4CpzB,GAM5CozB,S,8JCnCFG,EAA4D,SAAC,GAKnE,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEA,OACE,UAAC9Z,EAAD,YACE,SAAC,KAAD,CAAQ7Q,UAAWwqB,EAAevzB,MAAM,SAAC,KAAD,CAAMjG,KAAK,eAAiBqG,QAASqzB,EAA7E,uBAGA,SAAC,KAAD,CACE1qB,UAAWyqB,EACXzB,WAAW,SAAC,KAAD,CAAMh4B,KAAK,kBACtBqG,QAASszB,EAHX,sBAWOC,EAAyD,SAAC,GAKhE,IAJLJ,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEA,OACE,UAAC9Z,EAAD,YACE,SAAC,KAAD,CAAQ5Z,MAAM,SAAC,KAAD,CAAMjG,KAAK,eAAiBgP,UAAWwqB,EAAenzB,QAASqzB,EAA7E,UACE,iBAAMnxB,UAAU,uBAAhB,sBAEF,SAAC,KAAD,CACEyvB,WAAW,SAAC,KAAD,CAAMh4B,KAAK,kBACtBgP,UAAWyqB,EACXpzB,QAASszB,EAHX,UAKE,iBAAMpxB,UAAU,uBAAhB,yBAMKsX,EAA0BzW,EAAAA,GAAAA,IAAAA,WAAH,mFAAGA,CAAH,uF,wLC9CvBywB,EAAuD,SAAC,GAG9D,IAAD,IAFJR,UAAAA,OAEI,MAFQhwB,EAAAA,EAAAA,QAER,EADD2nB,GACC,YACJ,OAAO,SAAC8I,GAAD,kBAAkB9I,GAAlB,IAAwB9H,OAAO,OAAOvf,WAAY0vB,MAStCU,EAAAA,GAAAA,OAEd,IAAM7uB,GAAewmB,EAAAA,EAAAA,IAAH,y0BAIC,SAACjO,GAAD,OAAOA,EAAE9Z,cAKT,SAAC8Z,GAAD,OAAOA,EAAE9Z,aAcXN,EAAAA,EAAAA,QACNA,EAAAA,EAAAA,MAGQA,EAAAA,EAAAA,QAKNA,EAAAA,EAAAA,SAUdywB,IAHoB1wB,EAAAA,EAAAA,IAAO2wB,EAAAA,IAAV,gFAAG3wB,CAAH,QACnB8B,IAEiB9B,EAAAA,EAAAA,IAAO4wB,EAAAA,IAAV,2EAAG5wB,CAAH,QACd8B,K,0OC7CSiI,EAAb,0CAIE,WAAY1J,GAAkC,IAAD,mBAC3C,cAAMA,IAYRwwB,aAAe,SAAC9Z,GACd,EAAK5T,SAAS,CAAC4T,KAAAA,IACfY,OAAOkG,aAAaC,QAAQ,EAAK5a,MAAMjE,IAAvC,UAA+C8X,KAZ/C,IAAM9X,EAAG,4BAAwB,EAAKoB,MAAM2J,YACtCvN,EAAQkb,OAAOkG,aAAaiT,QAAQ7xB,GACtC8X,EAAO7e,OAAOuE,GALyB,OAM7B,OAAVA,GAAkBs0B,MAAMha,MAC1BA,EAAO,EAAK1W,MAAM8J,qBAGpB,EAAKjH,MAAQ,CAAC6T,KAAAA,EAAM9X,IAAAA,EAAK+xB,UAAU,GAVQ,EAJ/C,qCAsBE,WAAU,IAAD,OACP,EAAsCn6B,KAAKwJ,MAApC4wB,EAAP,EAAOA,aAAc/mB,EAArB,EAAqBA,MAAOE,EAA5B,EAA4BA,OAC5B,EAAgCvT,KAAKqM,MAAxBguB,EAAb,EAAOna,KAAaia,EAApB,EAAoBA,SACd/mB,EAAOpT,KAAKwJ,MAAM4J,MAAQ,aAE1BknB,EAAuC,CAACC,WAAY,GACpDC,EAAYjnB,EAAS8mB,EAAQ,IAYnC,MARa,eAATjnB,GACFknB,EAAgB7c,SAAW2c,EAC3BE,EAAgBnyB,MAAhB,eAAgCqyB,EAAhC,eAnDoB,EAmDpB,SAEAF,EAAgBG,UAAYL,EAC5BE,EAAgBrxB,OAAhB,eAAiCuxB,EAAjC,eAtDoB,EAsDpB,SAIA,UAACE,EAAD,CAAWtnB,KAAMA,EAAMrN,GAAG,wBAAwBo0B,SAAUA,EAA5D,WACE,gBAAK7xB,UAAU,cAAcC,MAAO+xB,EAApC,SACGjnB,KAEH,SAACsnB,EAAD,CACEvnB,KAAMA,EACN+mB,SAAUA,EACVS,cAAe,SAACT,GAAD,OAAc,EAAK7tB,SAAS,CAAC6tB,SAAAA,KAC5CU,OAAQ76B,KAAKg6B,gBAEf,gBAAK1xB,UAAU,cAAcC,MAAO,CAACsF,KAAM,GAA3C,SACG0F,WApDX,GAAyC5N,EAAAA,WAkEnCg1B,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GA8BH,OA9BGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJ5a,IAAMpa,EAAAA,YAAA,EAENgE,YAAc,SAACC,GACbA,EAAEye,iBAEF,EAAK7e,MAAMoxB,eAAc,GAEzB,IAAMrT,EAAc,SAACyL,GAAuB,IAAD,EACnCza,EAAM,UAAG,EAAKwH,IAAI9S,eAAZ,aAAG,EAAkBjD,QAAQ,0BACzC,GAAKuO,EAAL,CAGA,IAAMuiB,EAAaviB,EAAOtO,wBAEpB8wB,EACgB,eAApB,EAAKvxB,MAAM4J,KAC8B,KAAnC4f,EAAMgI,QAAUF,EAAWtzB,MAAeszB,EAAW3yB,MACnB,KAAlC6qB,EAAMiI,QAAUH,EAAW/vB,KAAc+vB,EAAW7xB,OAE5D,EAAKO,MAAMqxB,OAAOr0B,KAAKiE,IAAI,IAAKjE,KAAK0C,IAAI,EAAG6xB,OAQ9CrwB,SAASC,iBAAiB,YAAa4c,GACvC7c,SAASC,iBAAiB,WANR,SAAZ6c,IACJ,EAAKhe,MAAMoxB,eAAc,GACzBlwB,SAASG,oBAAoB,YAAa0c,GAC1C7c,SAASG,oBAAoB,UAAW2c,OAI3C,EAUA,OAVA,8BAED,WACE,IAAM0T,EAAUC,EAAen7B,KAAKwJ,MAAM4J,MACpCgoB,EAAUC,EAAer7B,KAAKwJ,MAAM4J,MAC1C,OACE,SAAC8nB,EAAD,CAASf,SAAUn6B,KAAKwJ,MAAM2wB,SAAUpa,IAAK/f,KAAK+f,IAAlD,UACE,SAACqb,EAAD,CAASzxB,YAAa3J,KAAK2J,oBAGhC,EAxCGgxB,CAAqBh1B,EAAAA,WAgDd21B,EAA2B,SAAC,GAAyC,IAAxC9a,EAAuC,EAAvCA,UAAWpN,EAA4B,EAA5BA,KAWnD,OACE,SAAC,IAAD,CACEtN,QAAS,CACP,CACEC,GAAI,aACJC,KAAe,aAAToN,EAAsB,iBAAmB,kBAC/CnN,QAAkB,aAATmN,EAAsB,qBAAuB,uBAExD,CACErN,GAAI,QACJC,KAAM,kBACNC,QAAS,mBAEX,CACEF,GAAI,cACJC,KAAe,aAAToN,EAAsB,oBAAsB,mBAClDnN,QAAkB,aAATmN,EAAsB,wBAA0B,yBAG7DhN,QA7BY,SAACL,GAAgB,IAAD,EAC1Bma,EAAO,GACA,eAAPna,EACFma,EAAO,IACS,gBAAPna,IACTma,EAAO,GAET,UAAAM,EAAUvT,eAAV,SAAmB+sB,aAAa9Z,OAgCvBqb,EAAoB,SAAC,GAAyC,IAAD,EAAvC/a,EAAuC,EAAvCA,UAAWpN,EAA4B,EAA5BA,KAC5C,EAAgCzN,EAAAA,SAAmC,WAAnE,eAAO61B,EAAP,KAAiBC,EAAjB,KACMC,IAAiB,UAAAlb,EAAUvT,eAAV,eAAmBZ,MAAM6T,OAAQ,GAAK,IAE7D,EAAwBva,EAAAA,SAAwB+1B,GAAhD,eAAOzZ,EAAP,KAAaC,EAAb,KAGA,OAFAvc,EAAAA,WAAgB,kBAAMuc,EAAQwZ,KAAgB,CAACA,KAG7C,SAAC,KAAD,CACExH,OAAQjS,EACRxL,MAAM,qBACNzQ,MACE,SAAC,KAAD,CACEjG,KACW,eAATqT,EACI6O,EACE,mBACA,mBACF,sBAIV7b,QAAS,WACP,GAAKoa,EAAUvT,QAAf,CAGA,IAAMA,EAAUuT,EAAUvT,QAAQZ,MAAM6T,KACpCjT,EAAU,IACZwuB,EAAYxuB,GACZiV,GAAQ,GACR1B,EAAUvT,QAAQ+sB,aAAa,OAE/B9X,GAAQ,GACR1B,EAAUvT,QAAQ+sB,aACH,YAAbwB,EAAyBhb,EAAUvT,QAAQzD,MAAM8J,oBAAsBkoB,SAW7EL,EAAiB,CACrB7oB,WAAYnJ,EAAAA,GAAAA,IAAAA,WAAF,2EAAEA,CAAF,8FAzNc,GA4NR,SAACqa,GAAD,OAAQA,EAAE2W,SAAW/wB,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,eAKtDiJ,SAAUlJ,EAAAA,GAAAA,IAAAA,WAAF,yEAAEA,CAAF,8FAjOgB,GAoOR,SAACqa,GAAD,OAAQA,EAAE2W,SAAW/wB,EAAAA,EAAAA,QAAiBA,EAAAA,EAAAA,gBAOlDiyB,EAAiB,CACrB/oB,WAAYnJ,EAAAA,GAAAA,IAAAA,WAAF,2EAAEA,CAAF,oFAQVkJ,SAAUlJ,EAAAA,GAAAA,IAAAA,WAAF,yEAAEA,CAAF,oFAUJuxB,EAAYvxB,EAAAA,GAAAA,IAAAA,WAAH,0EAAGA,CAAH,wNAMK,kBAAsB,aAAtB,EAAEiK,KAAiC,SAAW,SAQhD,gBAAEA,EAAF,EAAEA,KAAF,SAAQ+mB,SACT,OAAkB,eAAT/mB,EAAwB,QAAU,YAIlD,kBAAsB,aAAtB,EAAEA,KAAiC,SAAW","sources":["../../core/src/app/GraphQueryImpl.ts","../../core/src/gantt/Constants.ts","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/useViewport.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/runs/LogLevel.ts","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/runs/NavitationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/ui/GraphQueryInput.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../ui/src/components/ButtonGroup.tsx","../../ui/src/components/CursorControls.tsx","../../ui/src/components/Slider.tsx","../../ui/src/components/SplitPanelContainer.tsx"],"sourcesContent":["import {isPlannedDynamicStep, dynamicKeyWithoutIndex} from '../gantt/DynamicStepSupport';\n\nconst MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, applyingEmptyDefault: false, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY ? [] : items,\n      applyingEmptyDefault: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY,\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d>\\[\\?\\]\\\"_\\/-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause, itemName, descendentsClause] = parts;\n\n    const itemsMatching = items.filter((s) => {\n      if (isPlannedDynamicStep(itemName.replace(/\\\"/g, ''))) {\n        // When unresolved dynamic step (i.e ends with `[?]`) is selected, match all dynamic steps\n        return s.name.startsWith(dynamicKeyWithoutIndex(itemName.replace(/\\\"/g, '')));\n      } else {\n        return /\\\".*\\\"/.test(itemName)\n          ? s.name === itemName.replace(/\\\"/g, '')\n          : s.name.includes(itemName);\n      }\n    });\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n    applyingEmptyDefault: false,\n  };\n}\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 16;\nexport const TOP_INSET = 16;\nexport const BOTTOM_INSET = 16;\nexport const FLAT_INSET_FROM_PARENT = 16;\nexport const BOX_HEIGHT = 34;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","/**\n * Ops with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function isPlannedDynamicStep(stepKey: string) {\n  return stepKey.endsWith('[?]');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0];\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]);\n}\n","import {\n  Box,\n  Checkbox,\n  Colors,\n  FontFamily,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerWrapper,\n  SplitPanelContainer,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {withMiddleTruncation} from '../app/Util';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {CancelRunButton} from '../runs/RunActionButtons';\nimport {\n  EMPTY_RUN_METADATA,\n  IRunMetadataDict,\n  IStepMetadata,\n  IStepState,\n} from '../runs/RunMetadataProvider';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {StepSelection} from '../runs/StepSelection';\nimport {RunFragment} from '../runs/types/RunFragments.types';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\n\nimport {\n  BOTTOM_INSET,\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n  TOP_INSET,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  BuildLayoutParams,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\nimport {useViewport} from './useViewport';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                updateOptions({hideWaiting: e.target.checked})\n              }\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  // When the pipeline is running we want the graph to be steadily moving, even if logs\n  // aren't arriving. To achieve this we determine an update interval based on the scale\n  // and advance a \"now\" value that is used as the currnet time when adjusting the layout\n  // to account for run metadata below.\n\n  // Because renders can happen \"out of band\" of our update interval, we set a timer for\n  // \"time until the next interval after the current nowMs\".\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket) {\n      return;\n    }\n\n    if (metadata?.exitedAt) {\n      if (nowMs !== metadata.exitedAt) {\n        setNowMs(metadata.exitedAt);\n      }\n      return;\n    }\n\n    const renderInterval = Math.max(CSS_DURATION, 2 / scale);\n    const now = Date.now();\n\n    const timeUntilIntervalElasped = renderInterval - (now - nowMs);\n    const timeout = setTimeout(() => setNowMs(now), timeUntilIntervalElasped);\n    return () => clearTimeout(timeout);\n  }, [scale, nowMs, lostWebsocket, metadata]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => TOP_INSET + b.y * BOX_HEIGHT + BOTTOM_INSET)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 70, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.Yellow500}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <Icon name=\"warning\" color={Colors.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <FilterInputsBackgroundBox flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <GraphQueryInput\n            items={props.graph}\n            value={props.selection.query}\n            placeholder=\"Type a step subset\"\n            onChange={props.onUpdateQuery}\n            presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n            className={selection.keys.length > 0 ? 'has-step' : ''}\n          />\n          <Checkbox\n            checked={options.hideUnselectedSteps}\n            label=\"Hide unselected steps\"\n            onChange={props.onChange}\n          />\n        </FilterInputsBackgroundBox>\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FC<GanttChartViewportContentsProps> = (props) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.node.name}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.state === IStepState.RUNNING ? <Spinner purpose=\"body-text\" /> : undefined}\n        {truncatedBoxLabel(box)}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: TOP_INSET + a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: TOP_INSET + a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = TOP_INSET + (straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY);\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? TOP_INSET + b.y * BOX_HEIGHT + bCenterY\n    : TOP_INSET + b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.Gray700 : Colors.Gray300\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY - LINE_SIZE / 2,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\nfunction truncatedBoxLabel(box: GanttChartBox) {\n  if (box.width <= BOX_SHOW_LABEL_WIDTH_CUTOFF) {\n    return undefined;\n  }\n\n  // Note: The constants here must be in sync with the CSS immediately below\n  const totalPadding = 7 + (box.state === IStepState.RUNNING ? 16 : 0);\n  const maxLength = (box.width - totalPadding) / 6.2;\n\n  return withMiddleTruncation(box.node.name, {maxLength});\n}\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.White};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 12px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    /* Note: padding + font changes may also impact truncatedBoxLabel */\n\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 3px;\n    padding-right: 1px;\n    border: 1px solid transparent;\n    border-radius: 2px;\n    white-space: nowrap;\n    font-family: ${FontFamily.monospace};\n    font-size: 12.5px;\n    font-weight: 700;\n    line-height: 15px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.Gray900};\n      box-shadow: 0 0 0 2px ${Colors.Yellow500};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.Gray800};\n    }\n    &.dynamic {\n      filter: brightness(125%);\n    }\n\n    ${SpinnerWrapper} {\n      display: inline-block;\n      vertical-align: text-bottom;\n      padding-right: 4px;\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.Yellow700};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst FilterInputsBackgroundBox = styled(Box)`\n  background: radial-gradient(${Colors.Gray50} 0%, rgba(255, 255, 255, 0) 100%);\n  padding: 15px 15px 0px 15px;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <div style={{margin: 'auto', marginTop: 100}}>\n          <Spinner purpose=\"section\" />\n        </div>\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({run}: {run: RunFragment}) => (\n  <GanttChartContainer>\n    <OptionsContainer style={{justifyContent: 'flex-end'}}>\n      <CancelRunButton run={run} />\n    </OptionsContainer>\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"arrow_forward\"\n          title=\"Run queued\"\n          description=\"This run is queued for execution and will start soon.\"\n          action={\n            <Link to={runsPathWithFilters([{token: 'status', value: 'QUEUED'}])}>\n              View queued runs\n            </Link>\n          }\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={run.id}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {ButtonGroup, ButtonGroupItem} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FC<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => {\n  const buttons: ButtonGroupItem<GanttChartMode>[] = [\n    {id: GanttChartMode.FLAT, icon: 'gantt_flat', tooltip: 'Flat view'},\n    {id: GanttChartMode.WATERFALL, icon: 'gantt_waterfall', tooltip: 'Waterfall view'},\n  ];\n\n  if (!hideTimedMode) {\n    buttons.push({\n      id: GanttChartMode.WATERFALL_TIMED,\n      icon: 'timer',\n      tooltip: 'Timed view',\n    });\n  }\n\n  const activeItems = React.useMemo(() => new Set([value]), [value]);\n  const onClick = React.useCallback((id: GanttChartMode) => onChange(id), [onChange]);\n\n  return <ButtonGroup activeItems={activeItems} buttons={buttons} onClick={onClick} />;\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst msToMinuteLabel = (ms: number) => `${Math.round(ms / 1000 / 60)}m`;\nconst msToSecondLabel = (ms: number) => `${(ms / 1000).toFixed(0)}s`;\nconst msToSubsecondLabel = (ms: number) => `${(ms / 1000).toFixed(1)}s`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_LABEL_WIDTH = 56;\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: msToSubsecondLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactChild[] = [];\n  const lines: React.ReactChild[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > 80);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n    const firstTickX = Math.floor(viewport.left / pxPerTick) * pxPerTick;\n\n    for (let x = firstTickX; x < firstTickX + viewport.width; x += pxPerTick) {\n      if (x - viewport.left < 10) {\n        continue;\n      }\n      const ms = x / pxPerMs;\n      const key = `${ms.toFixed(2)}`;\n      const label = tickLabels(ms);\n      lines.push(<div className=\"line\" key={key} style={{left: x, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: x - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key=\"highlight-duration\"\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0] - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1] - highlightedMs[0]) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1] - highlightedMs[0])}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {msToSubsecondLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs + (idx === 0 ? -1 : 0), transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TICKS_ROW_HEIGHT = 32;\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 7px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: ${TICKS_ROW_HEIGHT}px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n  }\n  & .tick.duration {\n    color: ${Colors.Gray500};\n    background: ${Colors.Gray100};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    height: ${TICKS_ROW_HEIGHT + 2}px;\n    background: ${Colors.Gray900};\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #f0f0f0;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 2px solid ${Colors.Gray900};\n    z-index: 1111;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: ${Colors.Gray50};\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: ${TICKS_ROW_HEIGHT}px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.White};\n  display: flex;\n  color: ${Colors.Gray500};\n  font-size: 13px;\n  font-family: ${FontFamily.monospace};\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: ${TICKS_ROW_HEIGHT}px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {Colors, SliderStyles} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FC<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <ZoomSliderContainer\n      $fillColor={Colors.Gray600}\n      className=\"bp3-slider bp3-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp3-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp3-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp3-slider-track\">\n        <div className=\"bp3-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp3-slider-progress bp3-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp3-slider-axis\" />\n      <span\n        className=\"bp3-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </ZoomSliderContainer>\n  );\n});\n\nconst ZoomSliderContainer = styled.div`\n  ${SliderStyles}\n`;\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\nconst validateSavedMode = (storedValue: string) =>\n  storedValue === GanttChartMode.FLAT ||\n  storedValue === GanttChartMode.WATERFALL ||\n  storedValue === GanttChartMode.WATERFALL_TIMED\n    ? storedValue\n    : GanttChartMode.WATERFALL_TIMED;\n\nexport const useGanttChartMode = () => {\n  return useStateWithStorage(GANTT_CHART_MODE_KEY, validateSavedMode);\n};\n","import {Colors} from '@dagster-io/ui';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  FLAT_INSET_FROM_PARENT,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n} from './Constants';\nimport {isDynamicStep, isPlannedDynamicStep, dynamicKeyWithoutIndex} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => deepen(child, box.x + box.width + BOX_SPACING_X));\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      parents[child.node.name] = parents[child.node.name] || [];\n      parents[child.node.name].push(box);\n    });\n  });\n\n  boxes.forEach((box) => {\n    boxesByY[`${box.y}`] = boxesByY[`${box.y}`] || [];\n    boxesByY[`${box.y}`].push(box);\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    for (let idx = boxes.length - 1; idx > 0; idx--) {\n      const box = boxes[idx];\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`];\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`].filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`].push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y];\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0].root ? LEFT_INSET : parents[row[0].node.name][0].x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureSubtreeAfterParentInArray = (\n  boxes: GanttChartBox[],\n  parent: GanttChartBox,\n  box: GanttChartBox,\n) => {\n  const parentIdx = boxes.indexOf(parent);\n  const boxIdx = boxes.indexOf(box);\n  if (parentIdx <= boxIdx) {\n    return;\n  }\n  boxes.splice(boxIdx, 1);\n  boxes.splice(parentIdx, 0, box);\n\n  // Note: It's important that we don't cache or pass indexes during this recursion.\n  // Visiting a child below could cause boxes earlier in the array to be pulled to the\n  // end. Our `parentIdx` above is not stable within the box.children loop below.\n\n  for (const child of box.children) {\n    ensureSubtreeAfterParentInArray(boxes, box, child);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n\n      // Hide the unresolved node if any its resolved node exists\n      if (\n        isPlannedDynamicStep(depNode.name) &&\n        seen\n          .filter((n) => isDynamicStep(n))\n          .some((n) => dynamicKeyWithoutIndex(n) === dynamicKeyWithoutIndex(depNode.name))\n      ) {\n        continue;\n      }\n\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx];\n        ensureSubtreeAfterParentInArray(boxes, box, depBox);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst TextColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue700,\n};\nconst BackgroundColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue100,\n  [IStepState.RETRY_REQUESTED]: Colors.Yellow500,\n  [IStepState.SUCCEEDED]: Colors.Green500,\n  [IStepState.FAILED]: Colors.Red500,\n  [IStepState.SKIPPED]: Colors.Gray500,\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `#2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      color: TextColorForStates[state] || '#fff',\n      background: BackgroundColorForStates[state] || Colors.Gray400,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.Gray600,\n    background: Colors.White,\n    border: `1.5px dotted ${Colors.Gray500}`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n  for (let ii = 0; ii < boxes.length; ii++) {\n    nextBoxes[ii].children = boxes[ii].children.map((c) => map.get(c));\n  }\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii];\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let ii = 0; ii < runBoxes.length - 1; ii++) {\n      runBoxes[ii].children = [runBoxes[ii + 1]];\n    }\n    runBoxes[runBoxes.length - 1].children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (_box, run) => ({\n      x: run ? xForMs(run.start) : 0,\n      width: run ? widthForMs(run) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k].state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `\"${k}\"`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonLink, Colors, Group, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunStateSummary, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\n\nimport {\n  RunGroupPanelQuery,\n  RunGroupPanelQueryVariables,\n  RunGroupPanelRunFragment,\n} from './types/RunGroupPanel.types';\n\ntype Run = RunGroupPanelRunFragment;\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string; runStatusLastChangedAt: number}> = ({\n  runId,\n  runStatusLastChangedAt,\n}) => {\n  const queryResult = useQuery<RunGroupPanelQuery, RunGroupPanelQueryVariables>(\n    RUN_GROUP_PANEL_QUERY,\n    {\n      variables: {runId},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const {data, refetch} = queryResult;\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  // Because the RunGroupPanel makes it's own query for the runs and their statuses,\n  // the log + gantt chart UI can show that the run is \"completed\" for up to 15s before\n  // it's reflected in the sidebar. Observing this single timestamp from our parent\n  // allows us to refetch data immediately when the run's exitedAt / startedAt, etc. is set.\n  React.useEffect(() => {\n    if (runStatusLastChangedAt) {\n      refetch();\n    }\n  }, [refetch, runStatusLastChangedAt]);\n\n  const group = data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return null;\n  }\n\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.Blue500}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return null;\n  }\n\n  const unsorted: Run[] = [];\n  (group.runs || []).forEach((run: Run | null) => {\n    if (run && typeof run.startTime === 'number') {\n      unsorted.push(run);\n    }\n  });\n  const runs: Run[] = unsorted.sort((a: Run, b: Run) => {\n    return (a.startTime || 0) - (b.startTime || 0);\n  });\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun key={g.runId} to={`/runs/${g.runId}`} selected={g.runId === runId}>\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatusIndicator status={g.status} />\n              </Box>\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.Gray700,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.runId.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.Gray700,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunStateSummary run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nconst RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      __typename\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          ...RunGroupPanelRun\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  fragment RunGroupPanelRun on Run {\n    id\n    runId\n    parentRunId\n    status\n    stepKeysToExecute\n    pipelineName\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.Gray100 : Colors.White)};\n  padding: 4px 6px 4px 24px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.Gray100 : Colors.Gray50)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 1px;\n  background: ${Colors.Gray200};\n  left: 29px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.Dark};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: Colors.Gray300,\n      color: Colors.White,\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 12,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\n\nimport {GanttChartMode} from './Constants';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FC<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored, succeeded} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    const succeeded = [];\n    for (const key of keys) {\n      const state = metadata.steps[key].state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n          break;\n        case IStepState.SUCCEEDED:\n          succeeded.push(key);\n      }\n    }\n    return {preparing, executing, errored, succeeded};\n  }, [metadata]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  const isFinished = metadata?.exitedAt && metadata.exitedAt > 0;\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel\n        runId={runId}\n        runStatusLastChangedAt={\n          metadata.exitedAt || metadata.startedProcessAt || metadata.startedPipelineAt || 0\n        }\n      />\n      <SidebarSection title={`${isFinished ? 'Not executed' : 'Preparing'} (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection collapsedByDefault title={`Succeeded (${succeeded.length})`}>\n        <div>\n          {succeeded.length === 0 ? (\n            <EmptyNotice>No steps have succeeded</EmptyNotice>\n          ) : (\n            succeeded.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n    </div>\n  );\n};\n\nconst StepItem: React.FC<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = step.end ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position=\"bottom\"\n          content=\"Unknown step state. Run completed without step execution completion.\"\n        >\n          <StepStatusDot>?</StepStatusDot>\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(metadata.steps[name]?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 32px;\n  height: 32px;\n  padding: 0 14px 0 6px;\n  gap: 6px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  font-size: 12px;\n  ${({selected}) => selected && `background: ${Colors.Gray100};`}\n\n  &:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n\nexport const StepStatusDot = styled.div`\n  width: 12px;\n  height: 12px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 12px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.Gray400};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  min-height: 32px;\n  font-size: 12px;\n  padding: 8px 24px;\n  color: ${Colors.Gray400};\n`;\n","import {Colors, CursorControlsContainer} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\n  min-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 5px 12px 5px 24px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.White};\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  z-index: 3;\n\n  ${CursorControlsContainer} {\n    margin-top: 0;\n    gap: 8px;\n\n    @media (max-width: 1100px) {\n      & .hideable-button-text {\n        display: none;\n      }\n      & div[role='img'] {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const OptionsDivider = styled.div`\n  width: 30px;\n  height: 25px;\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 30px;\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nimport {GanttViewport} from './Constants';\n\ntype ContainerRef = {\n  element: HTMLDivElement;\n  __sized: boolean;\n};\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<ContainerRef>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      const container = ref.current;\n      if (container) {\n        const {element, __sized} = container;\n        if (!__sized && next.width !== 0 && initialOffset) {\n          const targetOffset = initialOffset(element);\n          element.scrollTop = targetOffset.top;\n          element.scrollLeft = targetOffset.left;\n          setOffset(targetOffset);\n          container.__sized = true;\n        }\n      }\n    };\n\n    const container = ref.current;\n    const {element} = container;\n\n    let resizeObserver: any;\n    if (element instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: any) => {\n          if (entries[0].target === element) {\n            onApplySize({width: element.clientWidth, height: element.clientHeight});\n          }\n        });\n        resizeObserver.observe(element);\n      } else {\n        console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        onApplySize({width: element.clientWidth, height: element.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const element = ref.current?.element;\n\n    if (!element) {\n      return;\n    }\n\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(element.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(element.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      element.scrollTop = targetOffset.top;\n      element.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          element.scrollTop = v.top;\n          element.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: HTMLDivElement) => {\n      if (el === ref.current?.element) {\n        return;\n      }\n\n      ref.current = {\n        element: el,\n        __sized: false,\n      };\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as GanttViewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {Collapse} from '@blueprintjs/core';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\ninterface ISidebarSectionProps {\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const [open, setOpen] = useStateWithStorage<boolean>(`sidebar-${title}`, (storedValue) =>\n    storedValue === true || storedValue === false ? storedValue : !collapsedByDefault,\n  );\n\n  const onToggle = React.useCallback(() => {\n    setOpen((o) => !o);\n  }, [setOpen]);\n\n  return (\n    <>\n      <CollapsingHeaderBar onClick={onToggle}>\n        <SidebarTitleTextWrap>{title}</SidebarTitleTextWrap>\n        <Icon\n          size={24}\n          name=\"arrow_drop_down\"\n          style={{transform: open ? 'rotate(0)' : 'rotate(-90deg)'}}\n        />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </>\n  );\n};\n\nexport const SidebarTitleTextWrap = styled.div`\n  overflow: hidden;\n  min-width: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0 0 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :first-child:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.Gray400};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst CollapsingHeaderBar = styled.div`\n  height: 32px;\n  padding-left: 24px;\n  padding-right: 8px;\n  background: ${Colors.White};\n  border-top: 1px solid ${Colors.KeylineGray};\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  color: ${Colors.Gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 700;\n  user-select: none;\n`;\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","import {Colors, FontFamily, MetadataTable, Tooltip} from '@dagster-io/ui';\nimport memoize from 'lodash/memoize';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTimeWithMsec} from '../app/Util';\nimport {TimezoneContext} from '../app/time/TimezoneContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: Colors.White,\n    [LogLevel.INFO]: Colors.White,\n    [LogLevel.EVENT]: Colors.White,\n    [LogLevel.WARNING]: Colors.Yellow50,\n    [LogLevel.ERROR]: Colors.Red50,\n    [LogLevel.CRITICAL]: Colors.Red50,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.Gray400,\n      [LogLevel.INFO]: Colors.Gray900,\n      [LogLevel.EVENT]: Colors.Gray900,\n      [LogLevel.WARNING]: Colors.Yellow700,\n      [LogLevel.ERROR]: Colors.Red500,\n      [LogLevel.CRITICAL]: Colors.Red500,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.Gray900};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.KeylineGray};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const OpColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <OpColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={OpColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </OpColumnContainer>\n  );\n};\n\nexport const OpColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px 12px;\n`;\n\nconst OpColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.Dark,\n  background: Colors.White,\n  border: `1px solid ${Colors.Gray100}`,\n  top: -8,\n  left: 1,\n});\n\nconst timestampFormat = memoize((timezone: string) => {\n  return new Intl.DateTimeFormat(navigator.language, {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n  });\n});\n\nconst fractionalSecondFormat = memoize((locale: string) => {\n  return new Intl.NumberFormat(locale, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  });\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{\n  time: string | null;\n  runStartTime?: number;\n  stepStartTime?: number;\n}> = React.memo((props) => {\n  const {time, runStartTime, stepStartTime} = props;\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const [timezone] = React.useContext(TimezoneContext);\n  const canShowTooltip = typeof time === 'string' && typeof runStartTime === 'number';\n\n  const timeString = () => {\n    if (time) {\n      const timeNumber = Number(time);\n      const main = timestampFormat(timezone).format(new Date(timeNumber));\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSecondFormat(navigator.language).format(fractionalSec).slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n  const runElapsedTime = formatElapsedTimeWithMsec(Number(time) - (runStartTime || 0));\n  const stepElapsedTime = formatElapsedTimeWithMsec(Number(time) - (stepStartTime || 0));\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Tooltip\n        canShow={canShowTooltip}\n        content={\n          <MetadataTable\n            spacing={0}\n            dark\n            rows={[\n              {\n                key: 'Since start of run',\n                value: (\n                  <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                    {runElapsedTime}\n                  </span>\n                ),\n              },\n              stepStartTime\n                ? {\n                    key: 'Since start of step',\n                    value: (\n                      <span style={{fontFamily: FontFamily.monospace, fontSize: '13px'}}>\n                        {stepElapsedTime}\n                      </span>\n                    ),\n                  }\n                : null,\n            ]}\n          />\n        }\n        placement=\"left\"\n      >\n        <Link to={href}>{timeString()}</Link>\n      </Tooltip>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 12px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.Gray400};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn: React.FC = (props) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.Gray400};\n  padding: 4px;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 117,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends React.HTMLProps<HTMLDivElement> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nexport class Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        <HeaderLabel>{this.props.children}</HeaderLabel>\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        Op\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n      <Header\n        handleSide=\"left\"\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n    </HeadersContainer>\n  );\n};\n\nexport const HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  z-index: 2;\n`;\n\nexport const HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 0 12px;\n  line-height: 32px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.Gray400 : Colors.KeylineGray)};\n  }\n`;\n\nconst HeaderLabel = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {Box, Button, Group, IconName, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {usePermissionsDEPRECATED} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../launchpad/LaunchButton';\nimport {buildRepoAddress, buildRepoPathForHuman} from '../workspace/buildRepoAddress';\nimport {repoAddressAsHumanString} from '../workspace/repoAddressAsString';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment} from './types/RunFragments.types';\n\ninterface RunActionButtonsProps {\n  run: RunFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nexport const CancelRunButton: React.FC<{run: RunFragment}> = ({run}) => {\n  const {id: runId, canTerminate} = run;\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = runId && errors[runId];\n      if (error && 'message' in error) {\n        SharedToaster.show({\n          message: error.message,\n          icon: 'error',\n          intent: 'danger',\n        });\n      }\n    },\n    [runId],\n  );\n\n  if (!runId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        icon={<Icon name=\"cancel\" />}\n        intent=\"danger\"\n        disabled={showDialog}\n        onClick={() => setShowDialog(true)}\n      >\n        Terminate\n      </Button>\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[runId]: canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const canRunAllSteps = (run: RunFragment) => doneStatuses.has(run.status);\nexport const canRunFromFailure = (run: RunFragment) =>\n  run.executionPlan && failedStatuses.has(run.status);\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const {canLaunchPipelineReexecution} = usePermissionsDEPRECATED();\n  const pipelineError = usePipelineAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n\n  const currentRunSelection = stepSelectionFromRunTags(run, graph, metadata);\n  const currentRunIsFromFailure = run.tags?.some(\n    (t) => t.key === DagsterTag.IsResumeRetry && t.value === 'true',\n  );\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'cached',\n    scope: '*',\n    title: 'All steps in root run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !canRunAllSteps(run),\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'linear_scale',\n    scope: currentRunSelection?.query || '*',\n    title: 'Same steps',\n    disabled: !currentRunSelection || !(currentRunSelection.finished || currentRunSelection.failed),\n    tooltip: (\n      <div>\n        {!currentRunSelection || !currentRunSelection.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !currentRunSelection.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={currentRunSelection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: currentRunSelection!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'op',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected steps' : 'Selected step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From selected',\n    disabled: !canRunAllSteps(run) || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailureEnabled = canRunFromFailure(run);\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From failure',\n    disabled: !fromFailureEnabled,\n    tooltip: !fromFailureEnabled\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : fromFailureEnabled && currentRunIsFromFailure\n    ? fromFailure\n    : currentRunSelection?.present\n    ? same\n    : null;\n\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (pipelineError?.tooltip) {\n      return pipelineError?.tooltip;\n    }\n    return canLaunchPipelineReexecution.enabled\n      ? undefined\n      : canLaunchPipelineReexecution.disabledReason;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          primary={primary}\n          options={options}\n          title={\n            primary.scope === '*'\n              ? `Re-execute all (*)`\n              : primary.scope\n              ? `Re-execute (${primary.scope})`\n              : `Re-execute ${primary.title}`\n          }\n          tooltip={tooltip()}\n          icon={pipelineError?.icon}\n          disabled={pipelineError?.disabled || !canLaunchPipelineReexecution.enabled}\n        />\n      </Box>\n      {!doneStatuses.has(run.status) ? <CancelRunButton run={run} /> : null}\n    </Group>\n  );\n};\n\nfunction usePipelineAvailabilityErrorForRun(\n  run: RunFragment | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} {\n  const repoMatch = useRepositoryForRun(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the pipeline. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The loaded version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      const originRepoName = run.repositoryOrigin\n        ? repoAddressAsHumanString(\n            buildRepoAddress(\n              run.repositoryOrigin.repositoryName,\n              run.repositoryOrigin.repositoryLocationName,\n            ),\n          )\n        : null;\n\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from ${\n              originRepoName || 'a different code location'\n            }.`}</div>\n            {originRepoName ? (\n              <div>\n                Original definition in: <strong>{originRepoName}</strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the pipeline name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The pipeline \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this pipeline. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in the your definitions.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load definitions for ${buildRepoPathForHuman(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n}\n\nconst StepSelectionDescription: React.FC<{selection: StepSelection | null}> = ({selection}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragments.types';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {StepEventStatus} from '../graphql/types';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\n\nimport {LogsProviderLogs} from './LogsProvider';\nimport {RunContext} from './RunContext';\nimport {RunFragment} from './types/RunFragments.types';\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProvider.types';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown', // run exited without step reaching a final state\n}\n\nconst BOX_EXIT_STATES = [\n  IStepState.RETRY_REQUESTED,\n  IStepState.SUCCEEDED,\n  IStepState.FAILED,\n  IStepState.UNKNOWN,\n];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  fileKey: string;\n  stepKeys: string[];\n  pid?: string;\n  externalUrl?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [fileKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => (logCaptureSteps[stepKey] = {fileKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nconst fromTimestamp = (ts: number | null) => (ts ? Math.floor(ts * 1000) : undefined);\nfunction extractMetadataFromRun(run?: RunFragment): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n  if (!run) {\n    return metadata;\n  }\n  if (run.startTime) {\n    metadata.startedPipelineAt = fromTimestamp(run.startTime);\n  }\n  if (run.endTime) {\n    metadata.exitedAt = fromTimestamp(run.endTime);\n  }\n\n  run.stepStats.forEach((stepStat) => {\n    metadata.steps[stepStat.stepKey] = {\n      // state:\n      // current state\n      state: stepStatusToStepState(stepStat.status),\n\n      // execution start and stop (user-code) inclusive of all retries\n      start: fromTimestamp(stepStat.startTime),\n      end: fromTimestamp(stepStat.endTime),\n\n      // current state + prev state transition times\n      transitions: [],\n\n      // transition times organized into start+stop+exit state pairs.\n      // This is the metadata used to render boxes on the realtime vi.z\n      attempts: stepStat.attempts.map(\n        (attempt, idx) =>\n          ({\n            start: fromTimestamp(attempt.startTime),\n            end: fromTimestamp(attempt.endTime),\n            exitState:\n              idx === stepStat.attempts.length - 1\n                ? stepStatusToStepState(stepStat.status)\n                : IStepState.RETRY_REQUESTED,\n          } as IStepAttempt),\n      ),\n\n      // accumulated metadata\n      markers: stepStat.markers.map((marker, idx) => ({\n        start: fromTimestamp(marker.startTime),\n        end: fromTimestamp(marker.endTime),\n        key: `marker_${idx}`,\n      })),\n    };\n  });\n\n  return metadata;\n}\n\nconst stepStatusToStepState = (status: StepEventStatus | null) => {\n  switch (status) {\n    case StepEventStatus.SUCCESS:\n      return IStepState.SUCCEEDED;\n    case StepEventStatus.FAILURE:\n      return IStepState.FAILED;\n    case StepEventStatus.SKIPPED:\n      return IStepState.SKIPPED;\n    default:\n      return IStepState.UNKNOWN;\n  }\n};\n\nconst refineMarkerEvent = (log: RunMetadataProviderMessageFragment) => {\n  if (\n    log.__typename === 'EngineEvent' ||\n    log.__typename === 'ResourceInitFailureEvent' ||\n    log.__typename === 'ResourceInitStartedEvent' ||\n    log.__typename === 'ResourceInitSuccessEvent' ||\n    log.__typename === 'StepWorkerStartedEvent' ||\n    log.__typename === 'StepWorkerStartingEvent'\n  ) {\n    return log;\n  }\n  return null;\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'RunStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'RunFailureEvent' ||\n      log.__typename === 'RunSuccessEvent' ||\n      log.__typename === 'RunCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (!log.stepKey) {\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(metadata.globalMarkers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.fileKey] = {\n        fileKey: log.fileKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n        externalUrl: log.externalUrl || undefined,\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: IStepState.PREPARING,\n          attempts: [],\n          transitions: [\n            {\n              state: IStepState.PREPARING,\n              time: timestamp,\n            },\n          ],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      const markerEvent = refineMarkerEvent(log);\n      if (markerEvent) {\n        if (markerEvent.markerStart) {\n          upsertMarker(step.markers, markerEvent.markerStart).start = timestamp;\n        }\n        if (markerEvent.markerEnd) {\n          upsertMarker(step.markers, markerEvent.markerEnd).end = timestamp;\n        }\n      }\n\n      if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    // - Each time we see a \"RUNNING\" step transition, we create a new attempt box unless one is open already.\n    // - Each time we see a final step transition, we set it as the end state of the current attempt.\n\n    let attempt: IStepAttempt | null = null;\n    for (const t of step.transitions) {\n      if ((!attempt || attempt.end) && t.state === IStepState.RUNNING) {\n        attempt = {start: t.time};\n        step.attempts.push(attempt);\n      }\n      if (attempt && BOX_EXIT_STATES.includes(t.state)) {\n        attempt.end = t.time;\n        attempt.exitState = t.state;\n      }\n    }\n  }\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: LogsProviderLogs;\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const run = React.useContext(RunContext);\n  const runMetadata = React.useMemo(() => extractMetadataFromRun(run), [run]);\n  const metadata = React.useMemo(\n    () => (logs.loading ? runMetadata : extractMetadataFromLogs(logs.allNodes)),\n    [logs, runMetadata],\n  );\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      fileKey\n      stepKeys\n      pid\n      externalUrl\n    }\n  }\n\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorFragment';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStats.types';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        runId\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Colors, Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../graphql/types';\n\nimport {RunStats} from './RunStats';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nconst RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  STARTING: Colors.Gray400,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../graphql/types';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {TerminateMutation} from './types/RunUtils.types';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\nconst refineToError = (data: TerminateMutation | null | undefined) => {\n  if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n    throw new ErrorEvent('Not an error!');\n  }\n  return data?.terminatePipelineExecution;\n};\n\ntype Error = ReturnType<typeof refineToError> | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<TerminateMutation>(TERMINATE_MUTATION);\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: refineToError(data)});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent, PopoverPosition} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\nimport {GraphExplorerSolidFragment} from '../pipelines/types/GraphExplorer.types';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  popoverPosition?: PopoverPosition;\n  className?: string;\n  disabled?: boolean;\n\n  linkToPreview?: {\n    repoName: string;\n    repoLocation: string;\n    pipelineName: string;\n    isJob: boolean;\n  };\n\n  flattenGraphsEnabled?: boolean;\n  flattenGraphs?: boolean;\n  setFlattenGraphs?: () => void;\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n  autoApplyChanges?: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\ninterface SuggestionItem {\n  name: string;\n  isGraph: boolean;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nconst intentToStrokeColor = (intent: Intent | undefined) => {\n  switch (intent) {\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    case 'primary':\n    default:\n      return Colors.Gray300;\n  }\n};\n\nconst buildSuggestions = (\n  lastElementName: string,\n  items: GraphQueryItem[] | GraphExplorerSolidFragment[],\n  suffix: string,\n) => {\n  const available: SuggestionItem[] = items.map((item) => {\n    const solidItem = item as GraphExplorerSolidFragment;\n    const isGraph =\n      solidItem.definition && solidItem.definition.__typename === 'CompositeSolidDefinition';\n\n    return {name: item.name, isGraph};\n  });\n\n  for (const item of available) {\n    if (isDynamicStep(item.name)) {\n      available.push({name: dynamicKeyWithoutIndex(item.name), isGraph: item.isGraph});\n    }\n  }\n\n  const lastElementLower = lastElementName?.toLowerCase();\n  const matching =\n    lastElementLower && !suffix\n      ? uniq(available)\n          .sort()\n          .filter((n) => n.name.toLowerCase().startsWith(lastElementLower))\n      : [];\n\n  // No need to show a match if our string exactly matches the one suggestion.\n  if (matching.length === 1 && matching[0].name.toLowerCase() === lastElementLower) {\n    return [];\n  }\n\n  return matching;\n};\n\nexport const GraphQueryInput = React.memo(\n  React.forwardRef((props: GraphQueryInputProps, ref) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const flattenGraphsEnabled = props.flattenGraphsEnabled || false;\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]>_\\/-]+)(\\+*\\*?)$/.exec(pendingValue);\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(\n      () => buildSuggestions(lastElementName, props.items, suffix),\n      [lastElementName, props.items, suffix],\n    );\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + `\"${suggestion}\"` + suffix);\n    };\n\n    React.useEffect(() => {\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.map((a) => a.name).findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      if (!suggestions[nextIdx]) {\n        return;\n      }\n      const nextText = suggestions[nextIdx].name;\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    React.useImperativeHandle(ref, () => ({\n      focus() {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      },\n    }));\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        } else {\n          e.currentTarget.blur();\n        }\n        setActive(null);\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx].name, idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const OpSelectionWrapperDivRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n      const clickListener = (event: MouseEvent) => {\n        const OpSelectionWrapperDivElement = OpSelectionWrapperDivRef.current;\n        const inputElement = inputRef.current;\n        const {target} = event;\n\n        if (!flattenGraphsEnabled) {\n          return;\n        }\n        // Make TypeScript happy\n        if (\n          OpSelectionWrapperDivElement == null ||\n          inputElement == null ||\n          !(target instanceof Node)\n        ) {\n          return;\n        }\n\n        // `true` if user clicked on either the `OpSelectionWrapperDivElement` itself, or its descendant\n        const shouldWrapperGetFocus = OpSelectionWrapperDivElement.contains(target);\n        setFocused(shouldWrapperGetFocus);\n\n        const shouldTextInputGetFocus = inputElement.contains(target);\n        if (shouldTextInputGetFocus) {\n          inputElement.focus();\n        }\n      };\n\n      document.addEventListener('click', clickListener);\n\n      return () => {\n        document.removeEventListener('click', clickListener);\n      };\n    }, [flattenGraphsEnabled]);\n\n    const uncomitted = (pendingValue || '*') !== (props.value || '*');\n    const flattenGraphsFlag = props.flattenGraphs ? '!' : '';\n\n    const opCountInfo = props.linkToPreview && (\n      <OpCountWrap $hasWrap={flattenGraphsEnabled}>\n        {`${filterByQuery(props.items, pendingValue).all.length} matching ops`}\n        <Link\n          target=\"_blank\"\n          style={{display: 'flex', alignItems: 'center', gap: 4}}\n          onMouseDown={(e) => e.currentTarget.click()}\n          to={workspacePipelinePath({\n            ...props.linkToPreview,\n            pipelineName: `${props.linkToPreview.pipelineName}~${flattenGraphsFlag}${pendingValue}`,\n          })}\n        >\n          Graph Preview <Icon color={Colors.Link} name=\"open_in_new\" />\n        </Link>\n      </OpCountWrap>\n    );\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <Popover\n          enforceFocus={!flattenGraphsEnabled} // Defer focus to be manually managed\n          isOpen={focused}\n          position={props.popoverPosition || 'top-left'}\n          content={\n            suggestions.length ? (\n              <Menu style={{width: props.width || '24vw'}}>\n                {suggestions.slice(0, 15).map((suggestion) => (\n                  <MenuItem\n                    icon={suggestion.isGraph ? 'job' : 'op'}\n                    key={suggestion.name}\n                    text={suggestion.name}\n                    active={active ? active.text === suggestion.name : false}\n                    onMouseDown={(e: React.MouseEvent<any>) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onConfirmSuggestion(suggestion.name);\n                    }}\n                  />\n                ))}\n              </Menu>\n            ) : (\n              <div />\n            )\n          }\n        >\n          <div style={{position: 'relative'}} ref={OpSelectionWrapperDivRef}>\n            <TextInput\n              disabled={props.disabled}\n              value={pendingValue}\n              icon=\"op_selector\"\n              strokeColor={intentToStrokeColor(props.intent)}\n              autoFocus={props.autoFocus}\n              placeholder={placeholderTextForItems(props.placeholder, props.items)}\n              onChange={(e: React.ChangeEvent<any>) => {\n                setPendingValue(e.target.value);\n                props.autoApplyChanges && props.onChange(e.target.value);\n              }}\n              onFocus={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(true);\n                }\n                props.onFocus?.();\n              }}\n              onBlur={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(false);\n                }\n                props.onChange(pendingValue);\n                props.onBlur?.(pendingValue);\n              }}\n              onKeyDown={onKeyDown}\n              style={{\n                width: props.width || '24vw',\n                paddingRight: focused && uncomitted ? 55 : '',\n              }}\n              className={props.className}\n              ref={inputRef}\n            />\n            {focused && uncomitted && <EnterHint>Enter</EnterHint>}\n            {focused &&\n              props.linkToPreview &&\n              (flattenGraphsEnabled ? (\n                <OpInfoWrap>\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n                    <Checkbox\n                      label=\"Flatten subgraphs\"\n                      checked={props.flattenGraphs ?? false}\n                      onChange={() => {\n                        props.setFlattenGraphs?.();\n                      }}\n                      format=\"switch\"\n                    />\n                    <Tooltip\n                      content=\"Flatten subgraphs to select ops within nested graphs\"\n                      placement=\"right\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                  {opCountInfo}\n                </OpInfoWrap>\n              ) : (\n                opCountInfo\n              ))}\n          </div>\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              icon={<Icon name=\"layers\" />}\n              rightIcon={<Icon name=\"cancel\" />}\n              onClick={() => props.onChange('*')}\n              intent=\"none\"\n            />\n          ) : (\n            <Popover\n              position=\"top\"\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                icon={<Icon name=\"layers\" />}\n                rightIcon={<Icon name=\"expand_less\" />}\n                intent=\"none\"\n              />\n            </Popover>\n          ))}\n      </Box>\n    );\n  }),\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst OpInfoWrap = styled.div`\n  width: 350px;\n  padding: 10px 16px 10px 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  position: absolute;\n  top: 100%;\n  margin-top: 2px;\n  font-size: 0.85rem;\n  background: ${Colors.White};\n  color: ${Colors.Gray600};\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n  left: 0;\n`;\n\nconst OpCountWrap = styled(OpInfoWrap)<{$hasWrap: boolean}>`\n  margin-top: ${(p) => (p.$hasWrap ? 0 : 2)}px;\n`;\n\nconst EnterHint = styled.div`\n  position: absolute;\n  right: 6px;\n  top: 5px;\n  border-radius: 5px;\n  border: 1px solid ${Colors.Gray500};\n  background: ${Colors.White};\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.Gray500};\n  padding: 2px 6px;\n`;\n","import * as React from 'react';\n\nimport {RunFragmentForRepositoryMatchFragment} from '../runs/types/RunFragments.types';\n\nimport {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\n/**\n * Given a Run fragment, find the repository that contains its pipeline.\n */\nexport const useRepositoryForRun = (\n  run: RunFragmentForRepositoryMatchFragment | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n    // Try to match the pipeline name within the specified origin, if possible.\n    const origin = run.repositoryOrigin;\n\n    if (!origin) {\n      return null;\n    }\n\n    const location = origin?.repositoryLocationName;\n    const name = origin?.repositoryName;\n\n    const match = options.find(\n      (option) => option.repository.name === name && option.repositoryLocation.name === location,\n    );\n\n    // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n    return match && repoContainsPipeline(match, pipelineName) ? match : null;\n  }, [options, run]);\n\n  const snapshotMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n    // When jobs are subsetted (with an opSelection or assetSelection), only their\n    // parentPipelineSnapshotId (the id of the pipelineSnapshot that they were subsetted from) will\n    // be found in the repository, so look for that instead.\n    const snapshotId = run.parentPipelineSnapshotId ?? run.pipelineSnapshotId;\n\n    // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n    if (pipelineName && snapshotId) {\n      const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n      if (snapshotMatches.length) {\n        return snapshotMatches;\n      }\n    }\n\n    return null;\n  }, [options, run]);\n\n  const pipelineNameMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n\n    // There is no origin repo. Find any repos that might contain a matching pipeline name.\n    const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n    return possibleMatches.length ? possibleMatches : null;\n  }, [options, run]);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (pipelineNameMatches) {\n    return {match: pipelineNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import * as React from 'react';\n\nimport {BaseButton} from './BaseButton';\nimport {JoinedButtons} from './Button';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Tooltip} from './Tooltip';\n\nexport type ButtonGroupItem<T> = {\n  id: T;\n  label?: React.ReactNode;\n  icon?: IconName;\n  tooltip?: string;\n};\n\ninterface Props<T> {\n  activeItems?: Set<T>;\n  buttons: ButtonGroupItem<T>[];\n  onClick: (id: T, e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const ButtonGroup = <T extends string | number>(props: Props<T>) => {\n  const {activeItems, buttons, onClick} = props;\n  return (\n    <JoinedButtons>\n      {buttons.map((button) => {\n        const {id, icon, label, tooltip} = button;\n        const isActive = activeItems?.has(id);\n        const buttonElement = (\n          <BaseButton\n            key={id}\n            fillColor={isActive ? Colors.Gray200 : Colors.White}\n            textColor={isActive ? Colors.Gray900 : Colors.Gray700}\n            icon={\n              icon ? <Icon name={icon} color={isActive ? Colors.Gray900 : Colors.Gray700} /> : null\n            }\n            label={label}\n            onClick={(e) => onClick(id, e)}\n          />\n        );\n\n        if (tooltip) {\n          return (\n            <Tooltip content={tooltip} position=\"top\" key={id}>\n              {buttonElement}\n            </Tooltip>\n          );\n        }\n\n        return buttonElement;\n      })}\n    </JoinedButtons>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasPrevCursor} onClick={popCursor}>\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasNextCursor}\n        onClick={advanceCursor}\n      >\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Slider as BlueprintSlider,\n  MultiSlider as BlueprintMultiSlider,\n  SliderProps,\n  MultiSliderProps,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\n\nexport const Slider: React.FC<SliderProps & {fillColor?: string}> = ({\n  fillColor = Colors.Gray600,\n  ...rest\n}) => {\n  return <StyledSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nexport const MultiSlider: React.FC<MultiSliderProps & {fillColor?: string}> & {\n  Handle: typeof BlueprintMultiSlider.Handle;\n} = ({fillColor = Colors.Gray600, ...rest}) => {\n  return <StyledMultiSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nMultiSlider.Handle = BlueprintMultiSlider.Handle;\n\nexport const SliderStyles = css<{$fillColor: string}>`\n  .bp3-slider-track {\n    height: 8px;\n    .bp3-slider-progress {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 0.2;\n      height: 8px;\n    }\n    .bp3-slider-progress.bp3-intent-primary {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 1;\n      height: 8px;\n    }\n  }\n  &.bp3-vertical .bp3-slider-track,\n  &.bp3-vertical .bp3-slider-track .bp3-slider-progress {\n    height: initial;\n    width: 8px;\n  }\n  .bp3-slider-handle {\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 2px solid ${Colors.Gray300};\n    background: ${Colors.White};\n    box-shadow: none;\n    &:hover {\n      border: 2px solid ${Colors.Gray400};\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n    }\n\n    .bp3-slider-label {\n      background: ${Colors.Gray900};\n      box-shadow: 0 1px 4px rgba(0,0,0,0.15)\n      padding: 4px 8px;\n    }\n  }\n`;\n\nconst StyledMultiSlider = styled(BlueprintMultiSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\nconst StyledSlider = styled(BlueprintSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {ButtonGroup} from './ButtonGroup';\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nconst DIVIDER_THICKNESS = 2;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode | null; // Note: pass null to hide / animate away the second panel\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size: _size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n    const firstSize = second ? _size : 100;\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const onClick = (id: string) => {\n    let size = 50;\n    if (id === 'first-pane') {\n      size = 100;\n    } else if (id === 'second-pane') {\n      size = 0;\n    }\n    container.current?.onChangeSize(size);\n  };\n\n  return (\n    <ButtonGroup\n      buttons={[\n        {\n          id: 'first-pane',\n          icon: axis === 'vertical' ? 'panel_show_top' : 'panel_show_left',\n          tooltip: axis === 'vertical' ? 'Show only top pane' : 'Show only left pane',\n        },\n        {\n          id: 'split',\n          icon: 'panel_show_both',\n          tooltip: 'Show both panes',\n        },\n        {\n          id: 'second-pane',\n          icon: axis === 'vertical' ? 'panel_show_bottom' : 'panel_show_right',\n          tooltip: axis === 'vertical' ? 'Show only bottom pane' : 'Show only right pane',\n        },\n      ]}\n      onClick={onClick}\n    />\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      active={open}\n      title=\"Toggle second pane\"\n      icon={\n        <Icon\n          name={\n            axis === 'horizontal'\n              ? open\n                ? 'panel_hide_right'\n                : 'panel_show_right'\n              : 'panel_show_bottom'\n          }\n        />\n      }\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\n// Note: -1px margins here let the divider cover the last 1px of the previous box, hiding\n// any scrollbar border it might have.\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-left: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-top: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  overflow: hidden;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n"],"names":["GraphTraverser","items","itemNameMap","forEach","item","name","this","step","depth","results","next","traverse","Object","values","callback","inputs","input","dependsOn","d","itemNamed","solid","outputs","output","dependedBy","expansionDepthForClause","clause","includes","Number","MAX_SAFE_INTEGER","length","filterByQuery","query","all","applyingEmptyDefault","focus","traverser","Set","clauses","split","parts","exec","trim","parentsClause","itemName","descendentsClause","itemsMatching","filter","s","isPlannedDynamicStep","replace","startsWith","dynamicKeyWithoutIndex","test","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","Array","from","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","TOP_INSET","BOTTOM_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","mode","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","isDynamicStep","stepKey","endsWith","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","k","replacePlannedIndex","stepKeyWithIndex","match","highlightTimer","GanttChartModeControl","React","value","onChange","buttons","id","icon","tooltip","push","activeItems","onClick","ButtonGroup","msToMinuteLabel","ms","Math","round","msToSecondLabel","toFixed","msToSubsecondLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","scale","viewport","nowMs","startMs","highlightedMs","layoutSize","transform","left","ticks","lines","pxPerMs","tickConfig","find","t","pxPerTick","firstTickX","floor","x","width","key","label","className","style","TICK_LABEL_WIDTH","TimescaleContainer","TimescaleTicksContainer","formatElapsedTime","map","idx","timeX","labelOffset","TimescaleLinesContainer","height","max","styled","Colors","TICKS_ROW_HEIGHT","FontFamily","ZoomSlider","props","ZoomSliderContainer","$fillColor","onMouseDown","e","initialX","rect","currentTarget","closest","getBoundingClientRect","target","HTMLElement","classList","contains","pageX","onUpdate","nextValue","min","document","addEventListener","onRelease","removeEventListener","right","top","tabIndex","SliderStyles","validateSavedMode","storedValue","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","timestamp","debounced","clearTimeout","setTimeout","dispatchEvent","CustomEvent","detail","GanttChart","graph","onSetSelection","options","selection","toolbarActions","useStateWithStorage","setMode","state","setState","cachedLayout","cachedLayoutParams","graphFiltered","layoutParams","nodes","layout","names","ns","n","join","current","buildLayout","updateOptions","changes","onChangeMode","onUpdateQuery","onDoubleClickStep","GanttChartContainer","v","Checkbox","marginBottom","checked","flex","GanttChartInner","useViewport","containerProps","onMoveToViewport","hoveredStep","setHoveredNodeName","hoveredTime","setHoveredTime","overrideNowTime","Date","now","setNowMs","metadata","rootServerURI","AppContext","WebSocketContext","availability","disabled","status","lostWebsocket","WebSocket","CLOSED","minScale","startedPipelineAt","exp","log","exitedAt","renderInterval","timeout","listener","adjustLayoutWithRunMetadata","EMPTY_RUN_METADATA","boxes","b","y","node","keys","bounds","boundsForBox","maxX","minX","maxY","minY","focusedTime","sortedSelectedSteps","steps","undefined","sort","a","start","firstMeta","lastMeta","end","measurementComplete","content","overflow","position","GanttChartViewportContents","focusedSteps","onClickStep","GraphQueryInputContainer","WebsocketWarning","Box","justifyContent","margin","bottom","Group","direction","spacing","background","padding","vertical","horizontal","alignItems","Icon","color","maxWidth","whiteSpace","FilterInputsBackgroundBox","gap","GraphQueryInput","placeholder","presets","interestingQueriesFor","SplitPanelContainer","identifier","axis","first","firstInitialPercent","second","GanttStatusPanel","onHighlightStep","intersectsViewport","verticalLinesAtXCoord","box","children","child","childIdx","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","evt","onDoubleClick","onMouseEnter","onMouseLeave","boxStyleFor","IStepState","Spinner","purpose","truncatedBoxLabel","markers","marker","aCenterY","bIsDot","bCenterY","straight","border","maxXAvoidingOverlap","borderTop","zIndex","borderRight","isEqual","totalPadding","maxLength","withMiddleTruncation","SpinnerWrapper","GanttChartLoadingState","runId","marginTop","QueuedState","run","NonIdealState","title","description","action","to","runsPathWithFilters","token","params","g","some","i","o","root","roots","addChildren","deepen","parents","boxesByY","changed","highestYParent","onTargetY","r","parentX","willCross","willCauseCrossing","c","bottomY","row","reduce","m","ensureSubtreeAfterParentInArray","parent","parentIdx","indexOf","boxIdx","splice","seen","added","out","dep","depNode","depBoxIdx","findIndex","depBox","TextColorForStates","BackgroundColorForStates","context","positionAndSplitBoxes","positionFor","ii","meta","assign","attempts","runBoxes","runIdx","exitState","slice","WeakMap","nextMarkers","nextBoxes","set","get","cloneLayout","xForMs","time","widthForMs","_box","earliestAllowedX","unstarted","visit","minXForUnstartedChildren","shift","positionUntimedBoxes","globalMarkers","entries","stepBox","_run","Error","errorsQuery","slowStepsQuery","rightmostCompletedBox","subsetTitleForRun","stepsTag","tags","DagsterTag","RunGroupPanel","runStatusLastChangedAt","queryResult","useQuery","RUN_GROUP_PANEL_QUERY","variables","notifyOnNetworkStatusChange","data","refetch","useQueryRefreshAtInterval","FIFTEEN_SECONDS","group","runGroupOrError","__typename","fontSize","ButtonLink","underline","showCustomAlert","body","message","runs","unsorted","startTime","pipelineName","RunGroupRun","selected","ThinLine","marginLeft","minWidth","display","RunTitle","RootTag","gql","PYTHON_ERROR_FRAGMENT","RUN_TIME_FRAGMENT","Link","borderRadius","lineHeight","fontWeight","userSelect","preparing","executing","errored","succeeded","renderStepItem","stepName","StepItem","onHover","isFinished","overflowY","startedProcessAt","EmptyNotice","collapsedByDefault","StepItemContainer","Tooltip","modifiers","preventOverflow","enabled","flip","StepStatusDot","StepLabel","Elapsed","OptionsContainer","CursorControlsContainer","OptionsDivider","OptionsSpacer","ref","offset","setOffset","size","setSize","initialOffset","measureRef","resizeObserver","onApplySize","container","element","__sized","targetOffset","scrollTop","scrollLeft","window","clientWidth","clientHeight","observe","console","warn","disconnect","animation","onScroll","cancel","animated","scrollWidth","scrollHeight","onDone","animate","done","setRef","el","SidebarSection","open","setOpen","onToggle","CollapsingHeaderBar","SidebarTitleTextWrap","isOpen","SidebarTitle","SectionHeader","SectionSmallHeader","SidebarSubhead","SectionItemContainer","LogLevel","DefaultLogLevels","Row","highlighted","level","bgcolorForLevel","StructuredContent","OpColumn","widths","ColumnWidthsContext","String","OpColumnContainer","p","OpColumnTooltipStyle","substr","JSON","stringify","fontFamily","timestampFormat","memoize","timezone","Intl","DateTimeFormat","navigator","language","hour","minute","hourCycle","timeZone","browserTimezone","fractionalSecondFormat","locale","NumberFormat","minimumFractionDigits","maximumFractionDigits","TimestampColumn","runStartTime","stepStartTime","location","useLocation","TimezoneContext","canShowTooltip","href","pathname","qs","runElapsedTime","formatElapsedTimeWithMsec","stepElapsedTime","TimestampColumnContainer","canShow","dark","rows","placement","timeNumber","main","format","fractionalSec","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","_","ColumnWidthsProvider","onWidthsChangedFromContext","columnWidths","localStorage","setItem","onWidthsChanged","Provider","Header","isDragging","screenX","onMouseMove","onMouseUp","onResize","handleSide","dir","isDraggable","HeaderContainer","HeaderDragHandle","side","HeaderLabel","Headers","HeadersContainer","NavigationBlock","handler","preventDefault","returnValue","CancelRunButton","canTerminate","showDialog","setShowDialog","closeDialog","onComplete","terminationState","errors","error","SharedToaster","intent","onClose","selectedRuns","stepSelectionWithState","stepStates","present","failed","finished","every","stepState","canRunAllSteps","doneStatuses","canRunFromFailure","executionPlan","failedStatuses","RunActionButtons","onLaunch","artifactsPersisted","canLaunchPipelineReexecution","usePermissionsDEPRECATED","pipelineError","repoMatch","useRepositoryForRun","pipelineSnapshotId","matchType","type","originRepoName","repositoryOrigin","repoAddressAsHumanString","buildRepoAddress","repositoryName","repositoryLocationName","repoForRun","repoLocationForRun","buildRepoPathForHuman","usePipelineAvailabilityErrorForRun","currentRunSelection","tag","stepSelectionFromRunTags","currentRunIsFromFailure","full","scope","same","StepSelectionDescription","fromSelected","Promise","resolve","selectionAndDownstreamQuery","selectionKeys","fromFailureEnabled","fromFailure","option","preferredRerun","primary","runCount","disabledReason","paddingLeft","RunContext","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","UNKNOWN","firstLogAt","mostRecentLogAt","extractLogCaptureStepsFromLegacySteps","stepKeys","logCaptureSteps","fileKey","fromTimestamp","ts","stepStatusToStepState","StepEventStatus","SKIPPED","refineMarkerEvent","RunMetadataProvider","logs","runMetadata","endTime","stepStats","stepStat","transitions","attempt","extractMetadataFromRun","loading","upsertMarker","f","unshift","upsertState","parseInt","RUNNING","markerEvent","markerStart","markerEnd","pid","externalUrl","PREPARING","operationResult","op","extractMetadataFromLogs","allNodes","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","METADATA_ENTRY_FRAGMENT","RunStats","stats","RUN_STATS_QUERY","RunStatsDetailsContainer","result","pipelineRunOrError","runPath","stepsSucceeded","stepsFailed","materializations","expectations","RUN_STATUS_COLORS","QUEUED","NOT_STARTED","STARTING","MANAGED","STARTED","SUCCESS","FAILURE","CANCELING","CANCELED","SCHEDULED","RunStatusWithStats","rest","interactionKind","hoverOpenDelay","RunStatusIndicator","RunStatusDot","pulse","inProgressStatuses","queuedStatuses","pulseAnimation","keyframes","css","refineToError","terminatePipelineExecution","ErrorEvent","initializeState","mustForce","frozenRuns","termination","completed","terminationDialogReducer","prevState","TerminationDialog","dispatch","count","useMutation","TERMINATE_MUTATION","terminate","policy","TerminateRunPolicy","mutate","runList","terminatePolicy","onToggleForce","event","showCheckbox","canQuicklyClose","canEscapeKeyClose","canOutsideClickClose","progressContent","errorCount","successCount","completionContent","placeholderTextForItems","base","seed","ranked","incount","sum","outcount","example","intentToStrokeColor","active","setActive","focused","setFocused","pendingValue","setPendingValue","inputRef","flattenGraphsEnabled","lastClause","prefix","lastElementName","suffix","suggestions","available","solidItem","isGraph","definition","lastElementLower","toLowerCase","matching","uniq","buildSuggestions","onConfirmSuggestion","suggestion","preceding","index","pos","text","nextIdx","nextText","OpSelectionWrapperDivRef","clickListener","OpSelectionWrapperDivElement","inputElement","Node","shouldWrapperGetFocus","uncomitted","flattenGraphsFlag","flattenGraphs","opCountInfo","linkToPreview","OpCountWrap","$hasWrap","click","workspacePipelinePath","enforceFocus","popoverPosition","stopPropagation","strokeColor","autoFocus","autoApplyChanges","onFocus","onBlur","onKeyDown","blur","ArrowDown","ArrowUp","paddingRight","EnterHint","OpInfoWrap","setFlattenGraphs","rightIcon","preset","prevProps","nextProps","useRepositoryOptions","origin","repository","repositoryLocation","repoContainsPipeline","snapshotMatches","snapshotId","parentPipelineSnapshotId","findRepoContainingPipeline","pipelineNameMatches","possibleMatches","repoAndSnapshotMatch","repoOption","button","isActive","has","buttonElement","fillColor","textColor","CursorPaginationControls","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","CursorHistoryControls","Slider","StyledSlider","BlueprintMultiSlider","BlueprintSlider","onChangeSize","getItem","isNaN","resizing","firstMinSize","_size","firstPaneStyles","flexShrink","firstSize","minHeight","Container","PanelDivider","onSetResizing","onMove","parentRect","firstPanelPercent","clientX","clientY","Wrapper","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","SecondPanelToggle","prevSize","setPrevSize","initialIsOpen"],"sourceRoot":""}